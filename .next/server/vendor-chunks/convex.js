"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/convex";
exports.ids = ["vendor-chunks/convex"];
exports.modules = {

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/http_client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/http_client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexHttpClient: () => (/* binding */ ConvexHttpClient),\n/* harmony export */   STATUS_CODE_BAD_REQUEST: () => (/* binding */ STATUS_CODE_BAD_REQUEST),\n/* harmony export */   STATUS_CODE_OK: () => (/* binding */ STATUS_CODE_OK),\n/* harmony export */   STATUS_CODE_UDF_FAILED: () => (/* binding */ STATUS_CODE_UDF_FAILED),\n/* harmony export */   setFetch: () => (/* binding */ setFetch)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\n\n\n\n\n\nconst STATUS_CODE_OK = 200;\nconst STATUS_CODE_BAD_REQUEST = 400;\nconst STATUS_CODE_UDF_FAILED = 560;\nlet specifiedFetch = void 0;\nfunction setFetch(f) {\n    specifiedFetch = f;\n}\nclass ConvexHttpClient {\n    /**\n   * Create a new {@link ConvexHttpClient}.\n   *\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   */ constructor(address){\n        (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.validateDeploymentUrl)(address);\n        this.address = `${address}/api`;\n        this.debug = true;\n    }\n    /**\n   * Obtain the {@link ConvexHttpClient}'s URL to its backend.\n   *\n   * @returns The URL to the Convex backend, including the client's API version.\n   */ backendUrl() {\n        return this.address;\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   *\n   * Should be called whenever the token changes (i.e. due to expiration and refresh).\n   *\n   * @param value - JWT-encoded OpenID Connect identity token.\n   */ setAuth(value) {\n        this.clearAuth();\n        this.auth = value;\n    }\n    /**\n   * @internal\n   */ setAdminAuth(token) {\n        this.clearAuth();\n        this.adminAuth = token;\n    }\n    /**\n   * Clear the current authentication token if set.\n   */ clearAuth() {\n        this.auth = void 0;\n        this.adminAuth = void 0;\n    }\n    /**\n   * Sets whether the result log lines should be printed on the console or not.\n   *\n   * @internal\n   */ setDebug(debug) {\n        this.debug = debug;\n    }\n    /**\n   * Used to customize the fetch behavior in some runtimes.\n   *\n   * @internal\n   */ setFetchOptions(fetchOptions) {\n        this.fetchOptions = fetchOptions;\n    }\n    /**\n   * Execute a Convex query function.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */ async query(query, ...args) {\n        const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(queryArgs)\n            ]\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/query`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"query\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n    /**\n   * Execute a Convex mutation function.\n   *\n   * @param name - The name of the mutation.\n   * @param args - The arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the mutation's result.\n   */ async mutation(mutation, ...args) {\n        const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(mutation);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(mutationArgs)\n            ]\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/mutation`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"mutation\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n    /**\n   * Execute a Convex action function.\n   *\n   * @param name - The name of the action.\n   * @param args - The arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */ async action(action, ...args) {\n        const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(action);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(actionArgs)\n            ]\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/action`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"action\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n    /**\n   * Execute a Convex function of an unknown type.\n   *\n   * @param name - The name of the function.\n   * @param args - The arguments object for the function. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the function's result.\n   *\n   * @internal\n   */ async function(anyFunction, ...args) {\n        const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = typeof anyFunction === \"string\" ? anyFunction : (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(anyFunction);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(functionArgs)\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/function`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"any\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n}\nfunction forwardErrorData(errorData, error) {\n    error.data = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(errorData);\n    return error;\n} //# sourceMappingURL=http_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* reexport safe */ _sync_client_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient),\n/* harmony export */   ConvexClient: () => (/* reexport safe */ _simple_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexClient),\n/* harmony export */   ConvexHttpClient: () => (/* reexport safe */ _http_client_js__WEBPACK_IMPORTED_MODULE_2__.ConvexHttpClient)\n/* harmony export */ });\n/* harmony import */ var _sync_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sync/client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\");\n/* harmony import */ var _simple_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./simple_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\");\n/* harmony import */ var _http_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7QUFDdUM7QUFDRjtBQUNFLENBQ3BELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanM/NWYyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCB7IEJhc2VDb252ZXhDbGllbnQgfSBmcm9tIFwiLi9zeW5jL2NsaWVudC5qc1wiO1xuZXhwb3J0IHsgQ29udmV4Q2xpZW50IH0gZnJvbSBcIi4vc2ltcGxlX2NsaWVudC5qc1wiO1xuZXhwb3J0IHsgQ29udmV4SHR0cENsaWVudCB9IGZyb20gXCIuL2h0dHBfY2xpZW50LmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJCYXNlQ29udmV4Q2xpZW50IiwiQ29udmV4Q2xpZW50IiwiQ29udmV4SHR0cENsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/logging.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/logging.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHybridErrorStacktrace: () => (/* binding */ createHybridErrorStacktrace),\n/* harmony export */   forwardData: () => (/* binding */ forwardData),\n/* harmony export */   logFatalError: () => (/* binding */ logFatalError),\n/* harmony export */   logToConsole: () => (/* binding */ logToConsole)\n/* harmony export */ });\n\nconst INFO_COLOR = \"color:rgb(0, 145, 255)\";\nfunction prefix_for_source(source) {\n    switch(source){\n        case \"query\":\n            return \"Q\";\n        case \"mutation\":\n            return \"M\";\n        case \"action\":\n            return \"A\";\n        case \"any\":\n            return \"?\";\n    }\n}\nfunction logToConsole(type, source, udfPath, message) {\n    const prefix = prefix_for_source(source);\n    if (typeof message === \"object\") {\n        message = `ConvexError ${JSON.stringify(message.errorData, null, 2)}`;\n    }\n    if (type === \"info\") {\n        const match = message.match(/^\\[.*?\\] /);\n        if (match === null) {\n            console.error(`[CONVEX ${prefix}(${udfPath})] Could not parse console.log`);\n            return;\n        }\n        const level = message.slice(1, match[0].length - 2);\n        const args = message.slice(match[0].length);\n        console.log(`%c[CONVEX ${prefix}(${udfPath})] [${level}]`, INFO_COLOR, args);\n    } else {\n        console.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n    }\n}\nfunction logFatalError(message) {\n    const errorMessage = `[CONVEX FATAL ERROR] ${message}`;\n    console.error(errorMessage);\n    return new Error(errorMessage);\n}\nfunction createHybridErrorStacktrace(source, udfPath, result) {\n    const prefix = prefix_for_source(source);\n    return `[CONVEX ${prefix}(${udfPath})] ${result.errorMessage}\n  Called by client`;\n}\nfunction forwardData(result, error) {\n    error.data = result.errorData;\n    return error;\n} //# sourceMappingURL=logging.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9nZ2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFDYixNQUFNQSxhQUFhO0FBQ25CLFNBQVNDLGtCQUFrQkMsTUFBTTtJQUMvQixPQUFRQTtRQUNOLEtBQUs7WUFDSCxPQUFPO1FBQ1QsS0FBSztZQUNILE9BQU87UUFDVCxLQUFLO1lBQ0gsT0FBTztRQUNULEtBQUs7WUFDSCxPQUFPO0lBQ1g7QUFDRjtBQUNPLFNBQVNDLGFBQWFDLElBQUksRUFBRUYsTUFBTSxFQUFFRyxPQUFPLEVBQUVDLE9BQU87SUFDekQsTUFBTUMsU0FBU04sa0JBQWtCQztJQUNqQyxJQUFJLE9BQU9JLFlBQVksVUFBVTtRQUMvQkEsVUFBVSxDQUFDLFlBQVksRUFBRUUsS0FBS0MsU0FBUyxDQUFDSCxRQUFRSSxTQUFTLEVBQUUsTUFBTSxHQUFHLENBQUM7SUFDdkU7SUFDQSxJQUFJTixTQUFTLFFBQVE7UUFDbkIsTUFBTU8sUUFBUUwsUUFBUUssS0FBSyxDQUFDO1FBQzVCLElBQUlBLFVBQVUsTUFBTTtZQUNsQkMsUUFBUUMsS0FBSyxDQUNYLENBQUMsUUFBUSxFQUFFTixPQUFPLENBQUMsRUFBRUYsUUFBUSw4QkFBOEIsQ0FBQztZQUU5RDtRQUNGO1FBQ0EsTUFBTVMsUUFBUVIsUUFBUVMsS0FBSyxDQUFDLEdBQUdKLEtBQUssQ0FBQyxFQUFFLENBQUNLLE1BQU0sR0FBRztRQUNqRCxNQUFNQyxPQUFPWCxRQUFRUyxLQUFLLENBQUNKLEtBQUssQ0FBQyxFQUFFLENBQUNLLE1BQU07UUFDMUNKLFFBQVFNLEdBQUcsQ0FDVCxDQUFDLFVBQVUsRUFBRVgsT0FBTyxDQUFDLEVBQUVGLFFBQVEsSUFBSSxFQUFFUyxNQUFNLENBQUMsQ0FBQyxFQUM3Q2QsWUFDQWlCO0lBRUosT0FBTztRQUNMTCxRQUFRQyxLQUFLLENBQUMsQ0FBQyxRQUFRLEVBQUVOLE9BQU8sQ0FBQyxFQUFFRixRQUFRLEdBQUcsRUFBRUMsUUFBUSxDQUFDO0lBQzNEO0FBQ0Y7QUFDTyxTQUFTYSxjQUFjYixPQUFPO0lBQ25DLE1BQU1jLGVBQWUsQ0FBQyxxQkFBcUIsRUFBRWQsUUFBUSxDQUFDO0lBQ3RETSxRQUFRQyxLQUFLLENBQUNPO0lBQ2QsT0FBTyxJQUFJQyxNQUFNRDtBQUNuQjtBQUNPLFNBQVNFLDRCQUE0QnBCLE1BQU0sRUFBRUcsT0FBTyxFQUFFa0IsTUFBTTtJQUNqRSxNQUFNaEIsU0FBU04sa0JBQWtCQztJQUNqQyxPQUFPLENBQUMsUUFBUSxFQUFFSyxPQUFPLENBQUMsRUFBRUYsUUFBUSxHQUFHLEVBQUVrQixPQUFPSCxZQUFZLENBQUM7a0JBQzdDLENBQUM7QUFDbkI7QUFDTyxTQUFTSSxZQUFZRCxNQUFNLEVBQUVWLEtBQUs7SUFDdkNBLE1BQU1ZLElBQUksR0FBR0YsT0FBT2IsU0FBUztJQUM3QixPQUFPRztBQUNULEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9sb2dnaW5nLmpzPzViZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBJTkZPX0NPTE9SID0gXCJjb2xvcjpyZ2IoMCwgMTQ1LCAyNTUpXCI7XG5mdW5jdGlvbiBwcmVmaXhfZm9yX3NvdXJjZShzb3VyY2UpIHtcbiAgc3dpdGNoIChzb3VyY2UpIHtcbiAgICBjYXNlIFwicXVlcnlcIjpcbiAgICAgIHJldHVybiBcIlFcIjtcbiAgICBjYXNlIFwibXV0YXRpb25cIjpcbiAgICAgIHJldHVybiBcIk1cIjtcbiAgICBjYXNlIFwiYWN0aW9uXCI6XG4gICAgICByZXR1cm4gXCJBXCI7XG4gICAgY2FzZSBcImFueVwiOlxuICAgICAgcmV0dXJuIFwiP1wiO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gbG9nVG9Db25zb2xlKHR5cGUsIHNvdXJjZSwgdWRmUGF0aCwgbWVzc2FnZSkge1xuICBjb25zdCBwcmVmaXggPSBwcmVmaXhfZm9yX3NvdXJjZShzb3VyY2UpO1xuICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09IFwib2JqZWN0XCIpIHtcbiAgICBtZXNzYWdlID0gYENvbnZleEVycm9yICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZS5lcnJvckRhdGEsIG51bGwsIDIpfWA7XG4gIH1cbiAgaWYgKHR5cGUgPT09IFwiaW5mb1wiKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBtZXNzYWdlLm1hdGNoKC9eXFxbLio/XFxdIC8pO1xuICAgIGlmIChtYXRjaCA9PT0gbnVsbCkge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgYFtDT05WRVggJHtwcmVmaXh9KCR7dWRmUGF0aH0pXSBDb3VsZCBub3QgcGFyc2UgY29uc29sZS5sb2dgXG4gICAgICApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBsZXZlbCA9IG1lc3NhZ2Uuc2xpY2UoMSwgbWF0Y2hbMF0ubGVuZ3RoIC0gMik7XG4gICAgY29uc3QgYXJncyA9IG1lc3NhZ2Uuc2xpY2UobWF0Y2hbMF0ubGVuZ3RoKTtcbiAgICBjb25zb2xlLmxvZyhcbiAgICAgIGAlY1tDT05WRVggJHtwcmVmaXh9KCR7dWRmUGF0aH0pXSBbJHtsZXZlbH1dYCxcbiAgICAgIElORk9fQ09MT1IsXG4gICAgICBhcmdzXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmVycm9yKGBbQ09OVkVYICR7cHJlZml4fSgke3VkZlBhdGh9KV0gJHttZXNzYWdlfWApO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gbG9nRmF0YWxFcnJvcihtZXNzYWdlKSB7XG4gIGNvbnN0IGVycm9yTWVzc2FnZSA9IGBbQ09OVkVYIEZBVEFMIEVSUk9SXSAke21lc3NhZ2V9YDtcbiAgY29uc29sZS5lcnJvcihlcnJvck1lc3NhZ2UpO1xuICByZXR1cm4gbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSHlicmlkRXJyb3JTdGFja3RyYWNlKHNvdXJjZSwgdWRmUGF0aCwgcmVzdWx0KSB7XG4gIGNvbnN0IHByZWZpeCA9IHByZWZpeF9mb3Jfc291cmNlKHNvdXJjZSk7XG4gIHJldHVybiBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldICR7cmVzdWx0LmVycm9yTWVzc2FnZX1cbiAgQ2FsbGVkIGJ5IGNsaWVudGA7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZERhdGEocmVzdWx0LCBlcnJvcikge1xuICBlcnJvci5kYXRhID0gcmVzdWx0LmVycm9yRGF0YTtcbiAgcmV0dXJuIGVycm9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJJTkZPX0NPTE9SIiwicHJlZml4X2Zvcl9zb3VyY2UiLCJzb3VyY2UiLCJsb2dUb0NvbnNvbGUiLCJ0eXBlIiwidWRmUGF0aCIsIm1lc3NhZ2UiLCJwcmVmaXgiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyb3JEYXRhIiwibWF0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJsZXZlbCIsInNsaWNlIiwibGVuZ3RoIiwiYXJncyIsImxvZyIsImxvZ0ZhdGFsRXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJFcnJvciIsImNyZWF0ZUh5YnJpZEVycm9yU3RhY2t0cmFjZSIsInJlc3VsdCIsImZvcndhcmREYXRhIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/logging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/long.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/long.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Long: () => (/* binding */ Long)\n/* harmony export */ });\n\nclass Long {\n    static isLong(obj) {\n        return (obj && obj.__isUnsignedLong__) === true;\n    }\n    constructor(low, high){\n        this.low = low | 0;\n        this.high = high | 0;\n        this.__isUnsignedLong__ = true;\n    }\n    // prettier-ignore\n    static fromBytesLE(bytes) {\n        return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24);\n    }\n    // prettier-ignore\n    toBytesLE() {\n        const hi = this.high;\n        const lo = this.low;\n        return [\n            lo & 255,\n            lo >>> 8 & 255,\n            lo >>> 16 & 255,\n            lo >>> 24,\n            hi & 255,\n            hi >>> 8 & 255,\n            hi >>> 16 & 255,\n            hi >>> 24\n        ];\n    }\n    static fromNumber(value) {\n        if (isNaN(value)) return UZERO;\n        if (value < 0) return UZERO;\n        if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n        return new Long(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0);\n    }\n    toString() {\n        return (BigInt(this.high) * BigInt(TWO_PWR_32_DBL) + BigInt(this.low)).toString();\n    }\n    equals(other) {\n        if (!Long.isLong(other)) other = Long.fromValue(other);\n        if (this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n        return this.high === other.high && this.low === other.low;\n    }\n    notEquals(other) {\n        return !this.equals(other);\n    }\n    comp(other) {\n        if (!Long.isLong(other)) other = Long.fromValue(other);\n        if (this.equals(other)) return 0;\n        return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n    }\n    lessThanOrEqual(other) {\n        return this.comp(/* validates */ other) <= 0;\n    }\n    static fromValue(val) {\n        if (typeof val === \"number\") return Long.fromNumber(val);\n        return new Long(val.low, val.high);\n    }\n}\nconst UZERO = new Long(0, 0);\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst MAX_UNSIGNED_VALUE = new Long(4294967295 | 0, 4294967295 | 0); //# sourceMappingURL=long.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9uZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDTixNQUFNQTtJQUNYLE9BQU9DLE9BQU9DLEdBQUcsRUFBRTtRQUNqQixPQUFPLENBQUNBLE9BQU9BLElBQUlDLGtCQUFrQixNQUFNO0lBQzdDO0lBQ0FDLFlBQVlDLEdBQUcsRUFBRUMsSUFBSSxDQUFFO1FBQ3JCLElBQUksQ0FBQ0QsR0FBRyxHQUFHQSxNQUFNO1FBQ2pCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQSxPQUFPO1FBQ25CLElBQUksQ0FBQ0gsa0JBQWtCLEdBQUc7SUFDNUI7SUFDQSxrQkFBa0I7SUFDbEIsT0FBT0ksWUFBWUMsS0FBSyxFQUFFO1FBQ3hCLE9BQU8sSUFBSVIsS0FDVFEsS0FBSyxDQUFDLEVBQUUsR0FBR0EsS0FBSyxDQUFDLEVBQUUsSUFBSSxJQUFJQSxLQUFLLENBQUMsRUFBRSxJQUFJLEtBQUtBLEtBQUssQ0FBQyxFQUFFLElBQUksSUFDeERBLEtBQUssQ0FBQyxFQUFFLEdBQUdBLEtBQUssQ0FBQyxFQUFFLElBQUksSUFBSUEsS0FBSyxDQUFDLEVBQUUsSUFBSSxLQUFLQSxLQUFLLENBQUMsRUFBRSxJQUFJO0lBRTVEO0lBQ0Esa0JBQWtCO0lBQ2xCQyxZQUFZO1FBQ1YsTUFBTUMsS0FBSyxJQUFJLENBQUNKLElBQUk7UUFDcEIsTUFBTUssS0FBSyxJQUFJLENBQUNOLEdBQUc7UUFDbkIsT0FBTztZQUNMTSxLQUFLO1lBQ0xBLE9BQU8sSUFBSTtZQUNYQSxPQUFPLEtBQUs7WUFDWkEsT0FBTztZQUNQRCxLQUFLO1lBQ0xBLE9BQU8sSUFBSTtZQUNYQSxPQUFPLEtBQUs7WUFDWkEsT0FBTztTQUNSO0lBQ0g7SUFDQSxPQUFPRSxXQUFXQyxLQUFLLEVBQUU7UUFDdkIsSUFBSUMsTUFBTUQsUUFDUixPQUFPRTtRQUNULElBQUlGLFFBQVEsR0FDVixPQUFPRTtRQUNULElBQUlGLFNBQVNHLGdCQUNYLE9BQU9DO1FBQ1QsT0FBTyxJQUFJakIsS0FBS2EsUUFBUUssaUJBQWlCLEdBQUdMLFFBQVFLLGlCQUFpQjtJQUN2RTtJQUNBQyxXQUFXO1FBQ1QsT0FBTyxDQUFDQyxPQUFPLElBQUksQ0FBQ2QsSUFBSSxJQUFJYyxPQUFPRixrQkFBa0JFLE9BQU8sSUFBSSxDQUFDZixHQUFHLEdBQUdjLFFBQVE7SUFDakY7SUFDQUUsT0FBT0MsS0FBSyxFQUFFO1FBQ1osSUFBSSxDQUFDdEIsS0FBS0MsTUFBTSxDQUFDcUIsUUFDZkEsUUFBUXRCLEtBQUt1QixTQUFTLENBQUNEO1FBQ3pCLElBQUksSUFBSSxDQUFDaEIsSUFBSSxLQUFLLE9BQU8sS0FBS2dCLE1BQU1oQixJQUFJLEtBQUssT0FBTyxHQUNsRCxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUNBLElBQUksS0FBS2dCLE1BQU1oQixJQUFJLElBQUksSUFBSSxDQUFDRCxHQUFHLEtBQUtpQixNQUFNakIsR0FBRztJQUMzRDtJQUNBbUIsVUFBVUYsS0FBSyxFQUFFO1FBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQ0QsTUFBTSxDQUFDQztJQUN0QjtJQUNBRyxLQUFLSCxLQUFLLEVBQUU7UUFDVixJQUFJLENBQUN0QixLQUFLQyxNQUFNLENBQUNxQixRQUNmQSxRQUFRdEIsS0FBS3VCLFNBQVMsQ0FBQ0Q7UUFDekIsSUFBSSxJQUFJLENBQUNELE1BQU0sQ0FBQ0MsUUFDZCxPQUFPO1FBQ1QsT0FBT0EsTUFBTWhCLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQ0EsSUFBSSxLQUFLLEtBQUtnQixNQUFNaEIsSUFBSSxLQUFLLElBQUksQ0FBQ0EsSUFBSSxJQUFJZ0IsTUFBTWpCLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQ0EsR0FBRyxLQUFLLElBQUksQ0FBQyxJQUFJO0lBQ25IO0lBQ0FxQixnQkFBZ0JKLEtBQUssRUFBRTtRQUNyQixPQUFPLElBQUksQ0FBQ0csSUFBSSxDQUNkLGFBQWEsR0FDYkgsVUFDRztJQUNQO0lBQ0EsT0FBT0MsVUFBVUksR0FBRyxFQUFFO1FBQ3BCLElBQUksT0FBT0EsUUFBUSxVQUNqQixPQUFPM0IsS0FBS1ksVUFBVSxDQUFDZTtRQUN6QixPQUFPLElBQUkzQixLQUFLMkIsSUFBSXRCLEdBQUcsRUFBRXNCLElBQUlyQixJQUFJO0lBQ25DO0FBQ0Y7QUFDQSxNQUFNUyxRQUFRLElBQUlmLEtBQUssR0FBRztBQUMxQixNQUFNNEIsaUJBQWlCLEtBQUs7QUFDNUIsTUFBTVYsaUJBQWlCVSxpQkFBaUJBO0FBQ3hDLE1BQU1aLGlCQUFpQkUsaUJBQWlCQTtBQUN4QyxNQUFNRCxxQkFBcUIsSUFBSWpCLEtBQUssYUFBYSxHQUFHLGFBQWEsSUFDakUsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9sb25nLmpzPzJiMzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgY2xhc3MgTG9uZyB7XG4gIHN0YXRpYyBpc0xvbmcob2JqKSB7XG4gICAgcmV0dXJuIChvYmogJiYgb2JqLl9faXNVbnNpZ25lZExvbmdfXykgPT09IHRydWU7XG4gIH1cbiAgY29uc3RydWN0b3IobG93LCBoaWdoKSB7XG4gICAgdGhpcy5sb3cgPSBsb3cgfCAwO1xuICAgIHRoaXMuaGlnaCA9IGhpZ2ggfCAwO1xuICAgIHRoaXMuX19pc1Vuc2lnbmVkTG9uZ19fID0gdHJ1ZTtcbiAgfVxuICAvLyBwcmV0dGllci1pZ25vcmVcbiAgc3RhdGljIGZyb21CeXRlc0xFKGJ5dGVzKSB7XG4gICAgcmV0dXJuIG5ldyBMb25nKFxuICAgICAgYnl0ZXNbMF0gfCBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMl0gPDwgMTYgfCBieXRlc1szXSA8PCAyNCxcbiAgICAgIGJ5dGVzWzRdIHwgYnl0ZXNbNV0gPDwgOCB8IGJ5dGVzWzZdIDw8IDE2IHwgYnl0ZXNbN10gPDwgMjRcbiAgICApO1xuICB9XG4gIC8vIHByZXR0aWVyLWlnbm9yZVxuICB0b0J5dGVzTEUoKSB7XG4gICAgY29uc3QgaGkgPSB0aGlzLmhpZ2g7XG4gICAgY29uc3QgbG8gPSB0aGlzLmxvdztcbiAgICByZXR1cm4gW1xuICAgICAgbG8gJiAyNTUsXG4gICAgICBsbyA+Pj4gOCAmIDI1NSxcbiAgICAgIGxvID4+PiAxNiAmIDI1NSxcbiAgICAgIGxvID4+PiAyNCxcbiAgICAgIGhpICYgMjU1LFxuICAgICAgaGkgPj4+IDggJiAyNTUsXG4gICAgICBoaSA+Pj4gMTYgJiAyNTUsXG4gICAgICBoaSA+Pj4gMjRcbiAgICBdO1xuICB9XG4gIHN0YXRpYyBmcm9tTnVtYmVyKHZhbHVlKSB7XG4gICAgaWYgKGlzTmFOKHZhbHVlKSlcbiAgICAgIHJldHVybiBVWkVSTztcbiAgICBpZiAodmFsdWUgPCAwKVxuICAgICAgcmV0dXJuIFVaRVJPO1xuICAgIGlmICh2YWx1ZSA+PSBUV09fUFdSXzY0X0RCTClcbiAgICAgIHJldHVybiBNQVhfVU5TSUdORURfVkFMVUU7XG4gICAgcmV0dXJuIG5ldyBMb25nKHZhbHVlICUgVFdPX1BXUl8zMl9EQkwgfCAwLCB2YWx1ZSAvIFRXT19QV1JfMzJfREJMIHwgMCk7XG4gIH1cbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIChCaWdJbnQodGhpcy5oaWdoKSAqIEJpZ0ludChUV09fUFdSXzMyX0RCTCkgKyBCaWdJbnQodGhpcy5sb3cpKS50b1N0cmluZygpO1xuICB9XG4gIGVxdWFscyhvdGhlcikge1xuICAgIGlmICghTG9uZy5pc0xvbmcob3RoZXIpKVxuICAgICAgb3RoZXIgPSBMb25nLmZyb21WYWx1ZShvdGhlcik7XG4gICAgaWYgKHRoaXMuaGlnaCA+Pj4gMzEgPT09IDEgJiYgb3RoZXIuaGlnaCA+Pj4gMzEgPT09IDEpXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMuaGlnaCA9PT0gb3RoZXIuaGlnaCAmJiB0aGlzLmxvdyA9PT0gb3RoZXIubG93O1xuICB9XG4gIG5vdEVxdWFscyhvdGhlcikge1xuICAgIHJldHVybiAhdGhpcy5lcXVhbHMob3RoZXIpO1xuICB9XG4gIGNvbXAob3RoZXIpIHtcbiAgICBpZiAoIUxvbmcuaXNMb25nKG90aGVyKSlcbiAgICAgIG90aGVyID0gTG9uZy5mcm9tVmFsdWUob3RoZXIpO1xuICAgIGlmICh0aGlzLmVxdWFscyhvdGhlcikpXG4gICAgICByZXR1cm4gMDtcbiAgICByZXR1cm4gb3RoZXIuaGlnaCA+Pj4gMCA+IHRoaXMuaGlnaCA+Pj4gMCB8fCBvdGhlci5oaWdoID09PSB0aGlzLmhpZ2ggJiYgb3RoZXIubG93ID4+PiAwID4gdGhpcy5sb3cgPj4+IDAgPyAtMSA6IDE7XG4gIH1cbiAgbGVzc1RoYW5PckVxdWFsKG90aGVyKSB7XG4gICAgcmV0dXJuIHRoaXMuY29tcChcbiAgICAgIC8qIHZhbGlkYXRlcyAqL1xuICAgICAgb3RoZXJcbiAgICApIDw9IDA7XG4gIH1cbiAgc3RhdGljIGZyb21WYWx1ZSh2YWwpIHtcbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIilcbiAgICAgIHJldHVybiBMb25nLmZyb21OdW1iZXIodmFsKTtcbiAgICByZXR1cm4gbmV3IExvbmcodmFsLmxvdywgdmFsLmhpZ2gpO1xuICB9XG59XG5jb25zdCBVWkVSTyA9IG5ldyBMb25nKDAsIDApO1xuY29uc3QgVFdPX1BXUl8xNl9EQkwgPSAxIDw8IDE2O1xuY29uc3QgVFdPX1BXUl8zMl9EQkwgPSBUV09fUFdSXzE2X0RCTCAqIFRXT19QV1JfMTZfREJMO1xuY29uc3QgVFdPX1BXUl82NF9EQkwgPSBUV09fUFdSXzMyX0RCTCAqIFRXT19QV1JfMzJfREJMO1xuY29uc3QgTUFYX1VOU0lHTkVEX1ZBTFVFID0gbmV3IExvbmcoNDI5NDk2NzI5NSB8IDAsIDQyOTQ5NjcyOTUgfCAwKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvbmcuanMubWFwXG4iXSwibmFtZXMiOlsiTG9uZyIsImlzTG9uZyIsIm9iaiIsIl9faXNVbnNpZ25lZExvbmdfXyIsImNvbnN0cnVjdG9yIiwibG93IiwiaGlnaCIsImZyb21CeXRlc0xFIiwiYnl0ZXMiLCJ0b0J5dGVzTEUiLCJoaSIsImxvIiwiZnJvbU51bWJlciIsInZhbHVlIiwiaXNOYU4iLCJVWkVSTyIsIlRXT19QV1JfNjRfREJMIiwiTUFYX1VOU0lHTkVEX1ZBTFVFIiwiVFdPX1BXUl8zMl9EQkwiLCJ0b1N0cmluZyIsIkJpZ0ludCIsImVxdWFscyIsIm90aGVyIiwiZnJvbVZhbHVlIiwibm90RXF1YWxzIiwiY29tcCIsImxlc3NUaGFuT3JFcXVhbCIsInZhbCIsIlRXT19QV1JfMTZfREJMIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/long.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/simple_client.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexClient: () => (/* binding */ ConvexClient),\n/* harmony export */   setDefaultWebSocketConstructor: () => (/* binding */ setDefaultWebSocketConstructor)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\nlet defaultWebSocketConstructor;\nfunction setDefaultWebSocketConstructor(ws) {\n    defaultWebSocketConstructor = ws;\n}\nclass ConvexClient {\n    /**\n   * Once closed no registered callbacks will fire again.\n   */ get closed() {\n        return this._closed;\n    }\n    get client() {\n        if (this._client) return this._client;\n        throw new Error(\"ConvexClient is disabled\");\n    }\n    /**\n   * Construct a client and immediately initiate a WebSocket connection to the passed address.\n   *\n   * @public\n   */ constructor(address, options = {}){\n        (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.validateDeploymentUrl)(address);\n        const { disabled, ...baseOptions } = options;\n        this._closed = false;\n        this.disabled = !!disabled;\n        if (defaultWebSocketConstructor && !(\"webSocketConstructor\" in baseOptions) && typeof WebSocket === \"undefined\") {\n            baseOptions.webSocketConstructor = defaultWebSocketConstructor;\n        }\n        if ( true && !(\"unsavedChangesWarning\" in baseOptions)) {\n            baseOptions.unsavedChangesWarning = false;\n        }\n        if (!this.disabled) {\n            this._client = new _index_js__WEBPACK_IMPORTED_MODULE_1__.BaseConvexClient(address, (updatedQueries)=>this._transition(updatedQueries), baseOptions);\n        }\n        this.listeners = /* @__PURE__ */ new Set();\n    }\n    /**\n   * Call a callback whenever a new result for a query is received. The callback\n   * will run soon after being registered if a result for the query is already\n   * in memory.\n   *\n   * The return value is an {@link Unsubscribe} object which is both a function\n   * an an object with properties. Both of the patterns below work with this object:\n   *\n   *```ts\n   * // call the return value as a function\n   * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   * unsubscribe();\n   *\n   * // unpack the return value into its properties\n   * const {\n   *   getCurrentValue,\n   *   unsubscribe,\n   * } = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   *```\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - The arguments to run the query with.\n   * @param callback - Function to call when the query result updates.\n   * @param onError - Function to call when the query result updates with an error.\n   * If not provided, errors will be thrown instead of calling the callback.\n   *\n   * @return an {@link Unsubscribe} function to stop calling the onUpdate function.\n   */ onUpdate(query, args, callback, onError) {\n        if (this.disabled) {\n            const disabledUnsubscribe = ()=>{};\n            const unsubscribeProps2 = {\n                unsubscribe: disabledUnsubscribe,\n                getCurrentValue: ()=>void 0,\n                getQueryLogs: ()=>void 0\n            };\n            Object.assign(disabledUnsubscribe, unsubscribeProps2);\n            return disabledUnsubscribe;\n        }\n        const { queryToken, unsubscribe } = this.client.subscribe((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query), args);\n        const queryInfo = {\n            queryToken,\n            callback,\n            onError,\n            unsubscribe,\n            hasEverRun: false,\n            query,\n            args\n        };\n        this.listeners.add(queryInfo);\n        if (this.queryResultReady(queryToken) && this.callNewListenersWithCurrentValuesTimer === void 0) {\n            this.callNewListenersWithCurrentValuesTimer = setTimeout(()=>this.callNewListenersWithCurrentValues(), 0);\n        }\n        const unsubscribeProps = {\n            unsubscribe: ()=>{\n                if (this.closed) {\n                    return;\n                }\n                this.listeners.delete(queryInfo);\n                unsubscribe();\n            },\n            getCurrentValue: ()=>this.client.localQueryResultByToken(queryToken),\n            getQueryLogs: ()=>this.client.localQueryLogs(queryToken)\n        };\n        const ret = unsubscribeProps.unsubscribe;\n        Object.assign(ret, unsubscribeProps);\n        return ret;\n    }\n    // Run all callbacks that have never been run before if they have a query\n    // result available now.\n    callNewListenersWithCurrentValues() {\n        this.callNewListenersWithCurrentValuesTimer = void 0;\n        this._transition([], true);\n    }\n    queryResultReady(queryToken) {\n        return this.client.hasLocalQueryResultByToken(queryToken);\n    }\n    async close() {\n        if (this.disabled) return;\n        this.listeners.clear();\n        this._closed = true;\n        return this.client.close();\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */ setAuth(fetchToken, onChange) {\n        this.client.setAuth(fetchToken, onChange ?? (()=>{}));\n    }\n    /**\n   * @internal\n   */ setAdminAuth(token, identity) {\n        if (this.closed) {\n            throw new Error(\"ConvexClient has already been closed.\");\n        }\n        if (this.disabled) return;\n        this.client.setAdminAuth(token, identity);\n    }\n    /**\n   * @internal\n   */ _transition(updatedQueries, callNewListeners = false) {\n        for (const queryInfo of this.listeners){\n            const { callback, queryToken, onError, hasEverRun } = queryInfo;\n            if (updatedQueries.includes(queryToken) || callNewListeners && !hasEverRun && this.client.hasLocalQueryResultByToken(queryToken)) {\n                queryInfo.hasEverRun = true;\n                let newValue;\n                try {\n                    newValue = this.client.localQueryResultByToken(queryToken);\n                } catch (error) {\n                    if (!(error instanceof Error)) throw error;\n                    if (onError) {\n                        onError(error, \"Second argument to onUpdate onError is reserved for later use\");\n                    } else {\n                        void Promise.reject(error);\n                    }\n                    continue;\n                }\n                callback(newValue, \"Second argument to onUpdate callback is reserved for later use\");\n            }\n        }\n    }\n    /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */ async mutation(mutation, args) {\n        if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n        return await this.client.mutation((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(mutation), args);\n    }\n    /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action.\n   * @returns A promise of the action's result.\n   */ async action(action, args) {\n        if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n        return await this.client.action((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(action), args);\n    }\n    /**\n   * Fetch a query result once.\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query.\n   * @returns A promise of the query's result.\n   */ async query(query, args) {\n        if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n        const value = this.client.localQueryResult((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query), args);\n        if (value !== void 0) return value;\n        return new Promise((resolve, reject)=>{\n            const { unsubscribe } = this.onUpdate(query, args, (value2)=>{\n                unsubscribe();\n                resolve(value2);\n            }, (e)=>{\n                unsubscribe();\n                reject(e);\n            });\n        });\n    }\n} //# sourceMappingURL=simple_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/authentication_manager.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationManager: () => (/* binding */ AuthenticationManager)\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"(ssr)/./node_modules/jwt-decode/build/jwt-decode.esm.js\");\n\n\nclass AuthenticationManager {\n    constructor(syncState, { authenticate, pauseSocket: pause, resumeSocket: resume, clearAuth, verbose }){\n        this.authState = {\n            state: \"noAuth\"\n        };\n        // Used to detect races involving `setConfig` calls\n        // while a token is being fetched.\n        this.configVersion = 0;\n        this.syncState = syncState;\n        this.authenticate = authenticate;\n        this.pauseSocket = pause;\n        this.resumeSocket = resume;\n        this.clearAuth = clearAuth;\n        this.verbose = verbose;\n    }\n    async setConfig(fetchToken, onChange) {\n        this.resetAuthState();\n        const token = await this.fetchTokenAndGuardAgainstRace(fetchToken, {\n            forceRefreshToken: false\n        });\n        if (token.isFromOutdatedConfig) {\n            return;\n        }\n        if (token.value) {\n            this.setAuthState({\n                state: \"waitingForServerConfirmationOfCachedToken\",\n                config: {\n                    fetchToken,\n                    onAuthChange: onChange\n                },\n                hasRetried: false\n            });\n            this.authenticate(token.value);\n        } else {\n            this.setAuthState({\n                state: \"initialRefetch\",\n                config: {\n                    fetchToken,\n                    onAuthChange: onChange\n                }\n            });\n            await this.refetchToken();\n        }\n    }\n    onTransition(serverMessage) {\n        if (!this.syncState.isCurrentOrNewerAuthVersion(serverMessage.endVersion.identity)) {\n            return;\n        }\n        if (serverMessage.endVersion.identity <= serverMessage.startVersion.identity) {\n            return;\n        }\n        if (this.authState.state === \"waitingForServerConfirmationOfCachedToken\") {\n            this._logVerbose(\"server confirmed auth token is valid\");\n            void this.refetchToken();\n            this.authState.config.onAuthChange(true);\n            return;\n        }\n        if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n            this._logVerbose(\"server confirmed new auth token is valid\");\n            this.scheduleTokenRefetch(this.authState.token);\n            if (!this.authState.hadAuth) {\n                this.authState.config.onAuthChange(true);\n            }\n        }\n    }\n    onAuthError(serverMessage) {\n        const { baseVersion } = serverMessage;\n        if (baseVersion !== null && baseVersion !== void 0) {\n            if (!this.syncState.isCurrentOrNewerAuthVersion(baseVersion + 1)) {\n                this._logVerbose(\"ignoring auth error for previous auth attempt\");\n                return;\n            }\n            void this.tryToReauthenticate(serverMessage);\n            return;\n        }\n        void this.tryToReauthenticate(serverMessage);\n    }\n    // This is similar to `refetchToken` defined below, in fact we\n    // don't represent them as different states, but it is different\n    // in that we pause the WebSocket so that mutations\n    // don't retry with bad auth.\n    async tryToReauthenticate(serverMessage) {\n        if (// No way to fetch another token, kaboom\n        this.authState.state === \"noAuth\" || // We failed on a fresh token, trying another one won't help\n        this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n            console.error(`Failed to authenticate: \"${serverMessage.error}\", check your server auth config`);\n            if (this.syncState.hasAuth()) {\n                this.syncState.clearAuth();\n            }\n            if (this.authState.state !== \"noAuth\") {\n                this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n            }\n            return;\n        }\n        this._logVerbose(\"attempting to reauthenticate\");\n        await this.pauseSocket();\n        const token = await this.fetchTokenAndGuardAgainstRace(this.authState.config.fetchToken, {\n            forceRefreshToken: true\n        });\n        if (token.isFromOutdatedConfig) {\n            await this.resumeSocket();\n            return;\n        }\n        if (token.value && this.syncState.isNewAuth(token.value)) {\n            this.syncState.setAuth(token.value);\n            this.setAuthState({\n                state: \"waitingForServerConfirmationOfFreshToken\",\n                config: this.authState.config,\n                token: token.value,\n                hadAuth: this.authState.state === \"notRefetching\" || this.authState.state === \"waitingForScheduledRefetch\"\n            });\n        } else {\n            this._logVerbose(\"reauthentication failed, could not fetch a new token\");\n            if (this.syncState.hasAuth()) {\n                this.syncState.clearAuth();\n            }\n            this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n        }\n        await this.resumeSocket();\n    }\n    // Force refetch the token and schedule another refetch\n    // before the token expires - an active client should never\n    // need to reauthenticate.\n    async refetchToken() {\n        if (this.authState.state === \"noAuth\") {\n            return;\n        }\n        this._logVerbose(\"refetching auth token\");\n        const token = await this.fetchTokenAndGuardAgainstRace(this.authState.config.fetchToken, {\n            forceRefreshToken: true\n        });\n        if (token.isFromOutdatedConfig) {\n            return;\n        }\n        if (token.value) {\n            if (this.syncState.isNewAuth(token.value)) {\n                this.setAuthState({\n                    state: \"waitingForServerConfirmationOfFreshToken\",\n                    hadAuth: this.syncState.hasAuth(),\n                    token: token.value,\n                    config: this.authState.config\n                });\n                this.authenticate(token.value);\n            } else {\n                this.setAuthState({\n                    state: \"notRefetching\",\n                    config: this.authState.config\n                });\n            }\n        } else {\n            this._logVerbose(\"refetching token failed\");\n            if (this.syncState.hasAuth()) {\n                this.clearAuth();\n            }\n            this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n        }\n    }\n    scheduleTokenRefetch(token) {\n        if (this.authState.state === \"noAuth\") {\n            return;\n        }\n        const decodedToken = this.decodeToken(token);\n        if (!decodedToken) {\n            console.error(\"Auth token is not a valid JWT, cannot refetch the token\");\n            return;\n        }\n        const { iat, exp } = decodedToken;\n        if (!iat || !exp) {\n            console.error(\"Auth token does not have required fields, cannot refetch the token\");\n            return;\n        }\n        const leewaySeconds = 2;\n        const delay = (exp - iat - leewaySeconds) * 1e3;\n        if (delay <= 0) {\n            console.error(\"Auth token does not live long enough, cannot refetch the token\");\n            return;\n        }\n        const refetchTokenTimeoutId = setTimeout(()=>{\n            void this.refetchToken();\n        }, delay);\n        this.setAuthState({\n            state: \"waitingForScheduledRefetch\",\n            refetchTokenTimeoutId,\n            config: this.authState.config\n        });\n        this._logVerbose(`scheduled preemptive auth token refetching in ${delay}ms`);\n    }\n    // Protects against simultaneous calls to `setConfig`\n    // while we're fetching a token\n    async fetchTokenAndGuardAgainstRace(fetchToken, fetchArgs) {\n        const originalConfigVersion = ++this.configVersion;\n        const token = await fetchToken(fetchArgs);\n        if (this.configVersion !== originalConfigVersion) {\n            return {\n                isFromOutdatedConfig: true\n            };\n        }\n        return {\n            isFromOutdatedConfig: false,\n            value: token\n        };\n    }\n    stop() {\n        this.resetAuthState();\n        this.configVersion++;\n    }\n    setAndReportAuthFailed(onAuthChange) {\n        onAuthChange(false);\n        this.resetAuthState();\n    }\n    resetAuthState() {\n        this.setAuthState({\n            state: \"noAuth\"\n        });\n    }\n    setAuthState(newAuth) {\n        if (this.authState.state === \"waitingForScheduledRefetch\") {\n            clearTimeout(this.authState.refetchTokenTimeoutId);\n            this.syncState.markAuthCompletion();\n        }\n        this.authState = newAuth;\n    }\n    decodeToken(token) {\n        try {\n            return (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(token);\n        } catch (e) {\n            return null;\n        }\n    }\n    _logVerbose(message) {\n        if (this.verbose) {\n            console.debug(`${/* @__PURE__ */ new Date().toISOString()} ${message} [v${this.configVersion}]`);\n        }\n    }\n} //# sourceMappingURL=authentication_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* binding */ BaseConvexClient)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _local_state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./local_state.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\");\n/* harmony import */ var _request_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./request_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\");\n/* harmony import */ var _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimistic_updates_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\");\n/* harmony import */ var _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./remote_query_set.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web_socket_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\");\n/* harmony import */ var _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./authentication_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\");\n/* harmony import */ var _metrics_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./metrics.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass BaseConvexClient {\n    /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param onTransition - A callback receiving an array of query tokens\n   * corresponding to query results that have changed.\n   * @param options - See {@link BaseConvexClientOptions} for a full description.\n   */ constructor(address, onTransition, options){\n        this.firstMessageReceived = false;\n        // Instance property so that `mark()` doesn't need to be called as a method.\n        this.mark = (name)=>{\n            if (this.debug) {\n                (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.mark)(name, this.sessionId);\n            }\n        };\n        if (typeof address === \"object\") {\n            throw new Error(\"Passing a ClientConfig object is no longer supported. Pass the URL of the Convex deployment as a string directly.\");\n        }\n        (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.validateDeploymentUrl)(address);\n        options = {\n            ...options\n        };\n        let webSocketConstructor = options.webSocketConstructor;\n        if (!webSocketConstructor && typeof WebSocket === \"undefined\") {\n            throw new Error(\"No WebSocket global variable defined! To use Convex in an environment without WebSocket try the HTTP client: https://docs.convex.dev/api/classes/browser.ConvexHttpClient\");\n        }\n        webSocketConstructor = webSocketConstructor || WebSocket;\n        this.verbose = options.verbose ?? false;\n        this.debug = options.reportDebugInfoToConvex ?? false;\n        this.address = address;\n        const i = address.search(\"://\");\n        if (i === -1) {\n            throw new Error(\"Provided address was not an absolute URL.\");\n        }\n        const origin = address.substring(i + 3);\n        const protocol = address.substring(0, i);\n        let wsProtocol;\n        if (protocol === \"http\") {\n            wsProtocol = \"ws\";\n        } else if (protocol === \"https\") {\n            wsProtocol = \"wss\";\n        } else {\n            throw new Error(`Unknown parent protocol ${protocol}`);\n        }\n        const wsUri = `${wsProtocol}://${origin}/api/${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}/sync`;\n        this.state = new _local_state_js__WEBPACK_IMPORTED_MODULE_3__.LocalSyncState();\n        this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet((queryId)=>this.state.queryPath(queryId));\n        this.requestManager = new _request_manager_js__WEBPACK_IMPORTED_MODULE_4__.RequestManager();\n        this.authenticationManager = new _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__.AuthenticationManager(this.state, {\n            authenticate: (token)=>{\n                const message = this.state.setAuth(token);\n                this.webSocketManager.sendMessage(message);\n            },\n            pauseSocket: ()=>this.webSocketManager.pause(),\n            resumeSocket: ()=>this.webSocketManager.resume(),\n            clearAuth: ()=>{\n                this.clearAuth();\n            },\n            verbose: this.verbose\n        });\n        this.optimisticQueryResults = new _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__.OptimisticQueryResults();\n        this.onTransition = onTransition;\n        this.nextRequestId = 0;\n        this.sessionId = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.newSessionId)();\n        const { unsavedChangesWarning } = options;\n        if (true) {\n            if (unsavedChangesWarning === true) {\n                throw new Error(\"unsavedChangesWarning requested, but window.addEventListener not found! Remove {unsavedChangesWarning: true} from Convex client options.\");\n            }\n        } else {}\n        this.webSocketManager = new _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__.WebSocketManager(wsUri, (reconnectMetadata)=>{\n            this.mark(\"convexWebSocketOpen\");\n            this.webSocketManager.sendMessage({\n                ...reconnectMetadata,\n                type: \"Connect\",\n                sessionId: this.sessionId,\n                maxObservedTimestamp: this.maxObservedTimestamp\n            });\n            const oldRemoteQueryResults = new Set(this.remoteQuerySet.remoteQueryResults().keys());\n            this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet((queryId)=>this.state.queryPath(queryId));\n            const [querySetModification, authModification] = this.state.restart(oldRemoteQueryResults);\n            if (authModification) {\n                this.webSocketManager.sendMessage(authModification);\n            }\n            this.webSocketManager.sendMessage(querySetModification);\n            for (const message of this.requestManager.restart()){\n                this.webSocketManager.sendMessage(message);\n            }\n        }, (serverMessage)=>{\n            if (!this.firstMessageReceived) {\n                this.firstMessageReceived = true;\n                this.mark(\"convexFirstMessageReceived\");\n                this.reportMarks();\n            }\n            switch(serverMessage.type){\n                case \"Transition\":\n                    {\n                        this.observedTimestamp(serverMessage.endVersion.ts);\n                        this.authenticationManager.onTransition(serverMessage);\n                        this.remoteQuerySet.transition(serverMessage);\n                        this.state.transition(serverMessage);\n                        const completedRequests = this.requestManager.removeCompleted(this.remoteQuerySet.timestamp());\n                        this.notifyOnQueryResultChanges(completedRequests);\n                        break;\n                    }\n                case \"MutationResponse\":\n                    {\n                        if (serverMessage.success) {\n                            this.observedTimestamp(serverMessage.ts);\n                        }\n                        const completedMutationId = this.requestManager.onResponse(serverMessage);\n                        if (completedMutationId) {\n                            this.notifyOnQueryResultChanges(/* @__PURE__ */ new Set([\n                                completedMutationId\n                            ]));\n                        }\n                        break;\n                    }\n                case \"ActionResponse\":\n                    {\n                        this.requestManager.onResponse(serverMessage);\n                        break;\n                    }\n                case \"AuthError\":\n                    {\n                        this.authenticationManager.onAuthError(serverMessage);\n                        break;\n                    }\n                case \"FatalError\":\n                    {\n                        const error = (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logFatalError)(serverMessage.error);\n                        void this.webSocketManager.stop();\n                        throw error;\n                    }\n                case \"Ping\":\n                    break;\n                default:\n                    {\n                        const _typeCheck = serverMessage;\n                    }\n            }\n            return {\n                hasSyncedPastLastReconnect: this.hasSyncedPastLastReconnect()\n            };\n        }, webSocketConstructor, this.verbose);\n        this.mark(\"convexClientConstructed\");\n    }\n    /**\n   * Return true if there is outstanding work from prior to the time of the most recent restart.\n   * This indicates that the client has not proven itself to have gotten past the issue that\n   * potentially led to the restart. Use this to influence when to reset backoff after a failure.\n   */ hasSyncedPastLastReconnect() {\n        const hasSyncedPastLastReconnect = this.requestManager.hasSyncedPastLastReconnect() || this.state.hasSyncedPastLastReconnect();\n        return hasSyncedPastLastReconnect;\n    }\n    observedTimestamp(observedTs) {\n        if (this.maxObservedTimestamp === void 0 || this.maxObservedTimestamp.lessThanOrEqual(observedTs)) {\n            this.maxObservedTimestamp = observedTs;\n        }\n    }\n    getMaxObservedTimestamp() {\n        return this.maxObservedTimestamp;\n    }\n    /**\n   * Compute the current query results based on the remoteQuerySet and the\n   * current optimistic updates and call `onTransition` for all the changed\n   * queries.\n   *\n   * @param completedMutations - A set of mutation IDs whose optimistic updates\n   * are no longer needed.\n   */ notifyOnQueryResultChanges(completedRequest) {\n        const remoteQueryResults = this.remoteQuerySet.remoteQueryResults();\n        const queryTokenToValue = /* @__PURE__ */ new Map();\n        for (const [queryId, result] of remoteQueryResults){\n            const queryToken = this.state.queryToken(queryId);\n            if (queryToken !== null) {\n                const query = {\n                    result,\n                    udfPath: this.state.queryPath(queryId),\n                    args: this.state.queryArgs(queryId)\n                };\n                queryTokenToValue.set(queryToken, query);\n            }\n        }\n        this.onTransition(this.optimisticQueryResults.ingestQueryResultsFromServer(queryTokenToValue, completedRequest));\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */ setAuth(fetchToken, onChange) {\n        void this.authenticationManager.setConfig(fetchToken, onChange);\n    }\n    hasAuth() {\n        return this.state.hasAuth();\n    }\n    /** @internal */ setAdminAuth(value, fakeUserIdentity) {\n        const message = this.state.setAdminAuth(value, fakeUserIdentity);\n        this.webSocketManager.sendMessage(message);\n    }\n    clearAuth() {\n        const message = this.state.clearAuth();\n        this.webSocketManager.sendMessage(message);\n    }\n    /**\n     * Subscribe to a query function.\n     *\n     * Whenever this query's result changes, the `onTransition` callback\n     * passed into the constructor will be called.\n     *\n     * @param name - The name of the query.\n     * @param args - An arguments object for the query. If this is omitted, the\n     * arguments will be `{}`.\n     * @param options - A {@link SubscribeOptions} options object for this query.\n  \n     * @returns An object containing a {@link QueryToken} corresponding to this\n     * query and an `unsubscribe` callback.\n     */ subscribe(name, args, options) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const { modification, queryToken, unsubscribe } = this.state.subscribe(name, argsObject, options?.journal);\n        if (modification !== null) {\n            this.webSocketManager.sendMessage(modification);\n        }\n        return {\n            queryToken,\n            unsubscribe: ()=>{\n                const modification2 = unsubscribe();\n                if (modification2) {\n                    this.webSocketManager.sendMessage(modification2);\n                }\n            }\n        };\n    }\n    /**\n   * A query result based only on the current, local state.\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   */ localQueryResult(udfPath, args) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n        return this.optimisticQueryResults.queryResult(queryToken);\n    }\n    /**\n   * Get query result by query token based on current, local state\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   *\n   * @internal\n   */ localQueryResultByToken(queryToken) {\n        return this.optimisticQueryResults.queryResult(queryToken);\n    }\n    /**\n   * Whether local query result is available for a toke.\n   *\n   * This method does not throw if the result is an error.\n   *\n   * @internal\n   */ hasLocalQueryResultByToken(queryToken) {\n        return this.optimisticQueryResults.hasQueryResult(queryToken);\n    }\n    /**\n   * @internal\n   */ localQueryLogs(udfPath, args) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n        return this.optimisticQueryResults.queryLogs(queryToken);\n    }\n    /**\n   * Retrieve the current {@link QueryJournal} for this query function.\n   *\n   * If we have not yet received a result for this query, this will be `undefined`.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for this query.\n   * @returns The query's {@link QueryJournal} or `undefined`.\n   */ queryJournal(name, args) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(name, argsObject);\n        return this.state.queryJournal(queryToken);\n    }\n    /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */ connectionState() {\n        return {\n            hasInflightRequests: this.requestManager.hasInflightRequests(),\n            isWebSocketConnected: this.webSocketManager.socketState() === \"ready\",\n            timeOfOldestInflightRequest: this.requestManager.timeOfOldestInflightRequest()\n        };\n    }\n    /**\n     * Execute a mutation function.\n     *\n     * @param name - The name of the mutation.\n     * @param args - An arguments object for the mutation. If this is omitted,\n     * the arguments will be `{}`.\n     * @param options - A {@link MutationOptions} options object for this mutation.\n  \n     * @returns - A promise of the mutation's result.\n     */ async mutation(name, args, options) {\n        const result = await this.mutationInternal(name, args, options);\n        if (!result.success) {\n            if (result.errorData !== void 0) {\n                throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(result, new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result)));\n            }\n            throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result));\n        }\n        return result.value;\n    }\n    /**\n   * @internal\n   */ async mutationInternal(udfPath, args, options) {\n        const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        this.tryReportLongDisconnect();\n        const requestId = this.nextRequestId;\n        this.nextRequestId++;\n        if (options !== void 0) {\n            const optimisticUpdate = options.optimisticUpdate;\n            if (optimisticUpdate !== void 0) {\n                const wrappedUpdate = (localQueryStore)=>{\n                    optimisticUpdate(localQueryStore, mutationArgs);\n                };\n                const changedQueries = this.optimisticQueryResults.applyOptimisticUpdate(wrappedUpdate, requestId);\n                this.onTransition(changedQueries);\n            }\n        }\n        const message = {\n            type: \"Mutation\",\n            requestId,\n            udfPath,\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(mutationArgs)\n            ]\n        };\n        const mightBeSent = this.webSocketManager.sendMessage(message);\n        return this.requestManager.request(message, mightBeSent);\n    }\n    /**\n   * Execute an action function.\n   *\n   * @param name - The name of the action.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */ async action(name, args) {\n        const result = await this.actionInternal(name, args);\n        if (!result.success) {\n            if (result.errorData !== void 0) {\n                throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(result, new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result)));\n            }\n            throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result));\n        }\n        return result.value;\n    }\n    /**\n   * @internal\n   */ async actionInternal(udfPath, args) {\n        const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const requestId = this.nextRequestId;\n        this.nextRequestId++;\n        this.tryReportLongDisconnect();\n        const message = {\n            type: \"Action\",\n            requestId,\n            udfPath,\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(actionArgs)\n            ]\n        };\n        const mightBeSent = this.webSocketManager.sendMessage(message);\n        return this.requestManager.request(message, mightBeSent);\n    }\n    /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with an {@link BaseConvexClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */ async close() {\n        this.authenticationManager.stop();\n        return this.webSocketManager.stop();\n    }\n    _logVerbose(message) {\n        if (this.verbose) {\n            console.debug(`${/* @__PURE__ */ new Date().toISOString()} ${message}`);\n        }\n    }\n    /**\n   * Reports performance marks to the server. This should only be called when\n   * we have a functional websocket.\n   */ reportMarks() {\n        if (this.debug) {\n            const report = (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.getMarksReport)(this.sessionId);\n            this.webSocketManager.sendMessage({\n                type: \"Event\",\n                eventType: \"ClientConnect\",\n                event: report\n            });\n        }\n    }\n    tryReportLongDisconnect() {\n        if (!this.debug) {\n            return;\n        }\n        const timeOfOldestRequest = this.connectionState().timeOfOldestInflightRequest;\n        if (timeOfOldestRequest === null || Date.now() - timeOfOldestRequest.getTime() <= 60 * 1e3) {\n            return;\n        }\n        const endpoint = `${this.address}/api/debug_event`;\n        fetch(endpoint, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}`\n            },\n            body: JSON.stringify({\n                event: \"LongWebsocketDisconnect\"\n            })\n        }).then((response)=>{\n            if (!response.ok) {\n                console.warn(\"Analytics request failed with response:\", response.body);\n            }\n        }).catch((error)=>{\n            console.warn(\"Analytics response failed with error:\", error);\n        });\n    }\n} //# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/local_state.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalSyncState: () => (/* binding */ LocalSyncState)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n\n\n\nclass LocalSyncState {\n    constructor(){\n        this.nextQueryId = 0;\n        this.querySetVersion = 0;\n        this.identityVersion = 0;\n        this.querySet = /* @__PURE__ */ new Map();\n        this.queryIdToToken = /* @__PURE__ */ new Map();\n        this.outstandingQueriesOlderThanRestart = /* @__PURE__ */ new Set();\n        this.outstandingAuthOlderThanRestart = false;\n    }\n    hasSyncedPastLastReconnect() {\n        return this.outstandingQueriesOlderThanRestart.size === 0 && !this.outstandingAuthOlderThanRestart;\n    }\n    markAuthCompletion() {\n        this.outstandingAuthOlderThanRestart = false;\n    }\n    subscribe(udfPath, args, journal) {\n        const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n        const existingEntry = this.querySet.get(queryToken);\n        if (existingEntry !== void 0) {\n            existingEntry.numSubscribers += 1;\n            return {\n                queryToken,\n                modification: null,\n                unsubscribe: ()=>this.removeSubscriber(queryToken)\n            };\n        } else {\n            const queryId = this.nextQueryId++;\n            const query = {\n                id: queryId,\n                canonicalizedUdfPath,\n                args,\n                numSubscribers: 1,\n                journal\n            };\n            this.querySet.set(queryToken, query);\n            this.queryIdToToken.set(queryId, queryToken);\n            const baseVersion = this.querySetVersion;\n            const newVersion = ++this.querySetVersion;\n            const add = {\n                type: \"Add\",\n                queryId,\n                udfPath: canonicalizedUdfPath,\n                args: [\n                    (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)\n                ],\n                journal\n            };\n            const modification = {\n                type: \"ModifyQuerySet\",\n                baseVersion,\n                newVersion,\n                modifications: [\n                    add\n                ]\n            };\n            return {\n                queryToken,\n                modification,\n                unsubscribe: ()=>this.removeSubscriber(queryToken)\n            };\n        }\n    }\n    transition(transition) {\n        for (const modification of transition.modifications){\n            switch(modification.type){\n                case \"QueryUpdated\":\n                case \"QueryFailed\":\n                    {\n                        this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n                        const journal = modification.journal;\n                        if (journal !== void 0) {\n                            const queryToken = this.queryIdToToken.get(modification.queryId);\n                            if (queryToken !== void 0) {\n                                this.querySet.get(queryToken).journal = journal;\n                            }\n                        }\n                        break;\n                    }\n                case \"QueryRemoved\":\n                    {\n                        this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n                        break;\n                    }\n                default:\n                    {\n                        const _ = modification;\n                        throw new Error(`Invalid modification ${modification.type}`);\n                    }\n            }\n        }\n    }\n    queryId(udfPath, args) {\n        const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n        const existingEntry = this.querySet.get(queryToken);\n        if (existingEntry !== void 0) {\n            return existingEntry.id;\n        }\n        return null;\n    }\n    isCurrentOrNewerAuthVersion(version) {\n        return version >= this.identityVersion;\n    }\n    setAuth(value) {\n        this.auth = {\n            tokenType: \"User\",\n            value\n        };\n        const baseVersion = this.identityVersion++;\n        return {\n            type: \"Authenticate\",\n            baseVersion,\n            ...this.auth\n        };\n    }\n    setAdminAuth(value, actingAs) {\n        const auth = {\n            tokenType: \"Admin\",\n            value,\n            impersonating: actingAs\n        };\n        this.auth = auth;\n        const baseVersion = this.identityVersion++;\n        return {\n            type: \"Authenticate\",\n            baseVersion,\n            ...auth\n        };\n    }\n    clearAuth() {\n        this.auth = void 0;\n        this.markAuthCompletion();\n        const baseVersion = this.identityVersion++;\n        return {\n            type: \"Authenticate\",\n            tokenType: \"None\",\n            baseVersion\n        };\n    }\n    hasAuth() {\n        return !!this.auth;\n    }\n    isNewAuth(value) {\n        return this.auth?.value !== value;\n    }\n    queryPath(queryId) {\n        const pathAndArgs = this.queryIdToToken.get(queryId);\n        if (pathAndArgs) {\n            return this.querySet.get(pathAndArgs).canonicalizedUdfPath;\n        }\n        return null;\n    }\n    queryArgs(queryId) {\n        const pathAndArgs = this.queryIdToToken.get(queryId);\n        if (pathAndArgs) {\n            return this.querySet.get(pathAndArgs).args;\n        }\n        return null;\n    }\n    queryToken(queryId) {\n        return this.queryIdToToken.get(queryId) ?? null;\n    }\n    queryJournal(queryToken) {\n        return this.querySet.get(queryToken)?.journal;\n    }\n    restart(oldRemoteQueryResults) {\n        this.outstandingQueriesOlderThanRestart.clear();\n        const modifications = [];\n        for (const localQuery of this.querySet.values()){\n            const add = {\n                type: \"Add\",\n                queryId: localQuery.id,\n                udfPath: localQuery.canonicalizedUdfPath,\n                args: [\n                    (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(localQuery.args)\n                ],\n                journal: localQuery.journal\n            };\n            modifications.push(add);\n            if (!oldRemoteQueryResults.has(localQuery.id)) {\n                this.outstandingQueriesOlderThanRestart.add(localQuery.id);\n            }\n        }\n        this.querySetVersion = 1;\n        const querySet = {\n            type: \"ModifyQuerySet\",\n            baseVersion: 0,\n            newVersion: 1,\n            modifications\n        };\n        if (!this.auth) {\n            this.identityVersion = 0;\n            return [\n                querySet,\n                void 0\n            ];\n        }\n        this.outstandingAuthOlderThanRestart = true;\n        const authenticate = {\n            type: \"Authenticate\",\n            baseVersion: 0,\n            ...this.auth\n        };\n        this.identityVersion = 1;\n        return [\n            querySet,\n            authenticate\n        ];\n    }\n    removeSubscriber(queryToken) {\n        const localQuery = this.querySet.get(queryToken);\n        if (localQuery.numSubscribers > 1) {\n            localQuery.numSubscribers -= 1;\n            return null;\n        } else {\n            this.querySet.delete(queryToken);\n            this.queryIdToToken.delete(localQuery.id);\n            this.outstandingQueriesOlderThanRestart.delete(localQuery.id);\n            const baseVersion = this.querySetVersion;\n            const newVersion = ++this.querySetVersion;\n            const remove = {\n                type: \"Remove\",\n                queryId: localQuery.id\n            };\n            return {\n                type: \"ModifyQuerySet\",\n                baseVersion,\n                newVersion,\n                modifications: [\n                    remove\n                ]\n            };\n        }\n    }\n} //# sourceMappingURL=local_state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/metrics.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMarksReport: () => (/* binding */ getMarksReport),\n/* harmony export */   mark: () => (/* binding */ mark)\n/* harmony export */ });\n\nconst markNames = [\n    \"convexClientConstructed\",\n    \"convexWebSocketOpen\",\n    \"convexFirstMessageReceived\"\n];\nfunction mark(name, sessionId) {\n    const detail = {\n        sessionId\n    };\n    if (typeof performance === \"undefined\" || !performance.mark) return;\n    performance.mark(name, {\n        detail\n    });\n}\nfunction performanceMarkToJson(mark2) {\n    let name = mark2.name.slice(\"convex\".length);\n    name = name.charAt(0).toLowerCase() + name.slice(1);\n    return {\n        name,\n        startTime: mark2.startTime\n    };\n}\nfunction getMarksReport(sessionId) {\n    if (typeof performance === \"undefined\" || !performance.getEntriesByName) {\n        return [];\n    }\n    const allMarks = [];\n    for (const name of markNames){\n        const marks = performance.getEntriesByName(name).filter((entry)=>entry.entryType === \"mark\").filter((mark2)=>mark2.detail.sessionId === sessionId);\n        allMarks.push(...marks);\n    }\n    return allMarks.map(performanceMarkToJson);\n} //# sourceMappingURL=metrics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9tZXRyaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDYixNQUFNQSxZQUFZO0lBQ2hCO0lBQ0E7SUFDQTtDQUNEO0FBQ00sU0FBU0MsS0FBS0MsSUFBSSxFQUFFQyxTQUFTO0lBQ2xDLE1BQU1DLFNBQVM7UUFBRUQ7SUFBVTtJQUMzQixJQUFJLE9BQU9FLGdCQUFnQixlQUFlLENBQUNBLFlBQVlKLElBQUksRUFDekQ7SUFDRkksWUFBWUosSUFBSSxDQUFDQyxNQUFNO1FBQUVFO0lBQU87QUFDbEM7QUFDQSxTQUFTRSxzQkFBc0JDLEtBQUs7SUFDbEMsSUFBSUwsT0FBT0ssTUFBTUwsSUFBSSxDQUFDTSxLQUFLLENBQUMsU0FBU0MsTUFBTTtJQUMzQ1AsT0FBT0EsS0FBS1EsTUFBTSxDQUFDLEdBQUdDLFdBQVcsS0FBS1QsS0FBS00sS0FBSyxDQUFDO0lBQ2pELE9BQU87UUFDTE47UUFDQVUsV0FBV0wsTUFBTUssU0FBUztJQUM1QjtBQUNGO0FBQ08sU0FBU0MsZUFBZVYsU0FBUztJQUN0QyxJQUFJLE9BQU9FLGdCQUFnQixlQUFlLENBQUNBLFlBQVlTLGdCQUFnQixFQUFFO1FBQ3ZFLE9BQU8sRUFBRTtJQUNYO0lBQ0EsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLEtBQUssTUFBTWIsUUFBUUYsVUFBVztRQUM1QixNQUFNZ0IsUUFBUVgsWUFBWVMsZ0JBQWdCLENBQUNaLE1BQU1lLE1BQU0sQ0FBQyxDQUFDQyxRQUFVQSxNQUFNQyxTQUFTLEtBQUssUUFBUUYsTUFBTSxDQUFDLENBQUNWLFFBQVVBLE1BQU1ILE1BQU0sQ0FBQ0QsU0FBUyxLQUFLQTtRQUM1SVksU0FBU0ssSUFBSSxJQUFJSjtJQUNuQjtJQUNBLE9BQU9ELFNBQVNNLEdBQUcsQ0FBQ2Y7QUFDdEIsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvbWV0cmljcy5qcz8zZjU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgbWFya05hbWVzID0gW1xuICBcImNvbnZleENsaWVudENvbnN0cnVjdGVkXCIsXG4gIFwiY29udmV4V2ViU29ja2V0T3BlblwiLFxuICBcImNvbnZleEZpcnN0TWVzc2FnZVJlY2VpdmVkXCJcbl07XG5leHBvcnQgZnVuY3Rpb24gbWFyayhuYW1lLCBzZXNzaW9uSWQpIHtcbiAgY29uc3QgZGV0YWlsID0geyBzZXNzaW9uSWQgfTtcbiAgaWYgKHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhcGVyZm9ybWFuY2UubWFyaylcbiAgICByZXR1cm47XG4gIHBlcmZvcm1hbmNlLm1hcmsobmFtZSwgeyBkZXRhaWwgfSk7XG59XG5mdW5jdGlvbiBwZXJmb3JtYW5jZU1hcmtUb0pzb24obWFyazIpIHtcbiAgbGV0IG5hbWUgPSBtYXJrMi5uYW1lLnNsaWNlKFwiY29udmV4XCIubGVuZ3RoKTtcbiAgbmFtZSA9IG5hbWUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBuYW1lLnNsaWNlKDEpO1xuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgc3RhcnRUaW1lOiBtYXJrMi5zdGFydFRpbWVcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXJrc1JlcG9ydChzZXNzaW9uSWQpIHtcbiAgaWYgKHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBjb25zdCBhbGxNYXJrcyA9IFtdO1xuICBmb3IgKGNvbnN0IG5hbWUgb2YgbWFya05hbWVzKSB7XG4gICAgY29uc3QgbWFya3MgPSBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKG5hbWUpLmZpbHRlcigoZW50cnkpID0+IGVudHJ5LmVudHJ5VHlwZSA9PT0gXCJtYXJrXCIpLmZpbHRlcigobWFyazIpID0+IG1hcmsyLmRldGFpbC5zZXNzaW9uSWQgPT09IHNlc3Npb25JZCk7XG4gICAgYWxsTWFya3MucHVzaCguLi5tYXJrcyk7XG4gIH1cbiAgcmV0dXJuIGFsbE1hcmtzLm1hcChwZXJmb3JtYW5jZU1hcmtUb0pzb24pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0cmljcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJtYXJrTmFtZXMiLCJtYXJrIiwibmFtZSIsInNlc3Npb25JZCIsImRldGFpbCIsInBlcmZvcm1hbmNlIiwicGVyZm9ybWFuY2VNYXJrVG9Kc29uIiwibWFyazIiLCJzbGljZSIsImxlbmd0aCIsImNoYXJBdCIsInRvTG93ZXJDYXNlIiwic3RhcnRUaW1lIiwiZ2V0TWFya3NSZXBvcnQiLCJnZXRFbnRyaWVzQnlOYW1lIiwiYWxsTWFya3MiLCJtYXJrcyIsImZpbHRlciIsImVudHJ5IiwiZW50cnlUeXBlIiwicHVzaCIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OptimisticQueryResults: () => (/* binding */ OptimisticQueryResults)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\n\n\n\n\nclass OptimisticLocalStoreImpl {\n    constructor(queryResults){\n        this.queryResults = queryResults;\n        this.modifiedQueries = [];\n    }\n    getQuery(query, ...args) {\n        const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n        const queryResult = this.queryResults.get((0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs));\n        if (queryResult === void 0) {\n            return void 0;\n        }\n        return OptimisticLocalStoreImpl.queryValue(queryResult.result);\n    }\n    getAllQueries(query) {\n        const queriesWithName = [];\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n        for (const queryResult of this.queryResults.values()){\n            if (queryResult.udfPath === (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.canonicalizeUdfPath)(name)) {\n                queriesWithName.push({\n                    args: queryResult.args,\n                    value: OptimisticLocalStoreImpl.queryValue(queryResult.result)\n                });\n            }\n        }\n        return queriesWithName;\n    }\n    setQuery(queryReference, args, value) {\n        const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(queryReference);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs);\n        let result;\n        if (value === void 0) {\n            result = void 0;\n        } else {\n            result = {\n                success: true,\n                value,\n                // It's an optimistic update, so there are no function logs to show.\n                logLines: []\n            };\n        }\n        const query = {\n            udfPath: name,\n            args: queryArgs,\n            result\n        };\n        this.queryResults.set(queryToken, query);\n        this.modifiedQueries.push(queryToken);\n    }\n    static queryValue(result) {\n        if (result === void 0) {\n            return void 0;\n        } else if (result.success) {\n            return result.value;\n        } else {\n            return void 0;\n        }\n    }\n}\nclass OptimisticQueryResults {\n    constructor(){\n        this.queryResults = /* @__PURE__ */ new Map();\n        this.optimisticUpdates = [];\n    }\n    ingestQueryResultsFromServer(serverQueryResults, optimisticUpdatesToDrop) {\n        this.optimisticUpdates = this.optimisticUpdates.filter((updateAndId)=>{\n            return !optimisticUpdatesToDrop.has(updateAndId.mutationId);\n        });\n        const oldQueryResults = this.queryResults;\n        this.queryResults = new Map(serverQueryResults);\n        const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n        for (const updateAndId of this.optimisticUpdates){\n            updateAndId.update(localStore);\n        }\n        const changedQueries = [];\n        for (const [queryToken, query] of this.queryResults){\n            const oldQuery = oldQueryResults.get(queryToken);\n            if (oldQuery === void 0 || oldQuery.result !== query.result) {\n                changedQueries.push(queryToken);\n            }\n        }\n        return changedQueries;\n    }\n    applyOptimisticUpdate(update, mutationId) {\n        this.optimisticUpdates.push({\n            update,\n            mutationId\n        });\n        const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n        update(localStore);\n        return localStore.modifiedQueries;\n    }\n    queryResult(queryToken) {\n        const query = this.queryResults.get(queryToken);\n        if (query === void 0) {\n            return void 0;\n        }\n        const result = query.result;\n        if (result === void 0) {\n            return void 0;\n        } else if (result.success) {\n            return result.value;\n        } else {\n            if (result.errorData !== void 0) {\n                throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(result, new _values_errors_js__WEBPACK_IMPORTED_MODULE_4__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)));\n            }\n            throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result));\n        }\n    }\n    hasQueryResult(queryToken) {\n        return this.queryResults.get(queryToken) !== void 0;\n    }\n    /**\n   * @internal\n   */ queryLogs(queryToken) {\n        const query = this.queryResults.get(queryToken);\n        return query?.result?.logLines;\n    }\n} //# sourceMappingURL=optimistic_updates_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/protocol.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeClientMessage: () => (/* binding */ encodeClientMessage),\n/* harmony export */   longToU64: () => (/* binding */ longToU64),\n/* harmony export */   parseServerMessage: () => (/* binding */ parseServerMessage),\n/* harmony export */   u64ToLong: () => (/* binding */ u64ToLong)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n\n\n\nfunction u64ToLong(encoded) {\n    const integerBytes = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.toByteArray(encoded);\n    return _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromBytesLE(Array.from(integerBytes));\n}\nfunction longToU64(raw) {\n    const integerBytes = new Uint8Array(raw.toBytesLE());\n    return _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.fromByteArray(integerBytes);\n}\nfunction parseServerMessage(encoded) {\n    switch(encoded.type){\n        case \"FatalError\":\n        case \"AuthError\":\n        case \"ActionResponse\":\n        case \"Ping\":\n            {\n                return {\n                    ...encoded\n                };\n            }\n        case \"MutationResponse\":\n            {\n                if (encoded.success) {\n                    return {\n                        ...encoded,\n                        ts: u64ToLong(encoded.ts)\n                    };\n                } else {\n                    return {\n                        ...encoded\n                    };\n                }\n            }\n        case \"Transition\":\n            {\n                return {\n                    ...encoded,\n                    startVersion: {\n                        ...encoded.startVersion,\n                        ts: u64ToLong(encoded.startVersion.ts)\n                    },\n                    endVersion: {\n                        ...encoded.endVersion,\n                        ts: u64ToLong(encoded.endVersion.ts)\n                    }\n                };\n            }\n        default:\n            {\n                const _exhaustivenessCheck = encoded;\n            }\n    }\n    return void 0;\n}\nfunction encodeClientMessage(message) {\n    switch(message.type){\n        case \"Authenticate\":\n        case \"ModifyQuerySet\":\n        case \"Mutation\":\n        case \"Action\":\n        case \"Event\":\n            {\n                return {\n                    ...message\n                };\n            }\n        case \"Connect\":\n            {\n                if (message.maxObservedTimestamp !== void 0) {\n                    return {\n                        ...message,\n                        maxObservedTimestamp: longToU64(message.maxObservedTimestamp)\n                    };\n                } else {\n                    return {\n                        ...message,\n                        maxObservedTimestamp: void 0\n                    };\n                }\n            }\n        default:\n            {\n                const _exhaustivenessCheck = message;\n            }\n    }\n    return void 0;\n} //# sourceMappingURL=protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNrQztBQUNiO0FBQzNCLFNBQVNFLFVBQVVDLE9BQU87SUFDL0IsTUFBTUMsZUFBZUosZ0VBQWtCLENBQUNHO0lBQ3hDLE9BQU9GLDBDQUFJQSxDQUFDSyxXQUFXLENBQUNDLE1BQU1DLElBQUksQ0FBQ0o7QUFDckM7QUFDTyxTQUFTSyxVQUFVQyxHQUFHO0lBQzNCLE1BQU1OLGVBQWUsSUFBSU8sV0FBV0QsSUFBSUUsU0FBUztJQUNqRCxPQUFPWixrRUFBb0IsQ0FBQ0k7QUFDOUI7QUFDTyxTQUFTVSxtQkFBbUJYLE9BQU87SUFDeEMsT0FBUUEsUUFBUVksSUFBSTtRQUNsQixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQVE7Z0JBQ1gsT0FBTztvQkFBRSxHQUFHWixPQUFPO2dCQUFDO1lBQ3RCO1FBQ0EsS0FBSztZQUFvQjtnQkFDdkIsSUFBSUEsUUFBUWEsT0FBTyxFQUFFO29CQUNuQixPQUFPO3dCQUFFLEdBQUdiLE9BQU87d0JBQUVjLElBQUlmLFVBQVVDLFFBQVFjLEVBQUU7b0JBQUU7Z0JBQ2pELE9BQU87b0JBQ0wsT0FBTzt3QkFBRSxHQUFHZCxPQUFPO29CQUFDO2dCQUN0QjtZQUNGO1FBQ0EsS0FBSztZQUFjO2dCQUNqQixPQUFPO29CQUNMLEdBQUdBLE9BQU87b0JBQ1ZlLGNBQWM7d0JBQ1osR0FBR2YsUUFBUWUsWUFBWTt3QkFDdkJELElBQUlmLFVBQVVDLFFBQVFlLFlBQVksQ0FBQ0QsRUFBRTtvQkFDdkM7b0JBQ0FFLFlBQVk7d0JBQ1YsR0FBR2hCLFFBQVFnQixVQUFVO3dCQUNyQkYsSUFBSWYsVUFBVUMsUUFBUWdCLFVBQVUsQ0FBQ0YsRUFBRTtvQkFDckM7Z0JBQ0Y7WUFDRjtRQUNBO1lBQVM7Z0JBQ1AsTUFBTUcsdUJBQXVCakI7WUFDL0I7SUFDRjtJQUNBLE9BQU8sS0FBSztBQUNkO0FBQ08sU0FBU2tCLG9CQUFvQkMsT0FBTztJQUN6QyxPQUFRQSxRQUFRUCxJQUFJO1FBQ2xCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQVM7Z0JBQ1osT0FBTztvQkFBRSxHQUFHTyxPQUFPO2dCQUFDO1lBQ3RCO1FBQ0EsS0FBSztZQUFXO2dCQUNkLElBQUlBLFFBQVFDLG9CQUFvQixLQUFLLEtBQUssR0FBRztvQkFDM0MsT0FBTzt3QkFDTCxHQUFHRCxPQUFPO3dCQUNWQyxzQkFBc0JkLFVBQVVhLFFBQVFDLG9CQUFvQjtvQkFDOUQ7Z0JBQ0YsT0FBTztvQkFDTCxPQUFPO3dCQUFFLEdBQUdELE9BQU87d0JBQUVDLHNCQUFzQixLQUFLO29CQUFFO2dCQUNwRDtZQUNGO1FBQ0E7WUFBUztnQkFDUCxNQUFNSCx1QkFBdUJFO1lBQy9CO0lBQ0Y7SUFDQSxPQUFPLEtBQUs7QUFDZCxFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcz8yNTI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgQmFzZTY0IH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgTG9uZyB9IGZyb20gXCIuLi9sb25nLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gdTY0VG9Mb25nKGVuY29kZWQpIHtcbiAgY29uc3QgaW50ZWdlckJ5dGVzID0gQmFzZTY0LnRvQnl0ZUFycmF5KGVuY29kZWQpO1xuICByZXR1cm4gTG9uZy5mcm9tQnl0ZXNMRShBcnJheS5mcm9tKGludGVnZXJCeXRlcykpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxvbmdUb1U2NChyYXcpIHtcbiAgY29uc3QgaW50ZWdlckJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkocmF3LnRvQnl0ZXNMRSgpKTtcbiAgcmV0dXJuIEJhc2U2NC5mcm9tQnl0ZUFycmF5KGludGVnZXJCeXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTZXJ2ZXJNZXNzYWdlKGVuY29kZWQpIHtcbiAgc3dpdGNoIChlbmNvZGVkLnR5cGUpIHtcbiAgICBjYXNlIFwiRmF0YWxFcnJvclwiOlxuICAgIGNhc2UgXCJBdXRoRXJyb3JcIjpcbiAgICBjYXNlIFwiQWN0aW9uUmVzcG9uc2VcIjpcbiAgICBjYXNlIFwiUGluZ1wiOiB7XG4gICAgICByZXR1cm4geyAuLi5lbmNvZGVkIH07XG4gICAgfVxuICAgIGNhc2UgXCJNdXRhdGlvblJlc3BvbnNlXCI6IHtcbiAgICAgIGlmIChlbmNvZGVkLnN1Y2Nlc3MpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4uZW5jb2RlZCwgdHM6IHU2NFRvTG9uZyhlbmNvZGVkLnRzKSB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgLi4uZW5jb2RlZCB9O1xuICAgICAgfVxuICAgIH1cbiAgICBjYXNlIFwiVHJhbnNpdGlvblwiOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5lbmNvZGVkLFxuICAgICAgICBzdGFydFZlcnNpb246IHtcbiAgICAgICAgICAuLi5lbmNvZGVkLnN0YXJ0VmVyc2lvbixcbiAgICAgICAgICB0czogdTY0VG9Mb25nKGVuY29kZWQuc3RhcnRWZXJzaW9uLnRzKVxuICAgICAgICB9LFxuICAgICAgICBlbmRWZXJzaW9uOiB7XG4gICAgICAgICAgLi4uZW5jb2RlZC5lbmRWZXJzaW9uLFxuICAgICAgICAgIHRzOiB1NjRUb0xvbmcoZW5jb2RlZC5lbmRWZXJzaW9uLnRzKVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgICBkZWZhdWx0OiB7XG4gICAgICBjb25zdCBfZXhoYXVzdGl2ZW5lc3NDaGVjayA9IGVuY29kZWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiB2b2lkIDA7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQ2xpZW50TWVzc2FnZShtZXNzYWdlKSB7XG4gIHN3aXRjaCAobWVzc2FnZS50eXBlKSB7XG4gICAgY2FzZSBcIkF1dGhlbnRpY2F0ZVwiOlxuICAgIGNhc2UgXCJNb2RpZnlRdWVyeVNldFwiOlxuICAgIGNhc2UgXCJNdXRhdGlvblwiOlxuICAgIGNhc2UgXCJBY3Rpb25cIjpcbiAgICBjYXNlIFwiRXZlbnRcIjoge1xuICAgICAgcmV0dXJuIHsgLi4ubWVzc2FnZSB9O1xuICAgIH1cbiAgICBjYXNlIFwiQ29ubmVjdFwiOiB7XG4gICAgICBpZiAobWVzc2FnZS5tYXhPYnNlcnZlZFRpbWVzdGFtcCAhPT0gdm9pZCAwKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4ubWVzc2FnZSxcbiAgICAgICAgICBtYXhPYnNlcnZlZFRpbWVzdGFtcDogbG9uZ1RvVTY0KG1lc3NhZ2UubWF4T2JzZXJ2ZWRUaW1lc3RhbXApXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geyAuLi5tZXNzYWdlLCBtYXhPYnNlcnZlZFRpbWVzdGFtcDogdm9pZCAwIH07XG4gICAgICB9XG4gICAgfVxuICAgIGRlZmF1bHQ6IHtcbiAgICAgIGNvbnN0IF9leGhhdXN0aXZlbmVzc0NoZWNrID0gbWVzc2FnZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3RvY29sLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkJhc2U2NCIsIkxvbmciLCJ1NjRUb0xvbmciLCJlbmNvZGVkIiwiaW50ZWdlckJ5dGVzIiwidG9CeXRlQXJyYXkiLCJmcm9tQnl0ZXNMRSIsIkFycmF5IiwiZnJvbSIsImxvbmdUb1U2NCIsInJhdyIsIlVpbnQ4QXJyYXkiLCJ0b0J5dGVzTEUiLCJmcm9tQnl0ZUFycmF5IiwicGFyc2VTZXJ2ZXJNZXNzYWdlIiwidHlwZSIsInN1Y2Nlc3MiLCJ0cyIsInN0YXJ0VmVyc2lvbiIsImVuZFZlcnNpb24iLCJfZXhoYXVzdGl2ZW5lc3NDaGVjayIsImVuY29kZUNsaWVudE1lc3NhZ2UiLCJtZXNzYWdlIiwibWF4T2JzZXJ2ZWRUaW1lc3RhbXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/remote_query_set.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoteQuerySet: () => (/* binding */ RemoteQuerySet)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\n\n\n\nclass RemoteQuerySet {\n    constructor(queryPath){\n        this.version = {\n            querySet: 0,\n            ts: _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromNumber(0),\n            identity: 0\n        };\n        this.remoteQuerySet = /* @__PURE__ */ new Map();\n        this.queryPath = queryPath;\n    }\n    transition(transition) {\n        const start = transition.startVersion;\n        if (this.version.querySet !== start.querySet || this.version.ts.notEquals(start.ts) || this.version.identity !== start.identity) {\n            throw new Error(`Invalid start version: ${start.ts.toString()}:${start.querySet}`);\n        }\n        for (const modification of transition.modifications){\n            switch(modification.type){\n                case \"QueryUpdated\":\n                    {\n                        const queryPath = this.queryPath(modification.queryId);\n                        if (queryPath) {\n                            for (const line of modification.logLines){\n                                (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logToConsole)(\"info\", \"query\", queryPath, line);\n                            }\n                        }\n                        const value = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(modification.value ?? null, true);\n                        this.remoteQuerySet.set(modification.queryId, {\n                            success: true,\n                            value,\n                            logLines: modification.logLines\n                        });\n                        break;\n                    }\n                case \"QueryFailed\":\n                    {\n                        const queryPath = this.queryPath(modification.queryId);\n                        if (queryPath) {\n                            for (const line of modification.logLines){\n                                (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logToConsole)(\"info\", \"query\", queryPath, line);\n                            }\n                        }\n                        const { errorData } = modification;\n                        this.remoteQuerySet.set(modification.queryId, {\n                            success: false,\n                            errorMessage: modification.errorMessage,\n                            errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n                            logLines: modification.logLines\n                        });\n                        break;\n                    }\n                case \"QueryRemoved\":\n                    {\n                        this.remoteQuerySet.delete(modification.queryId);\n                        break;\n                    }\n                default:\n                    {\n                        const _ = modification;\n                        throw new Error(`Invalid modification ${modification.type}`);\n                    }\n            }\n        }\n        this.version = transition.endVersion;\n    }\n    remoteQueryResults() {\n        return this.remoteQuerySet;\n    }\n    timestamp() {\n        return this.version.ts;\n    }\n} //# sourceMappingURL=remote_query_set.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9yZW1vdGVfcXVlcnlfc2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUN3QztBQUNuQjtBQUNXO0FBQ3RDLE1BQU1HO0lBQ1hDLFlBQVlDLFNBQVMsQ0FBRTtRQUNyQixJQUFJLENBQUNDLE9BQU8sR0FBRztZQUFFQyxVQUFVO1lBQUdDLElBQUlQLDBDQUFJQSxDQUFDUSxVQUFVLENBQUM7WUFBSUMsVUFBVTtRQUFFO1FBQ2xFLElBQUksQ0FBQ0MsY0FBYyxHQUFHLGFBQWEsR0FBRyxJQUFJQztRQUMxQyxJQUFJLENBQUNQLFNBQVMsR0FBR0E7SUFDbkI7SUFDQVEsV0FBV0EsVUFBVSxFQUFFO1FBQ3JCLE1BQU1DLFFBQVFELFdBQVdFLFlBQVk7UUFDckMsSUFBSSxJQUFJLENBQUNULE9BQU8sQ0FBQ0MsUUFBUSxLQUFLTyxNQUFNUCxRQUFRLElBQUksSUFBSSxDQUFDRCxPQUFPLENBQUNFLEVBQUUsQ0FBQ1EsU0FBUyxDQUFDRixNQUFNTixFQUFFLEtBQUssSUFBSSxDQUFDRixPQUFPLENBQUNJLFFBQVEsS0FBS0ksTUFBTUosUUFBUSxFQUFFO1lBQy9ILE1BQU0sSUFBSU8sTUFDUixDQUFDLHVCQUF1QixFQUFFSCxNQUFNTixFQUFFLENBQUNVLFFBQVEsR0FBRyxDQUFDLEVBQUVKLE1BQU1QLFFBQVEsQ0FBQyxDQUFDO1FBRXJFO1FBQ0EsS0FBSyxNQUFNWSxnQkFBZ0JOLFdBQVdPLGFBQWEsQ0FBRTtZQUNuRCxPQUFRRCxhQUFhRSxJQUFJO2dCQUN2QixLQUFLO29CQUFnQjt3QkFDbkIsTUFBTWhCLFlBQVksSUFBSSxDQUFDQSxTQUFTLENBQUNjLGFBQWFHLE9BQU87d0JBQ3JELElBQUlqQixXQUFXOzRCQUNiLEtBQUssTUFBTWtCLFFBQVFKLGFBQWFLLFFBQVEsQ0FBRTtnQ0FDeEN0Qix5REFBWUEsQ0FBQyxRQUFRLFNBQVNHLFdBQVdrQjs0QkFDM0M7d0JBQ0Y7d0JBQ0EsTUFBTUUsUUFBUXpCLDhEQUFZQSxDQUFDbUIsYUFBYU0sS0FBSyxJQUFJLE1BQU07d0JBQ3ZELElBQUksQ0FBQ2QsY0FBYyxDQUFDZSxHQUFHLENBQUNQLGFBQWFHLE9BQU8sRUFBRTs0QkFDNUNLLFNBQVM7NEJBQ1RGOzRCQUNBRCxVQUFVTCxhQUFhSyxRQUFRO3dCQUNqQzt3QkFDQTtvQkFDRjtnQkFDQSxLQUFLO29CQUFlO3dCQUNsQixNQUFNbkIsWUFBWSxJQUFJLENBQUNBLFNBQVMsQ0FBQ2MsYUFBYUcsT0FBTzt3QkFDckQsSUFBSWpCLFdBQVc7NEJBQ2IsS0FBSyxNQUFNa0IsUUFBUUosYUFBYUssUUFBUSxDQUFFO2dDQUN4Q3RCLHlEQUFZQSxDQUFDLFFBQVEsU0FBU0csV0FBV2tCOzRCQUMzQzt3QkFDRjt3QkFDQSxNQUFNLEVBQUVLLFNBQVMsRUFBRSxHQUFHVDt3QkFDdEIsSUFBSSxDQUFDUixjQUFjLENBQUNlLEdBQUcsQ0FBQ1AsYUFBYUcsT0FBTyxFQUFFOzRCQUM1Q0ssU0FBUzs0QkFDVEUsY0FBY1YsYUFBYVUsWUFBWTs0QkFDdkNELFdBQVdBLGNBQWMsS0FBSyxJQUFJNUIsOERBQVlBLENBQUM0QixhQUFhLEtBQUs7NEJBQ2pFSixVQUFVTCxhQUFhSyxRQUFRO3dCQUNqQzt3QkFDQTtvQkFDRjtnQkFDQSxLQUFLO29CQUFnQjt3QkFDbkIsSUFBSSxDQUFDYixjQUFjLENBQUNtQixNQUFNLENBQUNYLGFBQWFHLE9BQU87d0JBQy9DO29CQUNGO2dCQUNBO29CQUFTO3dCQUNQLE1BQU1TLElBQUlaO3dCQUNWLE1BQU0sSUFBSUYsTUFBTSxDQUFDLHFCQUFxQixFQUFFRSxhQUFhRSxJQUFJLENBQUMsQ0FBQztvQkFDN0Q7WUFDRjtRQUNGO1FBQ0EsSUFBSSxDQUFDZixPQUFPLEdBQUdPLFdBQVdtQixVQUFVO0lBQ3RDO0lBQ0FDLHFCQUFxQjtRQUNuQixPQUFPLElBQUksQ0FBQ3RCLGNBQWM7SUFDNUI7SUFDQXVCLFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQzVCLE9BQU8sQ0FBQ0UsRUFBRTtJQUN4QjtBQUNGLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL3JlbW90ZV9xdWVyeV9zZXQuanM/YWNhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGpzb25Ub0NvbnZleCB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IExvbmcgfSBmcm9tIFwiLi4vbG9uZy5qc1wiO1xuaW1wb3J0IHsgbG9nVG9Db25zb2xlIH0gZnJvbSBcIi4uL2xvZ2dpbmcuanNcIjtcbmV4cG9ydCBjbGFzcyBSZW1vdGVRdWVyeVNldCB7XG4gIGNvbnN0cnVjdG9yKHF1ZXJ5UGF0aCkge1xuICAgIHRoaXMudmVyc2lvbiA9IHsgcXVlcnlTZXQ6IDAsIHRzOiBMb25nLmZyb21OdW1iZXIoMCksIGlkZW50aXR5OiAwIH07XG4gICAgdGhpcy5yZW1vdGVRdWVyeVNldCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgdGhpcy5xdWVyeVBhdGggPSBxdWVyeVBhdGg7XG4gIH1cbiAgdHJhbnNpdGlvbih0cmFuc2l0aW9uKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0cmFuc2l0aW9uLnN0YXJ0VmVyc2lvbjtcbiAgICBpZiAodGhpcy52ZXJzaW9uLnF1ZXJ5U2V0ICE9PSBzdGFydC5xdWVyeVNldCB8fCB0aGlzLnZlcnNpb24udHMubm90RXF1YWxzKHN0YXJ0LnRzKSB8fCB0aGlzLnZlcnNpb24uaWRlbnRpdHkgIT09IHN0YXJ0LmlkZW50aXR5KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBJbnZhbGlkIHN0YXJ0IHZlcnNpb246ICR7c3RhcnQudHMudG9TdHJpbmcoKX06JHtzdGFydC5xdWVyeVNldH1gXG4gICAgICApO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IG1vZGlmaWNhdGlvbiBvZiB0cmFuc2l0aW9uLm1vZGlmaWNhdGlvbnMpIHtcbiAgICAgIHN3aXRjaCAobW9kaWZpY2F0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcIlF1ZXJ5VXBkYXRlZFwiOiB7XG4gICAgICAgICAgY29uc3QgcXVlcnlQYXRoID0gdGhpcy5xdWVyeVBhdGgobW9kaWZpY2F0aW9uLnF1ZXJ5SWQpO1xuICAgICAgICAgIGlmIChxdWVyeVBhdGgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbGluZSBvZiBtb2RpZmljYXRpb24ubG9nTGluZXMpIHtcbiAgICAgICAgICAgICAgbG9nVG9Db25zb2xlKFwiaW5mb1wiLCBcInF1ZXJ5XCIsIHF1ZXJ5UGF0aCwgbGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHZhbHVlID0ganNvblRvQ29udmV4KG1vZGlmaWNhdGlvbi52YWx1ZSA/PyBudWxsLCB0cnVlKTtcbiAgICAgICAgICB0aGlzLnJlbW90ZVF1ZXJ5U2V0LnNldChtb2RpZmljYXRpb24ucXVlcnlJZCwge1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgbG9nTGluZXM6IG1vZGlmaWNhdGlvbi5sb2dMaW5lc1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJRdWVyeUZhaWxlZFwiOiB7XG4gICAgICAgICAgY29uc3QgcXVlcnlQYXRoID0gdGhpcy5xdWVyeVBhdGgobW9kaWZpY2F0aW9uLnF1ZXJ5SWQpO1xuICAgICAgICAgIGlmIChxdWVyeVBhdGgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbGluZSBvZiBtb2RpZmljYXRpb24ubG9nTGluZXMpIHtcbiAgICAgICAgICAgICAgbG9nVG9Db25zb2xlKFwiaW5mb1wiLCBcInF1ZXJ5XCIsIHF1ZXJ5UGF0aCwgbGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHsgZXJyb3JEYXRhIH0gPSBtb2RpZmljYXRpb247XG4gICAgICAgICAgdGhpcy5yZW1vdGVRdWVyeVNldC5zZXQobW9kaWZpY2F0aW9uLnF1ZXJ5SWQsIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiBtb2RpZmljYXRpb24uZXJyb3JNZXNzYWdlLFxuICAgICAgICAgICAgZXJyb3JEYXRhOiBlcnJvckRhdGEgIT09IHZvaWQgMCA/IGpzb25Ub0NvbnZleChlcnJvckRhdGEpIDogdm9pZCAwLFxuICAgICAgICAgICAgbG9nTGluZXM6IG1vZGlmaWNhdGlvbi5sb2dMaW5lc1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJRdWVyeVJlbW92ZWRcIjoge1xuICAgICAgICAgIHRoaXMucmVtb3RlUXVlcnlTZXQuZGVsZXRlKG1vZGlmaWNhdGlvbi5xdWVyeUlkKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgY29uc3QgXyA9IG1vZGlmaWNhdGlvbjtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbW9kaWZpY2F0aW9uICR7bW9kaWZpY2F0aW9uLnR5cGV9YCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy52ZXJzaW9uID0gdHJhbnNpdGlvbi5lbmRWZXJzaW9uO1xuICB9XG4gIHJlbW90ZVF1ZXJ5UmVzdWx0cygpIHtcbiAgICByZXR1cm4gdGhpcy5yZW1vdGVRdWVyeVNldDtcbiAgfVxuICB0aW1lc3RhbXAoKSB7XG4gICAgcmV0dXJuIHRoaXMudmVyc2lvbi50cztcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3RlX3F1ZXJ5X3NldC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJqc29uVG9Db252ZXgiLCJMb25nIiwibG9nVG9Db25zb2xlIiwiUmVtb3RlUXVlcnlTZXQiLCJjb25zdHJ1Y3RvciIsInF1ZXJ5UGF0aCIsInZlcnNpb24iLCJxdWVyeVNldCIsInRzIiwiZnJvbU51bWJlciIsImlkZW50aXR5IiwicmVtb3RlUXVlcnlTZXQiLCJNYXAiLCJ0cmFuc2l0aW9uIiwic3RhcnQiLCJzdGFydFZlcnNpb24iLCJub3RFcXVhbHMiLCJFcnJvciIsInRvU3RyaW5nIiwibW9kaWZpY2F0aW9uIiwibW9kaWZpY2F0aW9ucyIsInR5cGUiLCJxdWVyeUlkIiwibGluZSIsImxvZ0xpbmVzIiwidmFsdWUiLCJzZXQiLCJzdWNjZXNzIiwiZXJyb3JEYXRhIiwiZXJyb3JNZXNzYWdlIiwiZGVsZXRlIiwiXyIsImVuZFZlcnNpb24iLCJyZW1vdGVRdWVyeVJlc3VsdHMiLCJ0aW1lc3RhbXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/request_manager.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestManager: () => (/* binding */ RequestManager)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\n\n\nclass RequestManager {\n    constructor(){\n        this.inflightRequests = /* @__PURE__ */ new Map();\n        this.requestsOlderThanRestart = /* @__PURE__ */ new Set();\n    }\n    request(message, sent) {\n        const result = new Promise((resolve)=>{\n            const status = sent ? \"Requested\" : \"NotSent\";\n            this.inflightRequests.set(message.requestId, {\n                message,\n                status: {\n                    status,\n                    requestedAt: /* @__PURE__ */ new Date(),\n                    onResult: resolve\n                }\n            });\n        });\n        return result;\n    }\n    /**\n   * Update the state after receiving a response.\n   *\n   * @returns A RequestId if the request is complete and its optimistic update\n   * can be dropped, null otherwise.\n   */ onResponse(response) {\n        const requestInfo = this.inflightRequests.get(response.requestId);\n        if (requestInfo === void 0) {\n            return null;\n        }\n        if (requestInfo.status.status === \"Completed\") {\n            return null;\n        }\n        const udfType = requestInfo.message.type === \"Mutation\" ? \"mutation\" : \"action\";\n        const udfPath = requestInfo.message.udfPath;\n        for (const line of response.logLines){\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logToConsole)(\"info\", udfType, udfPath, line);\n        }\n        const status = requestInfo.status;\n        let onResolve;\n        if (response.success) {\n            onResolve = ()=>status.onResult({\n                    success: true,\n                    logLines: response.logLines,\n                    value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(response.result, true)\n                });\n        } else {\n            const errorMessage = response.result;\n            const { errorData } = response;\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logToConsole)(\"error\", udfType, udfPath, errorMessage);\n            onResolve = ()=>status.onResult({\n                    success: false,\n                    errorMessage,\n                    errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n                    logLines: response.logLines\n                });\n        }\n        if (response.type === \"ActionResponse\" || !response.success) {\n            onResolve();\n            this.inflightRequests.delete(response.requestId);\n            this.requestsOlderThanRestart.delete(response.requestId);\n            return response.requestId;\n        }\n        requestInfo.status = {\n            status: \"Completed\",\n            ts: response.ts,\n            onResolve\n        };\n        return null;\n    }\n    // Remove and returns completed requests.\n    removeCompleted(ts) {\n        const completeRequests = /* @__PURE__ */ new Set();\n        for (const [requestId, requestInfo] of this.inflightRequests.entries()){\n            const status = requestInfo.status;\n            if (status.status === \"Completed\" && status.ts.lessThanOrEqual(ts)) {\n                status.onResolve();\n                completeRequests.add(requestId);\n                this.inflightRequests.delete(requestId);\n                this.requestsOlderThanRestart.delete(requestId);\n            }\n        }\n        return completeRequests;\n    }\n    restart() {\n        this.requestsOlderThanRestart = new Set(this.inflightRequests.keys());\n        const allMessages = [];\n        for (const [requestId, value] of this.inflightRequests){\n            if (value.status.status === \"NotSent\") {\n                value.status.status = \"Requested\";\n                allMessages.push(value.message);\n                continue;\n            }\n            if (value.message.type === \"Mutation\") {\n                allMessages.push(value.message);\n            } else {\n                this.inflightRequests.delete(requestId);\n                this.requestsOlderThanRestart.delete(requestId);\n                if (value.status.status === \"Completed\") {\n                    throw new Error(\"Action should never be in 'Completed' state\");\n                }\n                value.status.onResult({\n                    success: false,\n                    errorMessage: \"Connection lost while action was in flight\",\n                    logLines: []\n                });\n            }\n        }\n        return allMessages;\n    }\n    /**\n   * @returns true if there are any requests that have been requested but have\n   * not be completed yet.\n   */ hasIncompleteRequests() {\n        for (const requestInfo of this.inflightRequests.values()){\n            if (requestInfo.status.status === \"Requested\") {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * @returns true if there are any inflight requests, including ones that have\n   * completed on the server, but have not been applied.\n   */ hasInflightRequests() {\n        return this.inflightRequests.size > 0;\n    }\n    /**\n   * @returns true if there are any inflight requests, that have been hanging around\n   * since prior to the most recent restart.\n   */ hasSyncedPastLastReconnect() {\n        return this.requestsOlderThanRestart.size === 0;\n    }\n    timeOfOldestInflightRequest() {\n        if (this.inflightRequests.size === 0) {\n            return null;\n        }\n        let oldestInflightRequest = Date.now();\n        for (const request of this.inflightRequests.values()){\n            if (request.status.status !== \"Completed\") {\n                if (request.status.requestedAt.getTime() < oldestInflightRequest) {\n                    oldestInflightRequest = request.status.requestedAt.getTime();\n                }\n            }\n        }\n        return new Date(oldestInflightRequest);\n    }\n} //# sourceMappingURL=request_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/session.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newSessionId: () => (/* binding */ newSessionId)\n/* harmony export */ });\n\nfunction newSessionId() {\n    return uuidv4();\n}\nfunction uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c)=>{\n        const r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n        return v.toString(16);\n    });\n} //# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLFNBQVNBO0lBQ2QsT0FBT0M7QUFDVDtBQUNBLFNBQVNBO0lBQ1AsT0FBTyx1Q0FBdUNDLE9BQU8sQ0FBQyxTQUFTLENBQUNDO1FBQzlELE1BQU1DLElBQUlDLEtBQUtDLE1BQU0sS0FBSyxLQUFLLEdBQUdDLElBQUlKLE1BQU0sTUFBTUMsSUFBSUEsSUFBSSxJQUFJO1FBQzlELE9BQU9HLEVBQUVDLFFBQVEsQ0FBQztJQUNwQjtBQUNGLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL3Nlc3Npb24uanM/ZTEwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiBuZXdTZXNzaW9uSWQoKSB7XG4gIHJldHVybiB1dWlkdjQoKTtcbn1cbmZ1bmN0aW9uIHV1aWR2NCgpIHtcbiAgcmV0dXJuIFwieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4XCIucmVwbGFjZSgvW3h5XS9nLCAoYykgPT4ge1xuICAgIGNvbnN0IHIgPSBNYXRoLnJhbmRvbSgpICogMTYgfCAwLCB2ID0gYyA9PT0gXCJ4XCIgPyByIDogciAmIDMgfCA4O1xuICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXNzaW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbIm5ld1Nlc3Npb25JZCIsInV1aWR2NCIsInJlcGxhY2UiLCJjIiwiciIsIk1hdGgiLCJyYW5kb20iLCJ2IiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canonicalizeUdfPath: () => (/* binding */ canonicalizeUdfPath),\n/* harmony export */   serializePathAndArgs: () => (/* binding */ serializePathAndArgs)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\nfunction canonicalizeUdfPath(udfPath) {\n    const pieces = udfPath.split(\":\");\n    let moduleName;\n    let functionName;\n    if (pieces.length === 1) {\n        moduleName = pieces[0];\n        functionName = \"default\";\n    } else {\n        moduleName = pieces.slice(0, pieces.length - 1).join(\":\");\n        functionName = pieces[pieces.length - 1];\n    }\n    if (moduleName.endsWith(\".js\")) {\n        moduleName = moduleName.slice(0, -3);\n    }\n    return `${moduleName}:${functionName}`;\n}\nfunction serializePathAndArgs(udfPath, args) {\n    return JSON.stringify({\n        udfPath: canonicalizeUdfPath(udfPath),\n        args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)\n    });\n} //# sourceMappingURL=udf_path_utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy91ZGZfcGF0aF91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUN3QztBQUM5QyxTQUFTQyxvQkFBb0JDLE9BQU87SUFDekMsTUFBTUMsU0FBU0QsUUFBUUUsS0FBSyxDQUFDO0lBQzdCLElBQUlDO0lBQ0osSUFBSUM7SUFDSixJQUFJSCxPQUFPSSxNQUFNLEtBQUssR0FBRztRQUN2QkYsYUFBYUYsTUFBTSxDQUFDLEVBQUU7UUFDdEJHLGVBQWU7SUFDakIsT0FBTztRQUNMRCxhQUFhRixPQUFPSyxLQUFLLENBQUMsR0FBR0wsT0FBT0ksTUFBTSxHQUFHLEdBQUdFLElBQUksQ0FBQztRQUNyREgsZUFBZUgsTUFBTSxDQUFDQSxPQUFPSSxNQUFNLEdBQUcsRUFBRTtJQUMxQztJQUNBLElBQUlGLFdBQVdLLFFBQVEsQ0FBQyxRQUFRO1FBQzlCTCxhQUFhQSxXQUFXRyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQ3BDO0lBQ0EsT0FBTyxDQUFDLEVBQUVILFdBQVcsQ0FBQyxFQUFFQyxhQUFhLENBQUM7QUFDeEM7QUFDTyxTQUFTSyxxQkFBcUJULE9BQU8sRUFBRVUsSUFBSTtJQUNoRCxPQUFPQyxLQUFLQyxTQUFTLENBQUM7UUFDcEJaLFNBQVNELG9CQUFvQkM7UUFDN0JVLE1BQU1aLDhEQUFZQSxDQUFDWTtJQUNyQjtBQUNGLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL3VkZl9wYXRoX3V0aWxzLmpzPzA1YTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY2Fub25pY2FsaXplVWRmUGF0aCh1ZGZQYXRoKSB7XG4gIGNvbnN0IHBpZWNlcyA9IHVkZlBhdGguc3BsaXQoXCI6XCIpO1xuICBsZXQgbW9kdWxlTmFtZTtcbiAgbGV0IGZ1bmN0aW9uTmFtZTtcbiAgaWYgKHBpZWNlcy5sZW5ndGggPT09IDEpIHtcbiAgICBtb2R1bGVOYW1lID0gcGllY2VzWzBdO1xuICAgIGZ1bmN0aW9uTmFtZSA9IFwiZGVmYXVsdFwiO1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZU5hbWUgPSBwaWVjZXMuc2xpY2UoMCwgcGllY2VzLmxlbmd0aCAtIDEpLmpvaW4oXCI6XCIpO1xuICAgIGZ1bmN0aW9uTmFtZSA9IHBpZWNlc1twaWVjZXMubGVuZ3RoIC0gMV07XG4gIH1cbiAgaWYgKG1vZHVsZU5hbWUuZW5kc1dpdGgoXCIuanNcIikpIHtcbiAgICBtb2R1bGVOYW1lID0gbW9kdWxlTmFtZS5zbGljZSgwLCAtMyk7XG4gIH1cbiAgcmV0dXJuIGAke21vZHVsZU5hbWV9OiR7ZnVuY3Rpb25OYW1lfWA7XG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplUGF0aEFuZEFyZ3ModWRmUGF0aCwgYXJncykge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuICAgIHVkZlBhdGg6IGNhbm9uaWNhbGl6ZVVkZlBhdGgodWRmUGF0aCksXG4gICAgYXJnczogY29udmV4VG9Kc29uKGFyZ3MpXG4gIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWRmX3BhdGhfdXRpbHMuanMubWFwXG4iXSwibmFtZXMiOlsiY29udmV4VG9Kc29uIiwiY2Fub25pY2FsaXplVWRmUGF0aCIsInVkZlBhdGgiLCJwaWVjZXMiLCJzcGxpdCIsIm1vZHVsZU5hbWUiLCJmdW5jdGlvbk5hbWUiLCJsZW5ndGgiLCJzbGljZSIsImpvaW4iLCJlbmRzV2l0aCIsInNlcmlhbGl6ZVBhdGhBbmRBcmdzIiwiYXJncyIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketManager: () => (/* binding */ WebSocketManager)\n/* harmony export */ });\n/* harmony import */ var _protocol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\");\n\n\nconst CLOSE_NORMAL = 1e3;\nconst CLOSE_GOING_AWAY = 1001;\nconst CLOSE_NO_STATUS = 1005;\nconst CLOSE_NOT_FOUND = 4040;\nclass WebSocketManager {\n    constructor(uri, onOpen, onMessage, webSocketConstructor, verbose){\n        this.webSocketConstructor = webSocketConstructor;\n        this.socket = {\n            state: \"disconnected\"\n        };\n        this.connectionCount = 0;\n        this.lastCloseReason = \"InitialConnect\";\n        this.initialBackoff = 100;\n        this.maxBackoff = 16e3;\n        this.retries = 0;\n        this.serverInactivityThreshold = 3e4;\n        this.reconnectDueToServerInactivityTimeout = null;\n        this.uri = uri;\n        this.onOpen = onOpen;\n        this.onMessage = onMessage;\n        this.verbose = verbose;\n        void this.connect();\n    }\n    connect() {\n        if (this.socket.state === \"stopped\") {\n            return;\n        }\n        if (this.socket.state !== \"disconnected\" && this.socket.state !== \"paused\") {\n            throw new Error(\"Didn't start connection from disconnected state: \" + this.socket.state);\n        }\n        const ws = new this.webSocketConstructor(this.uri);\n        this._logVerbose(\"constructed WebSocket\");\n        this.socket = {\n            state: \"connecting\",\n            ws\n        };\n        this.resetServerInactivityTimeout();\n        ws.onopen = ()=>{\n            this._logVerbose(\"begin ws.onopen\");\n            if (this.socket.state !== \"connecting\") {\n                throw new Error(\"onopen called with socket not in connecting state\");\n            }\n            this.socket = {\n                state: \"ready\",\n                ws\n            };\n            this.resetServerInactivityTimeout();\n            this.onOpen({\n                connectionCount: this.connectionCount,\n                lastCloseReason: this.lastCloseReason\n            });\n            if (this.lastCloseReason !== \"InitialConnect\") {\n                console.log(\"WebSocket reconnected\");\n            }\n            this.connectionCount += 1;\n            this.lastCloseReason = null;\n        };\n        ws.onerror = (error)=>{\n            const message = error.message;\n            console.log(`WebSocket error: ${message}`);\n        };\n        ws.onmessage = (message)=>{\n            this.resetServerInactivityTimeout();\n            const serverMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.parseServerMessage)(JSON.parse(message.data));\n            this._logVerbose(`received ws message with type ${serverMessage.type}`);\n            const response = this.onMessage(serverMessage);\n            if (response.hasSyncedPastLastReconnect) {\n                this.retries = 0;\n            }\n        };\n        ws.onclose = (event)=>{\n            this._logVerbose(\"begin ws.onclose\");\n            if (this.lastCloseReason === null) {\n                this.lastCloseReason = event.reason ?? \"OnCloseInvoked\";\n            }\n            if (event.code !== CLOSE_NORMAL && event.code !== CLOSE_GOING_AWAY && // This commonly gets fired on mobile apps when the app is backgrounded\n            event.code !== CLOSE_NO_STATUS && event.code !== CLOSE_NOT_FOUND) {\n                let msg = `WebSocket closed with code ${event.code}`;\n                if (event.reason) {\n                    msg += `: ${event.reason}`;\n                }\n                console.log(msg);\n            }\n            this.scheduleReconnect();\n            return;\n        };\n    }\n    /**\n   * @returns The state of the {@link Socket}.\n   */ socketState() {\n        return this.socket.state;\n    }\n    /**\n   * @param message - A ClientMessage to send.\n   * @returns Whether the message (might have been) sent.\n   */ sendMessage(message) {\n        this._logVerbose(`sending message with type ${message.type}`);\n        if (this.socket.state === \"ready\") {\n            const encodedMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.encodeClientMessage)(message);\n            const request = JSON.stringify(encodedMessage);\n            try {\n                this.socket.ws.send(request);\n            } catch (error) {\n                console.log(`Failed to send message on WebSocket, reconnecting: ${error}`);\n                this.closeAndReconnect(\"FailedToSendMessage\");\n            }\n            return true;\n        }\n        return false;\n    }\n    resetServerInactivityTimeout() {\n        if (this.socket.state !== \"stopped\") {\n            return;\n        }\n        if (this.reconnectDueToServerInactivityTimeout !== null) {\n            clearTimeout(this.reconnectDueToServerInactivityTimeout);\n            this.reconnectDueToServerInactivityTimeout = null;\n        }\n        this.reconnectDueToServerInactivityTimeout = setTimeout(()=>{\n            this.closeAndReconnect(\"InactiveServer\");\n        }, this.serverInactivityThreshold);\n    }\n    scheduleReconnect() {\n        this.socket = {\n            state: \"disconnected\"\n        };\n        const backoff = this.nextBackoff();\n        console.log(`Attempting reconnect in ${backoff}ms`);\n        setTimeout(()=>this.connect(), backoff);\n    }\n    /**\n   * Close the WebSocket and schedule a reconnect.\n   *\n   * This should be used when we hit an error and would like to restart the session.\n   */ closeAndReconnect(closeReason) {\n        this._logVerbose(`begin closeAndReconnect with reason ${closeReason}`);\n        switch(this.socket.state){\n            case \"disconnected\":\n            case \"stopped\":\n            case \"paused\":\n                return;\n            case \"connecting\":\n            case \"ready\":\n                {\n                    this.lastCloseReason = closeReason;\n                    this.close();\n                    this.scheduleReconnect();\n                    return;\n                }\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n    }\n    /**\n   * Close the WebSocket, being careful to clear the onclose handler to avoid re-entrant\n   * calls. Use this instead of directly calling `ws.close()`\n   */ close() {\n        switch(this.socket.state){\n            case \"disconnected\":\n            case \"stopped\":\n            case \"paused\":\n                return;\n            case \"connecting\":\n            case \"ready\":\n                {\n                    this.socket.ws.onclose = ()=>{};\n                    this._logVerbose(\"ws.close called\");\n                    this.socket.ws.close();\n                    return;\n                }\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n    }\n    /**\n   * Close the WebSocket and do not reconnect.\n   * @returns A Promise that resolves when the WebSocket `onClose` callback is called.\n   */ stop() {\n        if (this.reconnectDueToServerInactivityTimeout) {\n            clearTimeout(this.reconnectDueToServerInactivityTimeout);\n        }\n        switch(this.socket.state){\n            case \"stopped\":\n            case \"paused\":\n            case \"disconnected\":\n            case \"connecting\":\n            case \"ready\":\n                this.close();\n                if (this.socket.state === \"ready\" || this.socket.state === \"connecting\") {\n                    const ws = this.socket.ws;\n                    this.socket = {\n                        state: \"stopped\"\n                    };\n                    return new Promise((r)=>{\n                        ws.onclose = (_event)=>r();\n                    });\n                }\n                this.socket = {\n                    state: \"stopped\"\n                };\n                return Promise.resolve();\n            default:\n                {\n                    const _ = this.socket;\n                    throw new Error(`Invalid websocket state: ${this.socket.state}`);\n                }\n        }\n    }\n    pause() {\n        switch(this.socket.state){\n            case \"stopped\":\n                return;\n            case \"paused\":\n            case \"disconnected\":\n            case \"connecting\":\n            case \"ready\":\n                this.close();\n                this.socket = {\n                    state: \"paused\"\n                };\n                return;\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n    }\n    /**\n   * Create a new WebSocket after a previous `pause()`, unless `stop()` was\n   * called before.\n   */ resume() {\n        switch(this.socket.state){\n            case \"paused\":\n                break;\n            case \"stopped\":\n                return;\n            case \"connecting\":\n            case \"ready\":\n            case \"disconnected\":\n                throw new Error(\"`resume()` is only valid after `pause()`\");\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n        this.connect();\n    }\n    _logVerbose(message) {\n        if (this.verbose) {\n            console.debug(`${/* @__PURE__ */ new Date().toISOString()} ${message}`);\n        }\n    }\n    nextBackoff() {\n        const baseBackoff = this.initialBackoff * Math.pow(2, this.retries);\n        this.retries += 1;\n        const actualBackoff = Math.min(baseBackoff, this.maxBackoff);\n        const jitter = actualBackoff * (Math.random() - 0.5);\n        return actualBackoff + jitter;\n    }\n} //# sourceMappingURL=web_socket_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/common/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/common/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSimpleObject: () => (/* binding */ isSimpleObject),\n/* harmony export */   parseArgs: () => (/* binding */ parseArgs),\n/* harmony export */   validateDeploymentUrl: () => (/* binding */ validateDeploymentUrl)\n/* harmony export */ });\n\nfunction parseArgs(args) {\n    if (args === void 0) {\n        return {};\n    }\n    if (!isSimpleObject(args)) {\n        throw new Error(`The arguments to a Convex function must be an object. Received: ${args}`);\n    }\n    return args;\n}\nfunction validateDeploymentUrl(deploymentUrl) {\n    if (typeof deploymentUrl === \"undefined\") {\n        throw new Error(`Client created with undefined deployment address. If you used an environment variable, check that it's set.`);\n    }\n    if (typeof deploymentUrl !== \"string\") {\n        throw new Error(`Invalid deployment address: found ${deploymentUrl}\".`);\n    }\n    if (!(deploymentUrl.startsWith(\"http:\") || deploymentUrl.startsWith(\"https:\"))) {\n        throw new Error(`Invalid deployment address: Must start with \"https://\" or \"http://\". Found \"${deploymentUrl}\".`);\n    }\n    if (deploymentUrl.indexOf(\"127.0.0.1\") !== -1 || deploymentUrl.indexOf(\"localhost\") !== -1) {\n        return;\n    }\n    if (!deploymentUrl.endsWith(\".convex.cloud\")) {\n        throw new Error(`Invalid deployment address: Must end with \".convex.cloud\". Found \"${deploymentUrl}\".`);\n    }\n}\nfunction isSimpleObject(value) {\n    const isObject = typeof value === \"object\";\n    const prototype = Object.getPrototypeOf(value);\n    const isSimple = prototype === null || prototype === Object.prototype || // Objects generated from other contexts (e.g. across Node.js `vm` modules) will not satisfy the previous\n    // conditions but are still simple objects.\n    prototype?.constructor?.name === \"Object\";\n    return isObject && isSimple;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2NvbW1vbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUNOLFNBQVNBLFVBQVVDLElBQUk7SUFDNUIsSUFBSUEsU0FBUyxLQUFLLEdBQUc7UUFDbkIsT0FBTyxDQUFDO0lBQ1Y7SUFDQSxJQUFJLENBQUNDLGVBQWVELE9BQU87UUFDekIsTUFBTSxJQUFJRSxNQUNSLENBQUMsZ0VBQWdFLEVBQUVGLEtBQUssQ0FBQztJQUU3RTtJQUNBLE9BQU9BO0FBQ1Q7QUFDTyxTQUFTRyxzQkFBc0JDLGFBQWE7SUFDakQsSUFBSSxPQUFPQSxrQkFBa0IsYUFBYTtRQUN4QyxNQUFNLElBQUlGLE1BQ1IsQ0FBQywyR0FBMkcsQ0FBQztJQUVqSDtJQUNBLElBQUksT0FBT0Usa0JBQWtCLFVBQVU7UUFDckMsTUFBTSxJQUFJRixNQUNSLENBQUMsa0NBQWtDLEVBQUVFLGNBQWMsRUFBRSxDQUFDO0lBRTFEO0lBQ0EsSUFBSSxDQUFFQSxDQUFBQSxjQUFjQyxVQUFVLENBQUMsWUFBWUQsY0FBY0MsVUFBVSxDQUFDLFNBQVEsR0FBSTtRQUM5RSxNQUFNLElBQUlILE1BQ1IsQ0FBQyw0RUFBNEUsRUFBRUUsY0FBYyxFQUFFLENBQUM7SUFFcEc7SUFDQSxJQUFJQSxjQUFjRSxPQUFPLENBQUMsaUJBQWlCLENBQUMsS0FBS0YsY0FBY0UsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEdBQUc7UUFDMUY7SUFDRjtJQUNBLElBQUksQ0FBQ0YsY0FBY0csUUFBUSxDQUFDLGtCQUFrQjtRQUM1QyxNQUFNLElBQUlMLE1BQ1IsQ0FBQyxrRUFBa0UsRUFBRUUsY0FBYyxFQUFFLENBQUM7SUFFMUY7QUFDRjtBQUNPLFNBQVNILGVBQWVPLEtBQUs7SUFDbEMsTUFBTUMsV0FBVyxPQUFPRCxVQUFVO0lBQ2xDLE1BQU1FLFlBQVlDLE9BQU9DLGNBQWMsQ0FBQ0o7SUFDeEMsTUFBTUssV0FBV0gsY0FBYyxRQUFRQSxjQUFjQyxPQUFPRCxTQUFTLElBQUkseUdBQXlHO0lBQ2xMLDJDQUEyQztJQUMzQ0EsV0FBV0ksYUFBYUMsU0FBUztJQUNqQyxPQUFPTixZQUFZSTtBQUNyQixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2NvbW1vbi9pbmRleC5qcz9iMzFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXJncyhhcmdzKSB7XG4gIGlmIChhcmdzID09PSB2b2lkIDApIHtcbiAgICByZXR1cm4ge307XG4gIH1cbiAgaWYgKCFpc1NpbXBsZU9iamVjdChhcmdzKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBUaGUgYXJndW1lbnRzIHRvIGEgQ29udmV4IGZ1bmN0aW9uIG11c3QgYmUgYW4gb2JqZWN0LiBSZWNlaXZlZDogJHthcmdzfWBcbiAgICApO1xuICB9XG4gIHJldHVybiBhcmdzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlRGVwbG95bWVudFVybChkZXBsb3ltZW50VXJsKSB7XG4gIGlmICh0eXBlb2YgZGVwbG95bWVudFVybCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBDbGllbnQgY3JlYXRlZCB3aXRoIHVuZGVmaW5lZCBkZXBsb3ltZW50IGFkZHJlc3MuIElmIHlvdSB1c2VkIGFuIGVudmlyb25tZW50IHZhcmlhYmxlLCBjaGVjayB0aGF0IGl0J3Mgc2V0LmBcbiAgICApO1xuICB9XG4gIGlmICh0eXBlb2YgZGVwbG95bWVudFVybCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogZm91bmQgJHtkZXBsb3ltZW50VXJsfVwiLmBcbiAgICApO1xuICB9XG4gIGlmICghKGRlcGxveW1lbnRVcmwuc3RhcnRzV2l0aChcImh0dHA6XCIpIHx8IGRlcGxveW1lbnRVcmwuc3RhcnRzV2l0aChcImh0dHBzOlwiKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgSW52YWxpZCBkZXBsb3ltZW50IGFkZHJlc3M6IE11c3Qgc3RhcnQgd2l0aCBcImh0dHBzOi8vXCIgb3IgXCJodHRwOi8vXCIuIEZvdW5kIFwiJHtkZXBsb3ltZW50VXJsfVwiLmBcbiAgICApO1xuICB9XG4gIGlmIChkZXBsb3ltZW50VXJsLmluZGV4T2YoXCIxMjcuMC4wLjFcIikgIT09IC0xIHx8IGRlcGxveW1lbnRVcmwuaW5kZXhPZihcImxvY2FsaG9zdFwiKSAhPT0gLTEpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKCFkZXBsb3ltZW50VXJsLmVuZHNXaXRoKFwiLmNvbnZleC5jbG91ZFwiKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogTXVzdCBlbmQgd2l0aCBcIi5jb252ZXguY2xvdWRcIi4gRm91bmQgXCIke2RlcGxveW1lbnRVcmx9XCIuYFxuICAgICk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1NpbXBsZU9iamVjdCh2YWx1ZSkge1xuICBjb25zdCBpc09iamVjdCA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIjtcbiAgY29uc3QgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbHVlKTtcbiAgY29uc3QgaXNTaW1wbGUgPSBwcm90b3R5cGUgPT09IG51bGwgfHwgcHJvdG90eXBlID09PSBPYmplY3QucHJvdG90eXBlIHx8IC8vIE9iamVjdHMgZ2VuZXJhdGVkIGZyb20gb3RoZXIgY29udGV4dHMgKGUuZy4gYWNyb3NzIE5vZGUuanMgYHZtYCBtb2R1bGVzKSB3aWxsIG5vdCBzYXRpc2Z5IHRoZSBwcmV2aW91c1xuICAvLyBjb25kaXRpb25zIGJ1dCBhcmUgc3RpbGwgc2ltcGxlIG9iamVjdHMuXG4gIHByb3RvdHlwZT8uY29uc3RydWN0b3I/Lm5hbWUgPT09IFwiT2JqZWN0XCI7XG4gIHJldHVybiBpc09iamVjdCAmJiBpc1NpbXBsZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbInBhcnNlQXJncyIsImFyZ3MiLCJpc1NpbXBsZU9iamVjdCIsIkVycm9yIiwidmFsaWRhdGVEZXBsb3ltZW50VXJsIiwiZGVwbG95bWVudFVybCIsInN0YXJ0c1dpdGgiLCJpbmRleE9mIiwiZW5kc1dpdGgiLCJ2YWx1ZSIsImlzT2JqZWN0IiwicHJvdG90eXBlIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJpc1NpbXBsZSIsImNvbnN0cnVjdG9yIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/index.js":
/*!***********************************************!*\
  !*** ./node_modules/convex/dist/esm/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n\nconst version = \"1.9.1\"; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLE1BQU1BLFVBQVUsUUFBUSxDQUMvQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9pbmRleC5qcz9kYTg0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGNvbnN0IHZlcnNpb24gPSBcIjEuOS4xXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJ2ZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react-clerk/ConvexProviderWithClerk.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react-clerk/ConvexProviderWithClerk.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProviderWithClerk: () => (/* binding */ ConvexProviderWithClerk)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../react/ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n\n\n\n\nfunction ConvexProviderWithClerk({ children, client, useAuth }) {\n    const useAuthFromClerk = useUseAuthFromClerk(useAuth);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.ConvexProviderWithAuth, {\n        client,\n        useAuth: useAuthFromClerk\n    }, children);\n}\nfunction useUseAuthFromClerk(useAuth) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>function useAuthFromClerk() {\n            const { isLoaded, isSignedIn, getToken } = useAuth();\n            const fetchAccessToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ({ forceRefreshToken })=>{\n                try {\n                    return getToken({\n                        template: \"convex\",\n                        skipCache: forceRefreshToken\n                    });\n                } catch (error) {\n                    return null;\n                }\n            }, // Clerk is not memoizing its getToken function at all\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            []);\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({\n                    isLoading: !isLoaded,\n                    isAuthenticated: isSignedIn ?? false,\n                    fetchAccessToken\n                }), [\n                isLoaded,\n                isSignedIn,\n                fetchAccessToken\n            ]);\n        }, [\n        useAuth\n    ]);\n} //# sourceMappingURL=ConvexProviderWithClerk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0LWNsZXJrL0NvbnZleFByb3ZpZGVyV2l0aENsZXJrLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhO0FBQ2E7QUFDbUI7QUFDd0I7QUFDOUQsU0FBU0ksd0JBQXdCLEVBQ3RDQyxRQUFRLEVBQ1JDLE1BQU0sRUFDTkMsT0FBTyxFQUNSO0lBQ0MsTUFBTUMsbUJBQW1CQyxvQkFBb0JGO0lBQzdDLE9BQU8sYUFBYSxpQkFBR1AsZ0RBQW1CLENBQUNHLDZFQUFzQkEsRUFBRTtRQUFFRztRQUFRQyxTQUFTQztJQUFpQixHQUFHSDtBQUM1RztBQUNBLFNBQVNJLG9CQUFvQkYsT0FBTztJQUNsQyxPQUFPTCw4Q0FBT0EsQ0FDWixJQUFNLFNBQVNNO1lBQ2IsTUFBTSxFQUFFRyxRQUFRLEVBQUVDLFVBQVUsRUFBRUMsUUFBUSxFQUFFLEdBQUdOO1lBQzNDLE1BQU1PLG1CQUFtQmIsa0RBQVdBLENBQ2xDLE9BQU8sRUFBRWMsaUJBQWlCLEVBQUU7Z0JBQzFCLElBQUk7b0JBQ0YsT0FBT0YsU0FBUzt3QkFDZEcsVUFBVTt3QkFDVkMsV0FBV0Y7b0JBQ2I7Z0JBQ0YsRUFBRSxPQUFPRyxPQUFPO29CQUNkLE9BQU87Z0JBQ1Q7WUFDRixHQUNBLHNEQUFzRDtZQUN0RCx1REFBdUQ7WUFDdkQsRUFBRTtZQUVKLE9BQU9oQiw4Q0FBT0EsQ0FDWixJQUFPO29CQUNMaUIsV0FBVyxDQUFDUjtvQkFDWlMsaUJBQWlCUixjQUFjO29CQUMvQkU7Z0JBQ0YsSUFDQTtnQkFBQ0g7Z0JBQVVDO2dCQUFZRTthQUFpQjtRQUU1QyxHQUNBO1FBQUNQO0tBQVE7QUFFYixFQUNBLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0LWNsZXJrL0NvbnZleFByb3ZpZGVyV2l0aENsZXJrLmpzPzE3YmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQ29udmV4UHJvdmlkZXJXaXRoQXV0aCB9IGZyb20gXCIuLi9yZWFjdC9Db252ZXhBdXRoU3RhdGUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBDb252ZXhQcm92aWRlcldpdGhDbGVyayh7XG4gIGNoaWxkcmVuLFxuICBjbGllbnQsXG4gIHVzZUF1dGhcbn0pIHtcbiAgY29uc3QgdXNlQXV0aEZyb21DbGVyayA9IHVzZVVzZUF1dGhGcm9tQ2xlcmsodXNlQXV0aCk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChDb252ZXhQcm92aWRlcldpdGhBdXRoLCB7IGNsaWVudCwgdXNlQXV0aDogdXNlQXV0aEZyb21DbGVyayB9LCBjaGlsZHJlbik7XG59XG5mdW5jdGlvbiB1c2VVc2VBdXRoRnJvbUNsZXJrKHVzZUF1dGgpIHtcbiAgcmV0dXJuIHVzZU1lbW8oXG4gICAgKCkgPT4gZnVuY3Rpb24gdXNlQXV0aEZyb21DbGVyaygpIHtcbiAgICAgIGNvbnN0IHsgaXNMb2FkZWQsIGlzU2lnbmVkSW4sIGdldFRva2VuIH0gPSB1c2VBdXRoKCk7XG4gICAgICBjb25zdCBmZXRjaEFjY2Vzc1Rva2VuID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIGFzeW5jICh7IGZvcmNlUmVmcmVzaFRva2VuIH0pID0+IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGdldFRva2VuKHtcbiAgICAgICAgICAgICAgdGVtcGxhdGU6IFwiY29udmV4XCIsXG4gICAgICAgICAgICAgIHNraXBDYWNoZTogZm9yY2VSZWZyZXNoVG9rZW5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIC8vIENsZXJrIGlzIG5vdCBtZW1vaXppbmcgaXRzIGdldFRva2VuIGZ1bmN0aW9uIGF0IGFsbFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gICAgICAgIFtdXG4gICAgICApO1xuICAgICAgcmV0dXJuIHVzZU1lbW8oXG4gICAgICAgICgpID0+ICh7XG4gICAgICAgICAgaXNMb2FkaW5nOiAhaXNMb2FkZWQsXG4gICAgICAgICAgaXNBdXRoZW50aWNhdGVkOiBpc1NpZ25lZEluID8/IGZhbHNlLFxuICAgICAgICAgIGZldGNoQWNjZXNzVG9rZW5cbiAgICAgICAgfSksXG4gICAgICAgIFtpc0xvYWRlZCwgaXNTaWduZWRJbiwgZmV0Y2hBY2Nlc3NUb2tlbl1cbiAgICAgICk7XG4gICAgfSxcbiAgICBbdXNlQXV0aF1cbiAgKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnZleFByb3ZpZGVyV2l0aENsZXJrLmpzLm1hcFxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJ1c2VNZW1vIiwiQ29udmV4UHJvdmlkZXJXaXRoQXV0aCIsIkNvbnZleFByb3ZpZGVyV2l0aENsZXJrIiwiY2hpbGRyZW4iLCJjbGllbnQiLCJ1c2VBdXRoIiwidXNlQXV0aEZyb21DbGVyayIsInVzZVVzZUF1dGhGcm9tQ2xlcmsiLCJjcmVhdGVFbGVtZW50IiwiaXNMb2FkZWQiLCJpc1NpZ25lZEluIiwiZ2V0VG9rZW4iLCJmZXRjaEFjY2Vzc1Rva2VuIiwiZm9yY2VSZWZyZXNoVG9rZW4iLCJ0ZW1wbGF0ZSIsInNraXBDYWNoZSIsImVycm9yIiwiaXNMb2FkaW5nIiwiaXNBdXRoZW50aWNhdGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react-clerk/ConvexProviderWithClerk.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react-clerk/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react-clerk/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProviderWithClerk: () => (/* reexport safe */ _ConvexProviderWithClerk_js__WEBPACK_IMPORTED_MODULE_0__.ConvexProviderWithClerk)\n/* harmony export */ });\n/* harmony import */ var _ConvexProviderWithClerk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ConvexProviderWithClerk.js */ \"(ssr)/./node_modules/convex/dist/esm/react-clerk/ConvexProviderWithClerk.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0LWNsZXJrL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDMEQsQ0FDdkUsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QtY2xlcmsvaW5kZXguanM/ZGU4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCB7IENvbnZleFByb3ZpZGVyV2l0aENsZXJrIH0gZnJvbSBcIi4vQ29udmV4UHJvdmlkZXJXaXRoQ2xlcmsuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbIkNvbnZleFByb3ZpZGVyV2l0aENsZXJrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react-clerk/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/ConvexAuthState.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProviderWithAuth: () => (/* binding */ ConvexProviderWithAuth),\n/* harmony export */   useConvexAuth: () => (/* binding */ useConvexAuth)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\nconst ConvexAuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nfunction useConvexAuth() {\n    const authContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ConvexAuthContext);\n    if (authContext === void 0) {\n        throw new Error(\"Could not find `ConvexProviderWithAuth` (or `ConvexProviderWithClerk` or `ConvexProviderWithAuth0`) as an ancestor component. This component may be missing, or you might have two instances of the `convex/react` module loaded in your project.\");\n    }\n    return authContext;\n}\nfunction ConvexProviderWithAuth({ children, client, useAuth }) {\n    const { isLoading, isAuthenticated, fetchAccessToken } = useAuth();\n    const [isConvexAuthenticated, setIsConvexAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let isThisEffectRelevant = true;\n        async function setToken() {\n            client.setAuth(fetchAccessToken, (isAuthenticated2)=>{\n                if (isThisEffectRelevant) {\n                    setIsConvexAuthenticated(isAuthenticated2);\n                }\n            });\n        }\n        if (isAuthenticated) {\n            void setToken();\n            return ()=>{\n                isThisEffectRelevant = false;\n                setIsConvexAuthenticated((isConvexAuthenticated2)=>isConvexAuthenticated2 ? false : null);\n                client.clearAuth();\n            };\n        }\n    }, [\n        isAuthenticated,\n        fetchAccessToken,\n        isLoading,\n        client\n    ]);\n    if (isLoading && isConvexAuthenticated !== null) {\n        setIsConvexAuthenticated(null);\n    }\n    if (!isLoading && !isAuthenticated && isConvexAuthenticated !== false) {\n        setIsConvexAuthenticated(false);\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConvexAuthContext.Provider, {\n        value: {\n            isLoading: isConvexAuthenticated === null,\n            isAuthenticated: isAuthenticated && (isConvexAuthenticated ?? false)\n        }\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexProvider, {\n        client\n    }, children));\n} //# sourceMappingURL=ConvexAuthState.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L0NvbnZleEF1dGhTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFNRTtBQUM4QjtBQUM3QyxNQUFNTSxrQ0FBb0JMLG9EQUFhQSxDQUFDLEtBQUs7QUFDdEMsU0FBU007SUFDZCxNQUFNQyxjQUFjTixpREFBVUEsQ0FBQ0k7SUFDL0IsSUFBSUUsZ0JBQWdCLEtBQUssR0FBRztRQUMxQixNQUFNLElBQUlDLE1BQ1I7SUFFSjtJQUNBLE9BQU9EO0FBQ1Q7QUFDTyxTQUFTRSx1QkFBdUIsRUFDckNDLFFBQVEsRUFDUkMsTUFBTSxFQUNOQyxPQUFPLEVBQ1I7SUFDQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsZUFBZSxFQUFFQyxnQkFBZ0IsRUFBRSxHQUFHSDtJQUN6RCxNQUFNLENBQUNJLHVCQUF1QkMseUJBQXlCLEdBQUdkLCtDQUFRQSxDQUFDO0lBQ25FRCxnREFBU0EsQ0FBQztRQUNSLElBQUlnQix1QkFBdUI7UUFDM0IsZUFBZUM7WUFDYlIsT0FBT1MsT0FBTyxDQUFDTCxrQkFBa0IsQ0FBQ007Z0JBQ2hDLElBQUlILHNCQUFzQjtvQkFDeEJELHlCQUF5Qkk7Z0JBQzNCO1lBQ0Y7UUFDRjtRQUNBLElBQUlQLGlCQUFpQjtZQUNuQixLQUFLSztZQUNMLE9BQU87Z0JBQ0xELHVCQUF1QjtnQkFDdkJELHlCQUNFLENBQUNLLHlCQUEyQkEseUJBQXlCLFFBQVE7Z0JBRS9EWCxPQUFPWSxTQUFTO1lBQ2xCO1FBQ0Y7SUFDRixHQUFHO1FBQUNUO1FBQWlCQztRQUFrQkY7UUFBV0Y7S0FBTztJQUN6RCxJQUFJRSxhQUFhRywwQkFBMEIsTUFBTTtRQUMvQ0MseUJBQXlCO0lBQzNCO0lBQ0EsSUFBSSxDQUFDSixhQUFhLENBQUNDLG1CQUFtQkUsMEJBQTBCLE9BQU87UUFDckVDLHlCQUF5QjtJQUMzQjtJQUNBLE9BQU8sYUFBYSxpQkFBR2xCLGdEQUFtQixDQUN4Q00sa0JBQWtCb0IsUUFBUSxFQUMxQjtRQUNFQyxPQUFPO1lBQ0xiLFdBQVdHLDBCQUEwQjtZQUNyQ0YsaUJBQWlCQSxtQkFBb0JFLENBQUFBLHlCQUF5QixLQUFJO1FBQ3BFO0lBQ0YsR0FDQSxhQUFhLGlCQUFHakIsZ0RBQW1CLENBQUNLLHNEQUFjQSxFQUFFO1FBQUVPO0lBQU8sR0FBR0Q7QUFFcEUsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC9Db252ZXhBdXRoU3RhdGUuanM/Y2FhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCBSZWFjdCwge1xuICBjcmVhdGVDb250ZXh0LFxuICB1c2VDb250ZXh0LFxuICB1c2VFZmZlY3QsXG4gIHVzZVN0YXRlXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQ29udmV4UHJvdmlkZXIgfSBmcm9tIFwiLi9jbGllbnQuanNcIjtcbmNvbnN0IENvbnZleEF1dGhDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh2b2lkIDApO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbnZleEF1dGgoKSB7XG4gIGNvbnN0IGF1dGhDb250ZXh0ID0gdXNlQ29udGV4dChDb252ZXhBdXRoQ29udGV4dCk7XG4gIGlmIChhdXRoQ29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJDb3VsZCBub3QgZmluZCBgQ29udmV4UHJvdmlkZXJXaXRoQXV0aGAgKG9yIGBDb252ZXhQcm92aWRlcldpdGhDbGVya2Agb3IgYENvbnZleFByb3ZpZGVyV2l0aEF1dGgwYCkgYXMgYW4gYW5jZXN0b3IgY29tcG9uZW50LiBUaGlzIGNvbXBvbmVudCBtYXkgYmUgbWlzc2luZywgb3IgeW91IG1pZ2h0IGhhdmUgdHdvIGluc3RhbmNlcyBvZiB0aGUgYGNvbnZleC9yZWFjdGAgbW9kdWxlIGxvYWRlZCBpbiB5b3VyIHByb2plY3QuXCJcbiAgICApO1xuICB9XG4gIHJldHVybiBhdXRoQ29udGV4dDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBDb252ZXhQcm92aWRlcldpdGhBdXRoKHtcbiAgY2hpbGRyZW4sXG4gIGNsaWVudCxcbiAgdXNlQXV0aFxufSkge1xuICBjb25zdCB7IGlzTG9hZGluZywgaXNBdXRoZW50aWNhdGVkLCBmZXRjaEFjY2Vzc1Rva2VuIH0gPSB1c2VBdXRoKCk7XG4gIGNvbnN0IFtpc0NvbnZleEF1dGhlbnRpY2F0ZWQsIHNldElzQ29udmV4QXV0aGVudGljYXRlZF0gPSB1c2VTdGF0ZShudWxsKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgaXNUaGlzRWZmZWN0UmVsZXZhbnQgPSB0cnVlO1xuICAgIGFzeW5jIGZ1bmN0aW9uIHNldFRva2VuKCkge1xuICAgICAgY2xpZW50LnNldEF1dGgoZmV0Y2hBY2Nlc3NUb2tlbiwgKGlzQXV0aGVudGljYXRlZDIpID0+IHtcbiAgICAgICAgaWYgKGlzVGhpc0VmZmVjdFJlbGV2YW50KSB7XG4gICAgICAgICAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkKGlzQXV0aGVudGljYXRlZDIpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKGlzQXV0aGVudGljYXRlZCkge1xuICAgICAgdm9pZCBzZXRUb2tlbigpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaXNUaGlzRWZmZWN0UmVsZXZhbnQgPSBmYWxzZTtcbiAgICAgICAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkKFxuICAgICAgICAgIChpc0NvbnZleEF1dGhlbnRpY2F0ZWQyKSA9PiBpc0NvbnZleEF1dGhlbnRpY2F0ZWQyID8gZmFsc2UgOiBudWxsXG4gICAgICAgICk7XG4gICAgICAgIGNsaWVudC5jbGVhckF1dGgoKTtcbiAgICAgIH07XG4gICAgfVxuICB9LCBbaXNBdXRoZW50aWNhdGVkLCBmZXRjaEFjY2Vzc1Rva2VuLCBpc0xvYWRpbmcsIGNsaWVudF0pO1xuICBpZiAoaXNMb2FkaW5nICYmIGlzQ29udmV4QXV0aGVudGljYXRlZCAhPT0gbnVsbCkge1xuICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZChudWxsKTtcbiAgfVxuICBpZiAoIWlzTG9hZGluZyAmJiAhaXNBdXRoZW50aWNhdGVkICYmIGlzQ29udmV4QXV0aGVudGljYXRlZCAhPT0gZmFsc2UpIHtcbiAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoZmFsc2UpO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBDb252ZXhBdXRoQ29udGV4dC5Qcm92aWRlcixcbiAgICB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBpc0xvYWRpbmc6IGlzQ29udmV4QXV0aGVudGljYXRlZCA9PT0gbnVsbCxcbiAgICAgICAgaXNBdXRoZW50aWNhdGVkOiBpc0F1dGhlbnRpY2F0ZWQgJiYgKGlzQ29udmV4QXV0aGVudGljYXRlZCA/PyBmYWxzZSlcbiAgICAgIH1cbiAgICB9LFxuICAgIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnZleFByb3ZpZGVyLCB7IGNsaWVudCB9LCBjaGlsZHJlbilcbiAgKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnZleEF1dGhTdGF0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJDb252ZXhQcm92aWRlciIsIkNvbnZleEF1dGhDb250ZXh0IiwidXNlQ29udmV4QXV0aCIsImF1dGhDb250ZXh0IiwiRXJyb3IiLCJDb252ZXhQcm92aWRlcldpdGhBdXRoIiwiY2hpbGRyZW4iLCJjbGllbnQiLCJ1c2VBdXRoIiwiaXNMb2FkaW5nIiwiaXNBdXRoZW50aWNhdGVkIiwiZmV0Y2hBY2Nlc3NUb2tlbiIsImlzQ29udmV4QXV0aGVudGljYXRlZCIsInNldElzQ29udmV4QXV0aGVudGljYXRlZCIsImlzVGhpc0VmZmVjdFJlbGV2YW50Iiwic2V0VG9rZW4iLCJzZXRBdXRoIiwiaXNBdXRoZW50aWNhdGVkMiIsImlzQ29udmV4QXV0aGVudGljYXRlZDIiLCJjbGVhckF1dGgiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/auth_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* binding */ AuthLoading),\n/* harmony export */   Authenticated: () => (/* binding */ Authenticated),\n/* harmony export */   Unauthenticated: () => (/* binding */ Unauthenticated)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n\n\n\nfunction Authenticated({ children }) {\n    const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n    if (isLoading || !isAuthenticated) {\n        return null;\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction Unauthenticated({ children }) {\n    const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n    if (isLoading || isAuthenticated) {\n        return null;\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction AuthLoading({ children }) {\n    const { isLoading } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n    if (!isLoading) {\n        return null;\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n} //# sourceMappingURL=auth_helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2F1dGhfaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ2E7QUFDMkI7QUFDOUMsU0FBU0UsY0FBYyxFQUFFQyxRQUFRLEVBQUU7SUFDeEMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLGVBQWUsRUFBRSxHQUFHSixrRUFBYUE7SUFDcEQsSUFBSUcsYUFBYSxDQUFDQyxpQkFBaUI7UUFDakMsT0FBTztJQUNUO0lBQ0EsT0FBTyxhQUFhLGlCQUFHTCxnREFBbUIsQ0FBQ0EsMkNBQWMsRUFBRSxNQUFNRztBQUNuRTtBQUNPLFNBQVNLLGdCQUFnQixFQUFFTCxRQUFRLEVBQUU7SUFDMUMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLGVBQWUsRUFBRSxHQUFHSixrRUFBYUE7SUFDcEQsSUFBSUcsYUFBYUMsaUJBQWlCO1FBQ2hDLE9BQU87SUFDVDtJQUNBLE9BQU8sYUFBYSxpQkFBR0wsZ0RBQW1CLENBQUNBLDJDQUFjLEVBQUUsTUFBTUc7QUFDbkU7QUFDTyxTQUFTTSxZQUFZLEVBQUVOLFFBQVEsRUFBRTtJQUN0QyxNQUFNLEVBQUVDLFNBQVMsRUFBRSxHQUFHSCxrRUFBYUE7SUFDbkMsSUFBSSxDQUFDRyxXQUFXO1FBQ2QsT0FBTztJQUNUO0lBQ0EsT0FBTyxhQUFhLGlCQUFHSixnREFBbUIsQ0FBQ0EsMkNBQWMsRUFBRSxNQUFNRztBQUNuRSxFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2F1dGhfaGVscGVycy5qcz9hMmRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ29udmV4QXV0aCB9IGZyb20gXCIuL0NvbnZleEF1dGhTdGF0ZS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIEF1dGhlbnRpY2F0ZWQoeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0F1dGhlbnRpY2F0ZWQgfSA9IHVzZUNvbnZleEF1dGgoKTtcbiAgaWYgKGlzTG9hZGluZyB8fCAhaXNBdXRoZW50aWNhdGVkKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBjaGlsZHJlbik7XG59XG5leHBvcnQgZnVuY3Rpb24gVW5hdXRoZW50aWNhdGVkKHsgY2hpbGRyZW4gfSkge1xuICBjb25zdCB7IGlzTG9hZGluZywgaXNBdXRoZW50aWNhdGVkIH0gPSB1c2VDb252ZXhBdXRoKCk7XG4gIGlmIChpc0xvYWRpbmcgfHwgaXNBdXRoZW50aWNhdGVkKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBjaGlsZHJlbik7XG59XG5leHBvcnQgZnVuY3Rpb24gQXV0aExvYWRpbmcoeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nIH0gPSB1c2VDb252ZXhBdXRoKCk7XG4gIGlmICghaXNMb2FkaW5nKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBjaGlsZHJlbik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoX2hlbHBlcnMuanMubWFwXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VDb252ZXhBdXRoIiwiQXV0aGVudGljYXRlZCIsImNoaWxkcmVuIiwiaXNMb2FkaW5nIiwiaXNBdXRoZW50aWNhdGVkIiwiY3JlYXRlRWxlbWVudCIsIkZyYWdtZW50IiwiVW5hdXRoZW50aWNhdGVkIiwiQXV0aExvYWRpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/client.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/client.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProvider: () => (/* binding */ ConvexProvider),\n/* harmony export */   ConvexReactClient: () => (/* binding */ ConvexReactClient),\n/* harmony export */   createMutation: () => (/* binding */ createMutation),\n/* harmony export */   useAction: () => (/* binding */ useAction),\n/* harmony export */   useConvex: () => (/* binding */ useConvex),\n/* harmony export */   useMutation: () => (/* binding */ useMutation),\n/* harmony export */   useQuery: () => (/* binding */ useQuery)\n/* harmony export */ });\n/* harmony import */ var _browser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../browser/index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\n\n\n\n\nif (typeof react__WEBPACK_IMPORTED_MODULE_1__ === \"undefined\") {\n    throw new Error(\"Required dependency 'react' not found\");\n}\nif (typeof react_dom__WEBPACK_IMPORTED_MODULE_3__ === \"undefined\") {\n    throw new Error(\"Required dependency 'react-dom' not found\");\n}\nfunction createMutation(mutationReference, client, update) {\n    function mutation(args) {\n        assertNotAccidentalArgument(args);\n        return client.mutation(mutationReference, args, {\n            optimisticUpdate: update\n        });\n    }\n    mutation.withOptimisticUpdate = function withOptimisticUpdate(optimisticUpdate) {\n        if (update !== void 0) {\n            throw new Error(`Already specified optimistic update for mutation ${(0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutationReference)}`);\n        }\n        return createMutation(mutationReference, client, optimisticUpdate);\n    };\n    return mutation;\n}\nfunction createAction(actionReference, client) {\n    return function(args) {\n        return client.action(actionReference, args);\n    };\n}\nclass ConvexReactClient {\n    /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - See {@link ConvexReactClientOptions} for a full description.\n   */ constructor(address, options){\n        this.closed = false;\n        if (typeof address !== \"string\") {\n            throw new Error(\"ConvexReactClient requires a URL like 'https://happy-otter-123.convex.cloud'.\");\n        }\n        if (!address.includes(\"://\")) {\n            throw new Error(\"Provided address was not an absolute URL.\");\n        }\n        this.address = address;\n        this.listeners = /* @__PURE__ */ new Map();\n        this.options = {\n            ...options\n        };\n    }\n    /**\n   * Lazily instantiate the `BaseConvexClient` so we don't create the WebSocket\n   * when server-side rendering.\n   *\n   * @internal\n   */ get sync() {\n        if (this.closed) {\n            throw new Error(\"ConvexReactClient has already been closed.\");\n        }\n        if (this.cachedSync) {\n            return this.cachedSync;\n        }\n        this.cachedSync = new _browser_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient(this.address, (updatedQueries)=>this.transition(updatedQueries), this.options);\n        if (this.adminAuth) {\n            this.cachedSync.setAdminAuth(this.adminAuth, this.fakeUserIdentity);\n        }\n        return this.cachedSync;\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */ setAuth(fetchToken, onChange) {\n        if (typeof fetchToken === \"string\") {\n            throw new Error(\"Passing a string to ConvexReactClient.setAuth is no longer supported, please upgrade to passing in an async function to handle reauthentication.\");\n        }\n        this.sync.setAuth(fetchToken, onChange ?? (()=>{}));\n    }\n    /**\n   * Clear the current authentication token if set.\n   */ clearAuth() {\n        this.sync.clearAuth();\n    }\n    /**\n   * @internal\n   */ setAdminAuth(token, identity) {\n        this.adminAuth = token;\n        this.fakeUserIdentity = identity;\n        if (this.closed) {\n            throw new Error(\"ConvexReactClient has already been closed.\");\n        }\n        if (this.cachedSync) {\n            this.sync.setAdminAuth(token, identity);\n        }\n    }\n    /**\n   * Construct a new {@link Watch} on a Convex query function.\n   *\n   * **Most application code should not call this method directly. Instead use\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link WatchQueryOptions} options object for this query.\n   *\n   * @returns The {@link Watch} object.\n   */ watchQuery(query, ...argsAndOptions) {\n        const [args, options] = argsAndOptions;\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(query);\n        return {\n            onUpdate: (callback)=>{\n                const { queryToken, unsubscribe } = this.sync.subscribe(name, args, options);\n                const currentListeners = this.listeners.get(queryToken);\n                if (currentListeners !== void 0) {\n                    currentListeners.add(callback);\n                } else {\n                    this.listeners.set(queryToken, /* @__PURE__ */ new Set([\n                        callback\n                    ]));\n                }\n                return ()=>{\n                    if (this.closed) {\n                        return;\n                    }\n                    const currentListeners2 = this.listeners.get(queryToken);\n                    currentListeners2.delete(callback);\n                    if (currentListeners2.size === 0) {\n                        this.listeners.delete(queryToken);\n                    }\n                    unsubscribe();\n                };\n            },\n            localQueryResult: ()=>{\n                if (this.cachedSync) {\n                    return this.cachedSync.localQueryResult(name, args);\n                }\n                return void 0;\n            },\n            localQueryLogs: ()=>{\n                if (this.cachedSync) {\n                    return this.cachedSync.localQueryLogs(name, args);\n                }\n                return void 0;\n            },\n            journal: ()=>{\n                if (this.cachedSync) {\n                    return this.cachedSync.queryJournal(name, args);\n                }\n                return void 0;\n            }\n        };\n    }\n    /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */ mutation(mutation, ...argsAndOptions) {\n        const [args, options] = argsAndOptions;\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutation);\n        return this.sync.mutation(name, args, options);\n    }\n    /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */ action(action, ...args) {\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(action);\n        return this.sync.action(name, ...args);\n    }\n    /**\n   * Fetch a query result once.\n   *\n   * **Most application code should subscribe to queries instead, using\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */ query(query, ...args) {\n        const watch = this.watchQuery(query, ...args);\n        const existingResult = watch.localQueryResult();\n        if (existingResult !== void 0) {\n            return existingResult;\n        }\n        return new Promise((resolve, reject)=>{\n            const unsubscribe = watch.onUpdate(()=>{\n                unsubscribe();\n                try {\n                    resolve(watch.localQueryResult());\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */ connectionState() {\n        return this.sync.connectionState();\n    }\n    /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with a {@link ConvexReactClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */ async close() {\n        this.closed = true;\n        this.listeners = /* @__PURE__ */ new Map();\n        if (this.cachedSync) {\n            const sync = this.cachedSync;\n            this.cachedSync = void 0;\n            await sync.close();\n        }\n    }\n    transition(updatedQueries) {\n        react_dom__WEBPACK_IMPORTED_MODULE_3__.unstable_batchedUpdates(()=>{\n            for (const queryToken of updatedQueries){\n                const callbacks = this.listeners.get(queryToken);\n                if (callbacks) {\n                    for (const callback of callbacks){\n                        callback();\n                    }\n                }\n            }\n        });\n    }\n}\nconst ConvexContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nfunction useConvex() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n}\nconst ConvexProvider = ({ client, children })=>{\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(ConvexContext.Provider, {\n        value: client\n    }, children);\n};\nfunction useQuery(query, ...args) {\n    const skip = args[0] === \"skip\";\n    const argsObject = args[0] === \"skip\" ? {} : (0,_common_index_js__WEBPACK_IMPORTED_MODULE_5__.parseArgs)(args[0]);\n    const queryReference = typeof query === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(query) : query;\n    const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(queryReference);\n    const queries = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>skip ? {} : {\n            query: {\n                query: queryReference,\n                args: argsObject\n            }\n        }, // Stringify args so args that are semantically the same don't trigger a\n    // rerender. Saves developers from adding `useMemo` on every args usage.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(argsObject)),\n        queryName,\n        skip\n    ]);\n    const results = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_4__.useQueries)(queries);\n    const result = results[\"query\"];\n    if (result instanceof Error) {\n        throw result;\n    }\n    return result;\n}\nfunction useMutation(mutation) {\n    const mutationReference = typeof mutation === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(mutation) : mutation;\n    const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n    if (convex === void 0) {\n        throw new Error(\"Could not find Convex client! `useMutation` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>createMutation(mutationReference, convex), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        convex,\n        (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutationReference)\n    ]);\n}\nfunction useAction(action) {\n    const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n    const actionReference = typeof action === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(action) : action;\n    if (convex === void 0) {\n        throw new Error(\"Could not find Convex client! `useAction` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>createAction(actionReference, convex), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        convex,\n        (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(actionReference)\n    ]);\n}\nfunction assertNotAccidentalArgument(value) {\n    if (typeof value === \"object\" && value !== null && \"bubbles\" in value && \"persist\" in value && \"isDefaultPrevented\" in value) {\n        throw new Error(`Convex function called with SyntheticEvent object. Did you use a Convex function as an event handler directly? Event handlers like onClick receive an event object as their first argument. These SyntheticEvent objects are not valid Convex values. Try wrapping the function like \\`const handler = () => myMutation();\\` and using \\`handler\\` in the event handler.`);\n    }\n} //# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/hydration.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/hydration.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePreloadedQuery: () => (/* binding */ usePreloadedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../react/client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\n\n\n\nfunction usePreloadedQuery(preloadedQuery) {\n    const args = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._argsJSON), [\n        preloadedQuery._argsJSON\n    ]);\n    const preloadedResult = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._valueJSON), [\n        preloadedQuery._valueJSON\n    ]);\n    const result = (0,_react_client_js__WEBPACK_IMPORTED_MODULE_1__.useQuery)((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.makeFunctionReference)(preloadedQuery._name), args);\n    return result === void 0 ? preloadedResult : result;\n} //# sourceMappingURL=hydration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2h5ZHJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ21CO0FBQ2M7QUFDVztBQUNQO0FBQzNDLFNBQVNJLGtCQUFrQkMsY0FBYztJQUM5QyxNQUFNQyxPQUFPTiw4Q0FBT0EsQ0FDbEIsSUFBTUcsOERBQVlBLENBQUNFLGVBQWVFLFNBQVMsR0FDM0M7UUFBQ0YsZUFBZUUsU0FBUztLQUFDO0lBRTVCLE1BQU1DLGtCQUFrQlIsOENBQU9BLENBQzdCLElBQU1HLDhEQUFZQSxDQUFDRSxlQUFlSSxVQUFVLEdBQzVDO1FBQUNKLGVBQWVJLFVBQVU7S0FBQztJQUU3QixNQUFNQyxTQUFTVCwwREFBUUEsQ0FDckJDLHFFQUFxQkEsQ0FBQ0csZUFBZU0sS0FBSyxHQUMxQ0w7SUFFRixPQUFPSSxXQUFXLEtBQUssSUFBSUYsa0JBQWtCRTtBQUMvQyxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2h5ZHJhdGlvbi5qcz84MjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tIFwiLi4vcmVhY3QvY2xpZW50LmpzXCI7XG5pbXBvcnQgeyBtYWtlRnVuY3Rpb25SZWZlcmVuY2UgfSBmcm9tIFwiLi4vc2VydmVyL2FwaS5qc1wiO1xuaW1wb3J0IHsganNvblRvQ29udmV4IH0gZnJvbSBcIi4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVByZWxvYWRlZFF1ZXJ5KHByZWxvYWRlZFF1ZXJ5KSB7XG4gIGNvbnN0IGFyZ3MgPSB1c2VNZW1vKFxuICAgICgpID0+IGpzb25Ub0NvbnZleChwcmVsb2FkZWRRdWVyeS5fYXJnc0pTT04pLFxuICAgIFtwcmVsb2FkZWRRdWVyeS5fYXJnc0pTT05dXG4gICk7XG4gIGNvbnN0IHByZWxvYWRlZFJlc3VsdCA9IHVzZU1lbW8oXG4gICAgKCkgPT4ganNvblRvQ29udmV4KHByZWxvYWRlZFF1ZXJ5Ll92YWx1ZUpTT04pLFxuICAgIFtwcmVsb2FkZWRRdWVyeS5fdmFsdWVKU09OXVxuICApO1xuICBjb25zdCByZXN1bHQgPSB1c2VRdWVyeShcbiAgICBtYWtlRnVuY3Rpb25SZWZlcmVuY2UocHJlbG9hZGVkUXVlcnkuX25hbWUpLFxuICAgIGFyZ3NcbiAgKTtcbiAgcmV0dXJuIHJlc3VsdCA9PT0gdm9pZCAwID8gcHJlbG9hZGVkUmVzdWx0IDogcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHlkcmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbInVzZU1lbW8iLCJ1c2VRdWVyeSIsIm1ha2VGdW5jdGlvblJlZmVyZW5jZSIsImpzb25Ub0NvbnZleCIsInVzZVByZWxvYWRlZFF1ZXJ5IiwicHJlbG9hZGVkUXVlcnkiLCJhcmdzIiwiX2FyZ3NKU09OIiwicHJlbG9hZGVkUmVzdWx0IiwiX3ZhbHVlSlNPTiIsInJlc3VsdCIsIl9uYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/hydration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.AuthLoading),\n/* harmony export */   Authenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Authenticated),\n/* harmony export */   ConvexProvider: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexProvider),\n/* harmony export */   ConvexProviderWithAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.ConvexProviderWithAuth),\n/* harmony export */   ConvexReactClient: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexReactClient),\n/* harmony export */   Unauthenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Unauthenticated),\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.resetPaginationId),\n/* harmony export */   useAction: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useAction),\n/* harmony export */   useConvex: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useConvex),\n/* harmony export */   useConvexAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.useConvexAuth),\n/* harmony export */   useMutation: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useMutation),\n/* harmony export */   usePaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.usePaginatedQuery),\n/* harmony export */   usePreloadedQuery: () => (/* reexport safe */ _hydration_js__WEBPACK_IMPORTED_MODULE_4__.usePreloadedQuery),\n/* harmony export */   useQueries: () => (/* reexport safe */ _use_queries_js__WEBPACK_IMPORTED_MODULE_1__.useQueries),\n/* harmony export */   useQuery: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useQuery),\n/* harmony export */   useSubscription: () => (/* reexport safe */ _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__.useSubscription)\n/* harmony export */ });\n/* harmony import */ var _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./use_paginated_query.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth_helpers.js */ \"(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n/* harmony import */ var _hydration_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hydration.js */ \"(ssr)/./node_modules/convex/dist/esm/react/hydration.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQzRCO0FBQ0s7QUFDWjtBQUNHO0FBQ047QUFDeUI7QUFRbkMsQ0FDckIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QvaW5kZXguanM/MzU1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3VzZV9wYWdpbmF0ZWRfcXVlcnkuanNcIjtcbmV4cG9ydCB7IHVzZVF1ZXJpZXMgfSBmcm9tIFwiLi91c2VfcXVlcmllcy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYXV0aF9oZWxwZXJzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9Db252ZXhBdXRoU3RhdGUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2h5ZHJhdGlvbi5qc1wiO1xuZXhwb3J0IHsgdXNlU3Vic2NyaXB0aW9uIH0gZnJvbSBcIi4vdXNlX3N1YnNjcmlwdGlvbi5qc1wiO1xuZXhwb3J0IHtcbiAgQ29udmV4UmVhY3RDbGllbnQsXG4gIHVzZUNvbnZleCxcbiAgQ29udmV4UHJvdmlkZXIsXG4gIHVzZVF1ZXJ5LFxuICB1c2VNdXRhdGlvbixcbiAgdXNlQWN0aW9uXG59IGZyb20gXCIuL2NsaWVudC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOlsidXNlUXVlcmllcyIsInVzZVN1YnNjcmlwdGlvbiIsIkNvbnZleFJlYWN0Q2xpZW50IiwidXNlQ29udmV4IiwiQ29udmV4UHJvdmlkZXIiLCJ1c2VRdWVyeSIsInVzZU11dGF0aW9uIiwidXNlQWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/queries_observer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueriesObserver: () => (/* binding */ QueriesObserver)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\nclass QueriesObserver {\n    constructor(createWatch){\n        this.createWatch = createWatch;\n        this.queries = {};\n        this.listeners = /* @__PURE__ */ new Set();\n    }\n    setQueries(newQueries) {\n        for (const identifier of Object.keys(newQueries)){\n            const { query, args } = newQueries[identifier];\n            (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n            if (this.queries[identifier] === void 0) {\n                this.addQuery(identifier, query, args);\n            } else {\n                const existingInfo = this.queries[identifier];\n                if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(existingInfo.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(existingInfo.args))) {\n                    this.removeQuery(identifier);\n                    this.addQuery(identifier, query, args);\n                }\n            }\n        }\n        for (const identifier of Object.keys(this.queries)){\n            if (newQueries[identifier] === void 0) {\n                this.removeQuery(identifier);\n            }\n        }\n    }\n    subscribe(listener) {\n        this.listeners.add(listener);\n        return ()=>{\n            this.listeners.delete(listener);\n        };\n    }\n    getLocalResults(queries) {\n        const result = {};\n        for (const identifier of Object.keys(queries)){\n            const { query, args } = queries[identifier];\n            (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n            const watch = this.createWatch(query, args);\n            let value;\n            try {\n                value = watch.localQueryResult();\n            } catch (e) {\n                if (e instanceof Error) {\n                    value = e;\n                } else {\n                    throw e;\n                }\n            }\n            result[identifier] = value;\n        }\n        return result;\n    }\n    setCreateWatch(createWatch) {\n        this.createWatch = createWatch;\n        for (const identifier of Object.keys(this.queries)){\n            const { query, args, watch } = this.queries[identifier];\n            const journal = watch.journal();\n            this.removeQuery(identifier);\n            this.addQuery(identifier, query, args, journal);\n        }\n    }\n    destroy() {\n        for (const identifier of Object.keys(this.queries)){\n            this.removeQuery(identifier);\n        }\n        this.listeners = /* @__PURE__ */ new Set();\n    }\n    addQuery(identifier, query, args, journal) {\n        if (this.queries[identifier] !== void 0) {\n            throw new Error(`Tried to add a new query with identifier ${identifier} when it already exists.`);\n        }\n        const watch = this.createWatch(query, args, journal);\n        const unsubscribe = watch.onUpdate(()=>this.notifyListeners());\n        this.queries[identifier] = {\n            query,\n            args,\n            watch,\n            unsubscribe\n        };\n    }\n    removeQuery(identifier) {\n        const info = this.queries[identifier];\n        if (info === void 0) {\n            throw new Error(`No query found with identifier ${identifier}.`);\n        }\n        info.unsubscribe();\n        delete this.queries[identifier];\n    }\n    notifyListeners() {\n        for (const listener of this.listeners){\n            listener();\n        }\n    }\n} //# sourceMappingURL=queries_observer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_paginated_query.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* binding */ optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* binding */ resetPaginationId),\n/* harmony export */   usePaginatedQuery: () => (/* binding */ usePaginatedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\n\nconst splitQuery = (key, splitCursor, continueCursor)=>(prevState)=>{\n        const queries = {\n            ...prevState.queries\n        };\n        const splitKey1 = prevState.nextPageKey;\n        const splitKey2 = prevState.nextPageKey + 1;\n        const nextPageKey = prevState.nextPageKey + 2;\n        queries[splitKey1] = {\n            query: prevState.query,\n            args: {\n                ...prevState.args,\n                paginationOpts: {\n                    ...prevState.queries[key].args.paginationOpts,\n                    endCursor: splitCursor\n                }\n            }\n        };\n        queries[splitKey2] = {\n            query: prevState.query,\n            args: {\n                ...prevState.args,\n                paginationOpts: {\n                    ...prevState.queries[key].args.paginationOpts,\n                    cursor: splitCursor,\n                    endCursor: continueCursor\n                }\n            }\n        };\n        const ongoingSplits = {\n            ...prevState.ongoingSplits\n        };\n        ongoingSplits[key] = [\n            splitKey1,\n            splitKey2\n        ];\n        return {\n            ...prevState,\n            nextPageKey,\n            queries,\n            ongoingSplits\n        };\n    };\nconst completeSplitQuery = (key)=>(prevState)=>{\n        const completedSplit = prevState.ongoingSplits[key];\n        if (completedSplit === void 0) {\n            return prevState;\n        }\n        const queries = {\n            ...prevState.queries\n        };\n        delete queries[key];\n        const ongoingSplits = {\n            ...prevState.ongoingSplits\n        };\n        delete ongoingSplits[key];\n        let pageKeys = prevState.pageKeys.slice();\n        const pageIndex = prevState.pageKeys.findIndex((v)=>v === key);\n        if (pageIndex >= 0) {\n            pageKeys = [\n                ...prevState.pageKeys.slice(0, pageIndex),\n                ...completedSplit,\n                ...prevState.pageKeys.slice(pageIndex + 1)\n            ];\n        }\n        return {\n            ...prevState,\n            queries,\n            pageKeys,\n            ongoingSplits\n        };\n    };\nfunction usePaginatedQuery(query, args, options) {\n    if (typeof options?.initialNumItems !== \"number\" || options.initialNumItems < 0) {\n        throw new Error(`\\`options.initialNumItems\\` must be a positive number. Received \\`${options?.initialNumItems}\\`.`);\n    }\n    const skip = args === \"skip\";\n    const argsObject = skip ? {} : args;\n    const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query);\n    const createInitialState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        return ()=>{\n            const id = nextPaginationId();\n            return {\n                query,\n                args: argsObject,\n                id,\n                nextPageKey: 1,\n                pageKeys: skip ? [] : [\n                    0\n                ],\n                queries: skip ? {} : {\n                    0: {\n                        query,\n                        args: {\n                            ...argsObject,\n                            paginationOpts: {\n                                numItems: options.initialNumItems,\n                                cursor: null,\n                                id\n                            }\n                        }\n                    }\n                },\n                ongoingSplits: {},\n                skip\n            };\n        };\n    }, [\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)),\n        queryName,\n        options.initialNumItems,\n        skip\n    ]);\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(createInitialState);\n    let currState = state;\n    if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(state.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(state.args)) || skip !== state.skip) {\n        currState = createInitialState();\n        setState(currState);\n    }\n    const resultsObject = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_2__.useQueries)(currState.queries);\n    const [results, maybeLastResult] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        let currResult = void 0;\n        const allItems = [];\n        for (const pageKey of currState.pageKeys){\n            currResult = resultsObject[pageKey];\n            if (currResult === void 0) {\n                break;\n            }\n            if (currResult instanceof Error) {\n                if (currResult.message.includes(\"InvalidCursor\")) {\n                    console.warn(\"usePaginatedQuery hit error, resetting pagination state: \" + currResult.message);\n                    setState(createInitialState);\n                    return [\n                        [],\n                        void 0\n                    ];\n                } else {\n                    throw currResult;\n                }\n            }\n            const ongoingSplit = currState.ongoingSplits[pageKey];\n            if (ongoingSplit !== void 0) {\n                if (resultsObject[ongoingSplit[0]] !== void 0 && resultsObject[ongoingSplit[1]] !== void 0) {\n                    setState(completeSplitQuery(pageKey));\n                }\n            } else if (currResult.splitCursor && (currResult.pageStatus === \"SplitRecommended\" || currResult.pageStatus === \"SplitRequired\" || currResult.page.length > options.initialNumItems * 2)) {\n                setState(splitQuery(pageKey, currResult.splitCursor, currResult.continueCursor));\n            }\n            if (currResult.pageStatus === \"SplitRequired\") {\n                return [\n                    allItems,\n                    void 0\n                ];\n            }\n            allItems.push(...currResult.page);\n        }\n        return [\n            allItems,\n            currResult\n        ];\n    }, [\n        resultsObject,\n        currState.pageKeys,\n        currState.ongoingSplits,\n        options.initialNumItems,\n        createInitialState\n    ]);\n    const statusObject = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (maybeLastResult === void 0) {\n            if (currState.nextPageKey === 1) {\n                return {\n                    status: \"LoadingFirstPage\",\n                    isLoading: true,\n                    loadMore: (_numItems)=>{}\n                };\n            } else {\n                return {\n                    status: \"LoadingMore\",\n                    isLoading: true,\n                    loadMore: (_numItems)=>{}\n                };\n            }\n        }\n        if (maybeLastResult.isDone) {\n            return {\n                status: \"Exhausted\",\n                isLoading: false,\n                loadMore: (_numItems)=>{}\n            };\n        }\n        const continueCursor = maybeLastResult.continueCursor;\n        let alreadyLoadingMore = false;\n        return {\n            status: \"CanLoadMore\",\n            isLoading: false,\n            loadMore: (numItems)=>{\n                if (!alreadyLoadingMore) {\n                    alreadyLoadingMore = true;\n                    setState((prevState)=>{\n                        const pageKeys = [\n                            ...prevState.pageKeys,\n                            prevState.nextPageKey\n                        ];\n                        const queries = {\n                            ...prevState.queries\n                        };\n                        queries[prevState.nextPageKey] = {\n                            query: prevState.query,\n                            args: {\n                                ...prevState.args,\n                                paginationOpts: {\n                                    numItems,\n                                    cursor: continueCursor,\n                                    id: prevState.id\n                                }\n                            }\n                        };\n                        return {\n                            ...prevState,\n                            nextPageKey: prevState.nextPageKey + 1,\n                            pageKeys,\n                            queries\n                        };\n                    });\n                }\n            }\n        };\n    }, [\n        maybeLastResult,\n        currState.nextPageKey\n    ]);\n    return {\n        results,\n        ...statusObject\n    };\n}\nlet paginationId = 0;\nfunction nextPaginationId() {\n    paginationId++;\n    return paginationId;\n}\nfunction resetPaginationId() {\n    paginationId = 0;\n}\nfunction optimisticallyUpdateValueInPaginatedQuery(localStore, query, args, updateValue) {\n    const expectedArgs = JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(args));\n    for (const queryResult of localStore.getAllQueries(query)){\n        if (queryResult.value !== void 0) {\n            const { paginationOpts: _, ...innerArgs } = queryResult.args;\n            if (JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(innerArgs)) === expectedArgs) {\n                const value = queryResult.value;\n                if (typeof value === \"object\" && value !== null && Array.isArray(value.page)) {\n                    localStore.setQuery(query, queryResult.args, {\n                        ...value,\n                        page: value.page.map(updateValue)\n                    });\n                }\n            }\n        }\n    }\n} //# sourceMappingURL=use_paginated_query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9wYWdpbmF0ZWRfcXVlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFhO0FBQzZCO0FBQ1E7QUFDSjtBQUdwQjtBQUMxQixNQUFNSyxhQUFhLENBQUNDLEtBQUtDLGFBQWFDLGlCQUFtQixDQUFDQztRQUN4RCxNQUFNQyxVQUFVO1lBQUUsR0FBR0QsVUFBVUMsT0FBTztRQUFDO1FBQ3ZDLE1BQU1DLFlBQVlGLFVBQVVHLFdBQVc7UUFDdkMsTUFBTUMsWUFBWUosVUFBVUcsV0FBVyxHQUFHO1FBQzFDLE1BQU1BLGNBQWNILFVBQVVHLFdBQVcsR0FBRztRQUM1Q0YsT0FBTyxDQUFDQyxVQUFVLEdBQUc7WUFDbkJHLE9BQU9MLFVBQVVLLEtBQUs7WUFDdEJDLE1BQU07Z0JBQ0osR0FBR04sVUFBVU0sSUFBSTtnQkFDakJDLGdCQUFnQjtvQkFDZCxHQUFHUCxVQUFVQyxPQUFPLENBQUNKLElBQUksQ0FBQ1MsSUFBSSxDQUFDQyxjQUFjO29CQUM3Q0MsV0FBV1Y7Z0JBQ2I7WUFDRjtRQUNGO1FBQ0FHLE9BQU8sQ0FBQ0csVUFBVSxHQUFHO1lBQ25CQyxPQUFPTCxVQUFVSyxLQUFLO1lBQ3RCQyxNQUFNO2dCQUNKLEdBQUdOLFVBQVVNLElBQUk7Z0JBQ2pCQyxnQkFBZ0I7b0JBQ2QsR0FBR1AsVUFBVUMsT0FBTyxDQUFDSixJQUFJLENBQUNTLElBQUksQ0FBQ0MsY0FBYztvQkFDN0NFLFFBQVFYO29CQUNSVSxXQUFXVDtnQkFDYjtZQUNGO1FBQ0Y7UUFDQSxNQUFNVyxnQkFBZ0I7WUFBRSxHQUFHVixVQUFVVSxhQUFhO1FBQUM7UUFDbkRBLGFBQWEsQ0FBQ2IsSUFBSSxHQUFHO1lBQUNLO1lBQVdFO1NBQVU7UUFDM0MsT0FBTztZQUNMLEdBQUdKLFNBQVM7WUFDWkc7WUFDQUY7WUFDQVM7UUFDRjtJQUNGO0FBQ0EsTUFBTUMscUJBQXFCLENBQUNkLE1BQVEsQ0FBQ0c7UUFDbkMsTUFBTVksaUJBQWlCWixVQUFVVSxhQUFhLENBQUNiLElBQUk7UUFDbkQsSUFBSWUsbUJBQW1CLEtBQUssR0FBRztZQUM3QixPQUFPWjtRQUNUO1FBQ0EsTUFBTUMsVUFBVTtZQUFFLEdBQUdELFVBQVVDLE9BQU87UUFBQztRQUN2QyxPQUFPQSxPQUFPLENBQUNKLElBQUk7UUFDbkIsTUFBTWEsZ0JBQWdCO1lBQUUsR0FBR1YsVUFBVVUsYUFBYTtRQUFDO1FBQ25ELE9BQU9BLGFBQWEsQ0FBQ2IsSUFBSTtRQUN6QixJQUFJZ0IsV0FBV2IsVUFBVWEsUUFBUSxDQUFDQyxLQUFLO1FBQ3ZDLE1BQU1DLFlBQVlmLFVBQVVhLFFBQVEsQ0FBQ0csU0FBUyxDQUFDLENBQUNDLElBQU1BLE1BQU1wQjtRQUM1RCxJQUFJa0IsYUFBYSxHQUFHO1lBQ2xCRixXQUFXO21CQUNOYixVQUFVYSxRQUFRLENBQUNDLEtBQUssQ0FBQyxHQUFHQzttQkFDNUJIO21CQUNBWixVQUFVYSxRQUFRLENBQUNDLEtBQUssQ0FBQ0MsWUFBWTthQUN6QztRQUNIO1FBQ0EsT0FBTztZQUNMLEdBQUdmLFNBQVM7WUFDWkM7WUFDQVk7WUFDQUg7UUFDRjtJQUNGO0FBQ08sU0FBU1Esa0JBQWtCYixLQUFLLEVBQUVDLElBQUksRUFBRWEsT0FBTztJQUNwRCxJQUFJLE9BQU9BLFNBQVNDLG9CQUFvQixZQUFZRCxRQUFRQyxlQUFlLEdBQUcsR0FBRztRQUMvRSxNQUFNLElBQUlDLE1BQ1IsQ0FBQyxrRUFBa0UsRUFBRUYsU0FBU0MsZ0JBQWdCLEdBQUcsQ0FBQztJQUV0RztJQUNBLE1BQU1FLE9BQU9oQixTQUFTO0lBQ3RCLE1BQU1pQixhQUFhRCxPQUFPLENBQUMsSUFBSWhCO0lBQy9CLE1BQU1rQixZQUFZN0IsK0RBQWVBLENBQUNVO0lBQ2xDLE1BQU1vQixxQkFBcUJsQyw4Q0FBT0EsQ0FBQztRQUNqQyxPQUFPO1lBQ0wsTUFBTW1DLEtBQUtDO1lBQ1gsT0FBTztnQkFDTHRCO2dCQUNBQyxNQUFNaUI7Z0JBQ05HO2dCQUNBdkIsYUFBYTtnQkFDYlUsVUFBVVMsT0FBTyxFQUFFLEdBQUc7b0JBQUM7aUJBQUU7Z0JBQ3pCckIsU0FBU3FCLE9BQU8sQ0FBQyxJQUFJO29CQUNuQixHQUFHO3dCQUNEakI7d0JBQ0FDLE1BQU07NEJBQ0osR0FBR2lCLFVBQVU7NEJBQ2JoQixnQkFBZ0I7Z0NBQ2RxQixVQUFVVCxRQUFRQyxlQUFlO2dDQUNqQ1gsUUFBUTtnQ0FDUmlCOzRCQUNGO3dCQUNGO29CQUNGO2dCQUNGO2dCQUNBaEIsZUFBZSxDQUFDO2dCQUNoQlk7WUFDRjtRQUNGO0lBQ0YsR0FBRztRQUNELHVEQUF1RDtRQUN2RE8sS0FBS0MsU0FBUyxDQUFDckMsOERBQVlBLENBQUM4QjtRQUM1QkM7UUFDQUwsUUFBUUMsZUFBZTtRQUN2QkU7S0FDRDtJQUNELE1BQU0sQ0FBQ1MsT0FBT0MsU0FBUyxHQUFHeEMsK0NBQVFBLENBQUNpQztJQUNuQyxJQUFJUSxZQUFZRjtJQUNoQixJQUFJcEMsK0RBQWVBLENBQUNVLFdBQVdWLCtEQUFlQSxDQUFDb0MsTUFBTTFCLEtBQUssS0FBS3dCLEtBQUtDLFNBQVMsQ0FBQ3JDLDhEQUFZQSxDQUFDOEIsaUJBQWlCTSxLQUFLQyxTQUFTLENBQUNyQyw4REFBWUEsQ0FBQ3NDLE1BQU16QixJQUFJLE1BQU1nQixTQUFTUyxNQUFNVCxJQUFJLEVBQUU7UUFDM0tXLFlBQVlSO1FBQ1pPLFNBQVNDO0lBQ1g7SUFDQSxNQUFNQyxnQkFBZ0J4QywyREFBVUEsQ0FBQ3VDLFVBQVVoQyxPQUFPO0lBQ2xELE1BQU0sQ0FBQ2tDLFNBQVNDLGdCQUFnQixHQUFHN0MsOENBQU9BLENBQUM7UUFDekMsSUFBSThDLGFBQWEsS0FBSztRQUN0QixNQUFNQyxXQUFXLEVBQUU7UUFDbkIsS0FBSyxNQUFNQyxXQUFXTixVQUFVcEIsUUFBUSxDQUFFO1lBQ3hDd0IsYUFBYUgsYUFBYSxDQUFDSyxRQUFRO1lBQ25DLElBQUlGLGVBQWUsS0FBSyxHQUFHO2dCQUN6QjtZQUNGO1lBQ0EsSUFBSUEsc0JBQXNCaEIsT0FBTztnQkFDL0IsSUFBSWdCLFdBQVdHLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLGtCQUFrQjtvQkFDaERDLFFBQVFDLElBQUksQ0FDViw4REFBOEROLFdBQVdHLE9BQU87b0JBRWxGUixTQUFTUDtvQkFDVCxPQUFPO3dCQUFDLEVBQUU7d0JBQUUsS0FBSztxQkFBRTtnQkFDckIsT0FBTztvQkFDTCxNQUFNWTtnQkFDUjtZQUNGO1lBQ0EsTUFBTU8sZUFBZVgsVUFBVXZCLGFBQWEsQ0FBQzZCLFFBQVE7WUFDckQsSUFBSUssaUJBQWlCLEtBQUssR0FBRztnQkFDM0IsSUFBSVYsYUFBYSxDQUFDVSxZQUFZLENBQUMsRUFBRSxDQUFDLEtBQUssS0FBSyxLQUFLVixhQUFhLENBQUNVLFlBQVksQ0FBQyxFQUFFLENBQUMsS0FBSyxLQUFLLEdBQUc7b0JBQzFGWixTQUFTckIsbUJBQW1CNEI7Z0JBQzlCO1lBQ0YsT0FBTyxJQUFJRixXQUFXdkMsV0FBVyxJQUFLdUMsQ0FBQUEsV0FBV1EsVUFBVSxLQUFLLHNCQUFzQlIsV0FBV1EsVUFBVSxLQUFLLG1CQUFtQlIsV0FBV1MsSUFBSSxDQUFDQyxNQUFNLEdBQUc1QixRQUFRQyxlQUFlLEdBQUcsSUFBSTtnQkFDeExZLFNBQ0VwQyxXQUFXMkMsU0FBU0YsV0FBV3ZDLFdBQVcsRUFBRXVDLFdBQVd0QyxjQUFjO1lBRXpFO1lBQ0EsSUFBSXNDLFdBQVdRLFVBQVUsS0FBSyxpQkFBaUI7Z0JBQzdDLE9BQU87b0JBQUNQO29CQUFVLEtBQUs7aUJBQUU7WUFDM0I7WUFDQUEsU0FBU1UsSUFBSSxJQUFJWCxXQUFXUyxJQUFJO1FBQ2xDO1FBQ0EsT0FBTztZQUFDUjtZQUFVRDtTQUFXO0lBQy9CLEdBQUc7UUFDREg7UUFDQUQsVUFBVXBCLFFBQVE7UUFDbEJvQixVQUFVdkIsYUFBYTtRQUN2QlMsUUFBUUMsZUFBZTtRQUN2Qks7S0FDRDtJQUNELE1BQU13QixlQUFlMUQsOENBQU9BLENBQUM7UUFDM0IsSUFBSTZDLG9CQUFvQixLQUFLLEdBQUc7WUFDOUIsSUFBSUgsVUFBVTlCLFdBQVcsS0FBSyxHQUFHO2dCQUMvQixPQUFPO29CQUNMK0MsUUFBUTtvQkFDUkMsV0FBVztvQkFDWEMsVUFBVSxDQUFDQyxhQUNYO2dCQUNGO1lBQ0YsT0FBTztnQkFDTCxPQUFPO29CQUNMSCxRQUFRO29CQUNSQyxXQUFXO29CQUNYQyxVQUFVLENBQUNDLGFBQ1g7Z0JBQ0Y7WUFDRjtRQUNGO1FBQ0EsSUFBSWpCLGdCQUFnQmtCLE1BQU0sRUFBRTtZQUMxQixPQUFPO2dCQUNMSixRQUFRO2dCQUNSQyxXQUFXO2dCQUNYQyxVQUFVLENBQUNDLGFBQ1g7WUFDRjtRQUNGO1FBQ0EsTUFBTXRELGlCQUFpQnFDLGdCQUFnQnJDLGNBQWM7UUFDckQsSUFBSXdELHFCQUFxQjtRQUN6QixPQUFPO1lBQ0xMLFFBQVE7WUFDUkMsV0FBVztZQUNYQyxVQUFVLENBQUN4QjtnQkFDVCxJQUFJLENBQUMyQixvQkFBb0I7b0JBQ3ZCQSxxQkFBcUI7b0JBQ3JCdkIsU0FBUyxDQUFDaEM7d0JBQ1IsTUFBTWEsV0FBVzsrQkFBSWIsVUFBVWEsUUFBUTs0QkFBRWIsVUFBVUcsV0FBVzt5QkFBQzt3QkFDL0QsTUFBTUYsVUFBVTs0QkFBRSxHQUFHRCxVQUFVQyxPQUFPO3dCQUFDO3dCQUN2Q0EsT0FBTyxDQUFDRCxVQUFVRyxXQUFXLENBQUMsR0FBRzs0QkFDL0JFLE9BQU9MLFVBQVVLLEtBQUs7NEJBQ3RCQyxNQUFNO2dDQUNKLEdBQUdOLFVBQVVNLElBQUk7Z0NBQ2pCQyxnQkFBZ0I7b0NBQ2RxQjtvQ0FDQW5CLFFBQVFWO29DQUNSMkIsSUFBSTFCLFVBQVUwQixFQUFFO2dDQUNsQjs0QkFDRjt3QkFDRjt3QkFDQSxPQUFPOzRCQUNMLEdBQUcxQixTQUFTOzRCQUNaRyxhQUFhSCxVQUFVRyxXQUFXLEdBQUc7NEJBQ3JDVTs0QkFDQVo7d0JBQ0Y7b0JBQ0Y7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0YsR0FBRztRQUFDbUM7UUFBaUJILFVBQVU5QixXQUFXO0tBQUM7SUFDM0MsT0FBTztRQUNMZ0M7UUFDQSxHQUFHYyxZQUFZO0lBQ2pCO0FBQ0Y7QUFDQSxJQUFJTyxlQUFlO0FBQ25CLFNBQVM3QjtJQUNQNkI7SUFDQSxPQUFPQTtBQUNUO0FBQ08sU0FBU0M7SUFDZEQsZUFBZTtBQUNqQjtBQUNPLFNBQVNFLDBDQUEwQ0MsVUFBVSxFQUFFdEQsS0FBSyxFQUFFQyxJQUFJLEVBQUVzRCxXQUFXO0lBQzVGLE1BQU1DLGVBQWVoQyxLQUFLQyxTQUFTLENBQUNyQyw4REFBWUEsQ0FBQ2E7SUFDakQsS0FBSyxNQUFNd0QsZUFBZUgsV0FBV0ksYUFBYSxDQUFDMUQsT0FBUTtRQUN6RCxJQUFJeUQsWUFBWUUsS0FBSyxLQUFLLEtBQUssR0FBRztZQUNoQyxNQUFNLEVBQUV6RCxnQkFBZ0IwRCxDQUFDLEVBQUUsR0FBR0MsV0FBVyxHQUFHSixZQUFZeEQsSUFBSTtZQUM1RCxJQUFJdUIsS0FBS0MsU0FBUyxDQUFDckMsOERBQVlBLENBQUN5RSxnQkFBZ0JMLGNBQWM7Z0JBQzVELE1BQU1HLFFBQVFGLFlBQVlFLEtBQUs7Z0JBQy9CLElBQUksT0FBT0EsVUFBVSxZQUFZQSxVQUFVLFFBQVFHLE1BQU1DLE9BQU8sQ0FBQ0osTUFBTWxCLElBQUksR0FBRztvQkFDNUVhLFdBQVdVLFFBQVEsQ0FBQ2hFLE9BQU95RCxZQUFZeEQsSUFBSSxFQUFFO3dCQUMzQyxHQUFHMEQsS0FBSzt3QkFDUmxCLE1BQU1rQixNQUFNbEIsSUFBSSxDQUFDd0IsR0FBRyxDQUFDVjtvQkFDdkI7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7QUFDRixFQUNBLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9wYWdpbmF0ZWRfcXVlcnkuanM/MzZlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyB1c2VRdWVyaWVzIH0gZnJvbSBcIi4vdXNlX3F1ZXJpZXMuanNcIjtcbmltcG9ydCB7XG4gIGdldEZ1bmN0aW9uTmFtZVxufSBmcm9tIFwiLi4vc2VydmVyL2FwaS5qc1wiO1xuY29uc3Qgc3BsaXRRdWVyeSA9IChrZXksIHNwbGl0Q3Vyc29yLCBjb250aW51ZUN1cnNvcikgPT4gKHByZXZTdGF0ZSkgPT4ge1xuICBjb25zdCBxdWVyaWVzID0geyAuLi5wcmV2U3RhdGUucXVlcmllcyB9O1xuICBjb25zdCBzcGxpdEtleTEgPSBwcmV2U3RhdGUubmV4dFBhZ2VLZXk7XG4gIGNvbnN0IHNwbGl0S2V5MiA9IHByZXZTdGF0ZS5uZXh0UGFnZUtleSArIDE7XG4gIGNvbnN0IG5leHRQYWdlS2V5ID0gcHJldlN0YXRlLm5leHRQYWdlS2V5ICsgMjtcbiAgcXVlcmllc1tzcGxpdEtleTFdID0ge1xuICAgIHF1ZXJ5OiBwcmV2U3RhdGUucXVlcnksXG4gICAgYXJnczoge1xuICAgICAgLi4ucHJldlN0YXRlLmFyZ3MsXG4gICAgICBwYWdpbmF0aW9uT3B0czoge1xuICAgICAgICAuLi5wcmV2U3RhdGUucXVlcmllc1trZXldLmFyZ3MucGFnaW5hdGlvbk9wdHMsXG4gICAgICAgIGVuZEN1cnNvcjogc3BsaXRDdXJzb3JcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHF1ZXJpZXNbc3BsaXRLZXkyXSA9IHtcbiAgICBxdWVyeTogcHJldlN0YXRlLnF1ZXJ5LFxuICAgIGFyZ3M6IHtcbiAgICAgIC4uLnByZXZTdGF0ZS5hcmdzLFxuICAgICAgcGFnaW5hdGlvbk9wdHM6IHtcbiAgICAgICAgLi4ucHJldlN0YXRlLnF1ZXJpZXNba2V5XS5hcmdzLnBhZ2luYXRpb25PcHRzLFxuICAgICAgICBjdXJzb3I6IHNwbGl0Q3Vyc29yLFxuICAgICAgICBlbmRDdXJzb3I6IGNvbnRpbnVlQ3Vyc29yXG4gICAgICB9XG4gICAgfVxuICB9O1xuICBjb25zdCBvbmdvaW5nU3BsaXRzID0geyAuLi5wcmV2U3RhdGUub25nb2luZ1NwbGl0cyB9O1xuICBvbmdvaW5nU3BsaXRzW2tleV0gPSBbc3BsaXRLZXkxLCBzcGxpdEtleTJdO1xuICByZXR1cm4ge1xuICAgIC4uLnByZXZTdGF0ZSxcbiAgICBuZXh0UGFnZUtleSxcbiAgICBxdWVyaWVzLFxuICAgIG9uZ29pbmdTcGxpdHNcbiAgfTtcbn07XG5jb25zdCBjb21wbGV0ZVNwbGl0UXVlcnkgPSAoa2V5KSA9PiAocHJldlN0YXRlKSA9PiB7XG4gIGNvbnN0IGNvbXBsZXRlZFNwbGl0ID0gcHJldlN0YXRlLm9uZ29pbmdTcGxpdHNba2V5XTtcbiAgaWYgKGNvbXBsZXRlZFNwbGl0ID09PSB2b2lkIDApIHtcbiAgICByZXR1cm4gcHJldlN0YXRlO1xuICB9XG4gIGNvbnN0IHF1ZXJpZXMgPSB7IC4uLnByZXZTdGF0ZS5xdWVyaWVzIH07XG4gIGRlbGV0ZSBxdWVyaWVzW2tleV07XG4gIGNvbnN0IG9uZ29pbmdTcGxpdHMgPSB7IC4uLnByZXZTdGF0ZS5vbmdvaW5nU3BsaXRzIH07XG4gIGRlbGV0ZSBvbmdvaW5nU3BsaXRzW2tleV07XG4gIGxldCBwYWdlS2V5cyA9IHByZXZTdGF0ZS5wYWdlS2V5cy5zbGljZSgpO1xuICBjb25zdCBwYWdlSW5kZXggPSBwcmV2U3RhdGUucGFnZUtleXMuZmluZEluZGV4KCh2KSA9PiB2ID09PSBrZXkpO1xuICBpZiAocGFnZUluZGV4ID49IDApIHtcbiAgICBwYWdlS2V5cyA9IFtcbiAgICAgIC4uLnByZXZTdGF0ZS5wYWdlS2V5cy5zbGljZSgwLCBwYWdlSW5kZXgpLFxuICAgICAgLi4uY29tcGxldGVkU3BsaXQsXG4gICAgICAuLi5wcmV2U3RhdGUucGFnZUtleXMuc2xpY2UocGFnZUluZGV4ICsgMSlcbiAgICBdO1xuICB9XG4gIHJldHVybiB7XG4gICAgLi4ucHJldlN0YXRlLFxuICAgIHF1ZXJpZXMsXG4gICAgcGFnZUtleXMsXG4gICAgb25nb2luZ1NwbGl0c1xuICB9O1xufTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VQYWdpbmF0ZWRRdWVyeShxdWVyeSwgYXJncywgb3B0aW9ucykge1xuICBpZiAodHlwZW9mIG9wdGlvbnM/LmluaXRpYWxOdW1JdGVtcyAhPT0gXCJudW1iZXJcIiB8fCBvcHRpb25zLmluaXRpYWxOdW1JdGVtcyA8IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgXFxgb3B0aW9ucy5pbml0aWFsTnVtSXRlbXNcXGAgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlci4gUmVjZWl2ZWQgXFxgJHtvcHRpb25zPy5pbml0aWFsTnVtSXRlbXN9XFxgLmBcbiAgICApO1xuICB9XG4gIGNvbnN0IHNraXAgPSBhcmdzID09PSBcInNraXBcIjtcbiAgY29uc3QgYXJnc09iamVjdCA9IHNraXAgPyB7fSA6IGFyZ3M7XG4gIGNvbnN0IHF1ZXJ5TmFtZSA9IGdldEZ1bmN0aW9uTmFtZShxdWVyeSk7XG4gIGNvbnN0IGNyZWF0ZUluaXRpYWxTdGF0ZSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjb25zdCBpZCA9IG5leHRQYWdpbmF0aW9uSWQoKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHF1ZXJ5LFxuICAgICAgICBhcmdzOiBhcmdzT2JqZWN0LFxuICAgICAgICBpZCxcbiAgICAgICAgbmV4dFBhZ2VLZXk6IDEsXG4gICAgICAgIHBhZ2VLZXlzOiBza2lwID8gW10gOiBbMF0sXG4gICAgICAgIHF1ZXJpZXM6IHNraXAgPyB7fSA6IHtcbiAgICAgICAgICAwOiB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgICAgLi4uYXJnc09iamVjdCxcbiAgICAgICAgICAgICAgcGFnaW5hdGlvbk9wdHM6IHtcbiAgICAgICAgICAgICAgICBudW1JdGVtczogb3B0aW9ucy5pbml0aWFsTnVtSXRlbXMsXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBudWxsLFxuICAgICAgICAgICAgICAgIGlkXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uZ29pbmdTcGxpdHM6IHt9LFxuICAgICAgICBza2lwXG4gICAgICB9O1xuICAgIH07XG4gIH0sIFtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gICAgSlNPTi5zdHJpbmdpZnkoY29udmV4VG9Kc29uKGFyZ3NPYmplY3QpKSxcbiAgICBxdWVyeU5hbWUsXG4gICAgb3B0aW9ucy5pbml0aWFsTnVtSXRlbXMsXG4gICAgc2tpcFxuICBdKTtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZShjcmVhdGVJbml0aWFsU3RhdGUpO1xuICBsZXQgY3VyclN0YXRlID0gc3RhdGU7XG4gIGlmIChnZXRGdW5jdGlvbk5hbWUocXVlcnkpICE9PSBnZXRGdW5jdGlvbk5hbWUoc3RhdGUucXVlcnkpIHx8IEpTT04uc3RyaW5naWZ5KGNvbnZleFRvSnNvbihhcmdzT2JqZWN0KSkgIT09IEpTT04uc3RyaW5naWZ5KGNvbnZleFRvSnNvbihzdGF0ZS5hcmdzKSkgfHwgc2tpcCAhPT0gc3RhdGUuc2tpcCkge1xuICAgIGN1cnJTdGF0ZSA9IGNyZWF0ZUluaXRpYWxTdGF0ZSgpO1xuICAgIHNldFN0YXRlKGN1cnJTdGF0ZSk7XG4gIH1cbiAgY29uc3QgcmVzdWx0c09iamVjdCA9IHVzZVF1ZXJpZXMoY3VyclN0YXRlLnF1ZXJpZXMpO1xuICBjb25zdCBbcmVzdWx0cywgbWF5YmVMYXN0UmVzdWx0XSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGxldCBjdXJyUmVzdWx0ID0gdm9pZCAwO1xuICAgIGNvbnN0IGFsbEl0ZW1zID0gW107XG4gICAgZm9yIChjb25zdCBwYWdlS2V5IG9mIGN1cnJTdGF0ZS5wYWdlS2V5cykge1xuICAgICAgY3VyclJlc3VsdCA9IHJlc3VsdHNPYmplY3RbcGFnZUtleV07XG4gICAgICBpZiAoY3VyclJlc3VsdCA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWYgKGN1cnJSZXN1bHQgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICBpZiAoY3VyclJlc3VsdC5tZXNzYWdlLmluY2x1ZGVzKFwiSW52YWxpZEN1cnNvclwiKSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAgIFwidXNlUGFnaW5hdGVkUXVlcnkgaGl0IGVycm9yLCByZXNldHRpbmcgcGFnaW5hdGlvbiBzdGF0ZTogXCIgKyBjdXJyUmVzdWx0Lm1lc3NhZ2VcbiAgICAgICAgICApO1xuICAgICAgICAgIHNldFN0YXRlKGNyZWF0ZUluaXRpYWxTdGF0ZSk7XG4gICAgICAgICAgcmV0dXJuIFtbXSwgdm9pZCAwXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBjdXJyUmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBvbmdvaW5nU3BsaXQgPSBjdXJyU3RhdGUub25nb2luZ1NwbGl0c1twYWdlS2V5XTtcbiAgICAgIGlmIChvbmdvaW5nU3BsaXQgIT09IHZvaWQgMCkge1xuICAgICAgICBpZiAocmVzdWx0c09iamVjdFtvbmdvaW5nU3BsaXRbMF1dICE9PSB2b2lkIDAgJiYgcmVzdWx0c09iamVjdFtvbmdvaW5nU3BsaXRbMV1dICE9PSB2b2lkIDApIHtcbiAgICAgICAgICBzZXRTdGF0ZShjb21wbGV0ZVNwbGl0UXVlcnkocGFnZUtleSkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGN1cnJSZXN1bHQuc3BsaXRDdXJzb3IgJiYgKGN1cnJSZXN1bHQucGFnZVN0YXR1cyA9PT0gXCJTcGxpdFJlY29tbWVuZGVkXCIgfHwgY3VyclJlc3VsdC5wYWdlU3RhdHVzID09PSBcIlNwbGl0UmVxdWlyZWRcIiB8fCBjdXJyUmVzdWx0LnBhZ2UubGVuZ3RoID4gb3B0aW9ucy5pbml0aWFsTnVtSXRlbXMgKiAyKSkge1xuICAgICAgICBzZXRTdGF0ZShcbiAgICAgICAgICBzcGxpdFF1ZXJ5KHBhZ2VLZXksIGN1cnJSZXN1bHQuc3BsaXRDdXJzb3IsIGN1cnJSZXN1bHQuY29udGludWVDdXJzb3IpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAoY3VyclJlc3VsdC5wYWdlU3RhdHVzID09PSBcIlNwbGl0UmVxdWlyZWRcIikge1xuICAgICAgICByZXR1cm4gW2FsbEl0ZW1zLCB2b2lkIDBdO1xuICAgICAgfVxuICAgICAgYWxsSXRlbXMucHVzaCguLi5jdXJyUmVzdWx0LnBhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gW2FsbEl0ZW1zLCBjdXJyUmVzdWx0XTtcbiAgfSwgW1xuICAgIHJlc3VsdHNPYmplY3QsXG4gICAgY3VyclN0YXRlLnBhZ2VLZXlzLFxuICAgIGN1cnJTdGF0ZS5vbmdvaW5nU3BsaXRzLFxuICAgIG9wdGlvbnMuaW5pdGlhbE51bUl0ZW1zLFxuICAgIGNyZWF0ZUluaXRpYWxTdGF0ZVxuICBdKTtcbiAgY29uc3Qgc3RhdHVzT2JqZWN0ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKG1heWJlTGFzdFJlc3VsdCA9PT0gdm9pZCAwKSB7XG4gICAgICBpZiAoY3VyclN0YXRlLm5leHRQYWdlS2V5ID09PSAxKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc3RhdHVzOiBcIkxvYWRpbmdGaXJzdFBhZ2VcIixcbiAgICAgICAgICBpc0xvYWRpbmc6IHRydWUsXG4gICAgICAgICAgbG9hZE1vcmU6IChfbnVtSXRlbXMpID0+IHtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN0YXR1czogXCJMb2FkaW5nTW9yZVwiLFxuICAgICAgICAgIGlzTG9hZGluZzogdHJ1ZSxcbiAgICAgICAgICBsb2FkTW9yZTogKF9udW1JdGVtcykgPT4ge1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG1heWJlTGFzdFJlc3VsdC5pc0RvbmUpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0YXR1czogXCJFeGhhdXN0ZWRcIixcbiAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgbG9hZE1vcmU6IChfbnVtSXRlbXMpID0+IHtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgY29udGludWVDdXJzb3IgPSBtYXliZUxhc3RSZXN1bHQuY29udGludWVDdXJzb3I7XG4gICAgbGV0IGFscmVhZHlMb2FkaW5nTW9yZSA9IGZhbHNlO1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6IFwiQ2FuTG9hZE1vcmVcIixcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBsb2FkTW9yZTogKG51bUl0ZW1zKSA9PiB7XG4gICAgICAgIGlmICghYWxyZWFkeUxvYWRpbmdNb3JlKSB7XG4gICAgICAgICAgYWxyZWFkeUxvYWRpbmdNb3JlID0gdHJ1ZTtcbiAgICAgICAgICBzZXRTdGF0ZSgocHJldlN0YXRlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYWdlS2V5cyA9IFsuLi5wcmV2U3RhdGUucGFnZUtleXMsIHByZXZTdGF0ZS5uZXh0UGFnZUtleV07XG4gICAgICAgICAgICBjb25zdCBxdWVyaWVzID0geyAuLi5wcmV2U3RhdGUucXVlcmllcyB9O1xuICAgICAgICAgICAgcXVlcmllc1twcmV2U3RhdGUubmV4dFBhZ2VLZXldID0ge1xuICAgICAgICAgICAgICBxdWVyeTogcHJldlN0YXRlLnF1ZXJ5LFxuICAgICAgICAgICAgICBhcmdzOiB7XG4gICAgICAgICAgICAgICAgLi4ucHJldlN0YXRlLmFyZ3MsXG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbk9wdHM6IHtcbiAgICAgICAgICAgICAgICAgIG51bUl0ZW1zLFxuICAgICAgICAgICAgICAgICAgY3Vyc29yOiBjb250aW51ZUN1cnNvcixcbiAgICAgICAgICAgICAgICAgIGlkOiBwcmV2U3RhdGUuaWRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAuLi5wcmV2U3RhdGUsXG4gICAgICAgICAgICAgIG5leHRQYWdlS2V5OiBwcmV2U3RhdGUubmV4dFBhZ2VLZXkgKyAxLFxuICAgICAgICAgICAgICBwYWdlS2V5cyxcbiAgICAgICAgICAgICAgcXVlcmllc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH0sIFttYXliZUxhc3RSZXN1bHQsIGN1cnJTdGF0ZS5uZXh0UGFnZUtleV0pO1xuICByZXR1cm4ge1xuICAgIHJlc3VsdHMsXG4gICAgLi4uc3RhdHVzT2JqZWN0XG4gIH07XG59XG5sZXQgcGFnaW5hdGlvbklkID0gMDtcbmZ1bmN0aW9uIG5leHRQYWdpbmF0aW9uSWQoKSB7XG4gIHBhZ2luYXRpb25JZCsrO1xuICByZXR1cm4gcGFnaW5hdGlvbklkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0UGFnaW5hdGlvbklkKCkge1xuICBwYWdpbmF0aW9uSWQgPSAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG9wdGltaXN0aWNhbGx5VXBkYXRlVmFsdWVJblBhZ2luYXRlZFF1ZXJ5KGxvY2FsU3RvcmUsIHF1ZXJ5LCBhcmdzLCB1cGRhdGVWYWx1ZSkge1xuICBjb25zdCBleHBlY3RlZEFyZ3MgPSBKU09OLnN0cmluZ2lmeShjb252ZXhUb0pzb24oYXJncykpO1xuICBmb3IgKGNvbnN0IHF1ZXJ5UmVzdWx0IG9mIGxvY2FsU3RvcmUuZ2V0QWxsUXVlcmllcyhxdWVyeSkpIHtcbiAgICBpZiAocXVlcnlSZXN1bHQudmFsdWUgIT09IHZvaWQgMCkge1xuICAgICAgY29uc3QgeyBwYWdpbmF0aW9uT3B0czogXywgLi4uaW5uZXJBcmdzIH0gPSBxdWVyeVJlc3VsdC5hcmdzO1xuICAgICAgaWYgKEpTT04uc3RyaW5naWZ5KGNvbnZleFRvSnNvbihpbm5lckFyZ3MpKSA9PT0gZXhwZWN0ZWRBcmdzKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gcXVlcnlSZXN1bHQudmFsdWU7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUgIT09IG51bGwgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZS5wYWdlKSkge1xuICAgICAgICAgIGxvY2FsU3RvcmUuc2V0UXVlcnkocXVlcnksIHF1ZXJ5UmVzdWx0LmFyZ3MsIHtcbiAgICAgICAgICAgIC4uLnZhbHVlLFxuICAgICAgICAgICAgcGFnZTogdmFsdWUucGFnZS5tYXAodXBkYXRlVmFsdWUpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZV9wYWdpbmF0ZWRfcXVlcnkuanMubWFwXG4iXSwibmFtZXMiOlsidXNlTWVtbyIsInVzZVN0YXRlIiwiY29udmV4VG9Kc29uIiwidXNlUXVlcmllcyIsImdldEZ1bmN0aW9uTmFtZSIsInNwbGl0UXVlcnkiLCJrZXkiLCJzcGxpdEN1cnNvciIsImNvbnRpbnVlQ3Vyc29yIiwicHJldlN0YXRlIiwicXVlcmllcyIsInNwbGl0S2V5MSIsIm5leHRQYWdlS2V5Iiwic3BsaXRLZXkyIiwicXVlcnkiLCJhcmdzIiwicGFnaW5hdGlvbk9wdHMiLCJlbmRDdXJzb3IiLCJjdXJzb3IiLCJvbmdvaW5nU3BsaXRzIiwiY29tcGxldGVTcGxpdFF1ZXJ5IiwiY29tcGxldGVkU3BsaXQiLCJwYWdlS2V5cyIsInNsaWNlIiwicGFnZUluZGV4IiwiZmluZEluZGV4IiwidiIsInVzZVBhZ2luYXRlZFF1ZXJ5Iiwib3B0aW9ucyIsImluaXRpYWxOdW1JdGVtcyIsIkVycm9yIiwic2tpcCIsImFyZ3NPYmplY3QiLCJxdWVyeU5hbWUiLCJjcmVhdGVJbml0aWFsU3RhdGUiLCJpZCIsIm5leHRQYWdpbmF0aW9uSWQiLCJudW1JdGVtcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdGF0ZSIsInNldFN0YXRlIiwiY3VyclN0YXRlIiwicmVzdWx0c09iamVjdCIsInJlc3VsdHMiLCJtYXliZUxhc3RSZXN1bHQiLCJjdXJyUmVzdWx0IiwiYWxsSXRlbXMiLCJwYWdlS2V5IiwibWVzc2FnZSIsImluY2x1ZGVzIiwiY29uc29sZSIsIndhcm4iLCJvbmdvaW5nU3BsaXQiLCJwYWdlU3RhdHVzIiwicGFnZSIsImxlbmd0aCIsInB1c2giLCJzdGF0dXNPYmplY3QiLCJzdGF0dXMiLCJpc0xvYWRpbmciLCJsb2FkTW9yZSIsIl9udW1JdGVtcyIsImlzRG9uZSIsImFscmVhZHlMb2FkaW5nTW9yZSIsInBhZ2luYXRpb25JZCIsInJlc2V0UGFnaW5hdGlvbklkIiwib3B0aW1pc3RpY2FsbHlVcGRhdGVWYWx1ZUluUGFnaW5hdGVkUXVlcnkiLCJsb2NhbFN0b3JlIiwidXBkYXRlVmFsdWUiLCJleHBlY3RlZEFyZ3MiLCJxdWVyeVJlc3VsdCIsImdldEFsbFF1ZXJpZXMiLCJ2YWx1ZSIsIl8iLCJpbm5lckFyZ3MiLCJBcnJheSIsImlzQXJyYXkiLCJzZXRRdWVyeSIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_queries.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_queries.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQueries: () => (/* binding */ useQueries),\n/* harmony export */   useQueriesHelper: () => (/* binding */ useQueriesHelper)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queries_observer.js */ \"(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n\n\n\n\n\nfunction useQueries(queries) {\n    const convex = (0,_client_js__WEBPACK_IMPORTED_MODULE_1__.useConvex)();\n    if (convex === void 0) {\n        throw new Error(\"Could not find Convex client! `useQuery` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    const createWatch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        return (query, args, journal)=>{\n            return convex.watchQuery(query, args, {\n                journal\n            });\n        };\n    }, [\n        convex\n    ]);\n    return useQueriesHelper(queries, createWatch);\n}\nfunction useQueriesHelper(queries, createWatch) {\n    const [observer] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__.QueriesObserver(createWatch));\n    if (observer.createWatch !== createWatch) {\n        observer.setCreateWatch(createWatch);\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>()=>observer.destroy(), [\n        observer\n    ]);\n    const subscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({\n            getCurrentValue: ()=>{\n                return observer.getLocalResults(queries);\n            },\n            subscribe: (callback)=>{\n                observer.setQueries(queries);\n                return observer.subscribe(callback);\n            }\n        }), [\n        observer,\n        queries\n    ]);\n    return (0,_use_subscription_js__WEBPACK_IMPORTED_MODULE_3__.useSubscription)(subscription);\n} //# sourceMappingURL=use_queries.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFhO0FBQ3dDO0FBQ2I7QUFDZ0I7QUFDQTtBQUNqRCxTQUFTTSxXQUFXQyxPQUFPO0lBQ2hDLE1BQU1DLFNBQVNMLHFEQUFTQTtJQUN4QixJQUFJSyxXQUFXLEtBQUssR0FBRztRQUNyQixNQUFNLElBQUlDLE1BQ1I7SUFFSjtJQUNBLE1BQU1DLGNBQWNULDhDQUFPQSxDQUFDO1FBQzFCLE9BQU8sQ0FBQ1UsT0FBT0MsTUFBTUM7WUFDbkIsT0FBT0wsT0FBT00sVUFBVSxDQUFDSCxPQUFPQyxNQUFNO2dCQUFFQztZQUFRO1FBQ2xEO0lBQ0YsR0FBRztRQUFDTDtLQUFPO0lBQ1gsT0FBT08saUJBQWlCUixTQUFTRztBQUNuQztBQUNPLFNBQVNLLGlCQUFpQlIsT0FBTyxFQUFFRyxXQUFXO0lBQ25ELE1BQU0sQ0FBQ00sU0FBUyxHQUFHZCwrQ0FBUUEsQ0FBQyxJQUFNLElBQUlFLGlFQUFlQSxDQUFDTTtJQUN0RCxJQUFJTSxTQUFTTixXQUFXLEtBQUtBLGFBQWE7UUFDeENNLFNBQVNDLGNBQWMsQ0FBQ1A7SUFDMUI7SUFDQVYsZ0RBQVNBLENBQUMsSUFBTSxJQUFNZ0IsU0FBU0UsT0FBTyxJQUFJO1FBQUNGO0tBQVM7SUFDcEQsTUFBTUcsZUFBZWxCLDhDQUFPQSxDQUMxQixJQUFPO1lBQ0xtQixpQkFBaUI7Z0JBQ2YsT0FBT0osU0FBU0ssZUFBZSxDQUFDZDtZQUNsQztZQUNBZSxXQUFXLENBQUNDO2dCQUNWUCxTQUFTUSxVQUFVLENBQUNqQjtnQkFDcEIsT0FBT1MsU0FBU00sU0FBUyxDQUFDQztZQUM1QjtRQUNGLElBQ0E7UUFBQ1A7UUFBVVQ7S0FBUTtJQUVyQixPQUFPRixxRUFBZUEsQ0FBQ2M7QUFDekIsRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC91c2VfcXVlcmllcy5qcz84ZTJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VNZW1vLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ29udmV4IH0gZnJvbSBcIi4vY2xpZW50LmpzXCI7XG5pbXBvcnQgeyBRdWVyaWVzT2JzZXJ2ZXIgfSBmcm9tIFwiLi9xdWVyaWVzX29ic2VydmVyLmpzXCI7XG5pbXBvcnQgeyB1c2VTdWJzY3JpcHRpb24gfSBmcm9tIFwiLi91c2Vfc3Vic2NyaXB0aW9uLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gdXNlUXVlcmllcyhxdWVyaWVzKSB7XG4gIGNvbnN0IGNvbnZleCA9IHVzZUNvbnZleCgpO1xuICBpZiAoY29udmV4ID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIkNvdWxkIG5vdCBmaW5kIENvbnZleCBjbGllbnQhIGB1c2VRdWVyeWAgbXVzdCBiZSB1c2VkIGluIHRoZSBSZWFjdCBjb21wb25lbnQgdHJlZSB1bmRlciBgQ29udmV4UHJvdmlkZXJgLiBEaWQgeW91IGZvcmdldCBpdD8gU2VlIGh0dHBzOi8vZG9jcy5jb252ZXguZGV2L3F1aWNrLXN0YXJ0I3NldC11cC1jb252ZXgtaW4teW91ci1yZWFjdC1hcHBcIlxuICAgICk7XG4gIH1cbiAgY29uc3QgY3JlYXRlV2F0Y2ggPSB1c2VNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gKHF1ZXJ5LCBhcmdzLCBqb3VybmFsKSA9PiB7XG4gICAgICByZXR1cm4gY29udmV4LndhdGNoUXVlcnkocXVlcnksIGFyZ3MsIHsgam91cm5hbCB9KTtcbiAgICB9O1xuICB9LCBbY29udmV4XSk7XG4gIHJldHVybiB1c2VRdWVyaWVzSGVscGVyKHF1ZXJpZXMsIGNyZWF0ZVdhdGNoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1c2VRdWVyaWVzSGVscGVyKHF1ZXJpZXMsIGNyZWF0ZVdhdGNoKSB7XG4gIGNvbnN0IFtvYnNlcnZlcl0gPSB1c2VTdGF0ZSgoKSA9PiBuZXcgUXVlcmllc09ic2VydmVyKGNyZWF0ZVdhdGNoKSk7XG4gIGlmIChvYnNlcnZlci5jcmVhdGVXYXRjaCAhPT0gY3JlYXRlV2F0Y2gpIHtcbiAgICBvYnNlcnZlci5zZXRDcmVhdGVXYXRjaChjcmVhdGVXYXRjaCk7XG4gIH1cbiAgdXNlRWZmZWN0KCgpID0+ICgpID0+IG9ic2VydmVyLmRlc3Ryb3koKSwgW29ic2VydmVyXSk7XG4gIGNvbnN0IHN1YnNjcmlwdGlvbiA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGdldEN1cnJlbnRWYWx1ZTogKCkgPT4ge1xuICAgICAgICByZXR1cm4gb2JzZXJ2ZXIuZ2V0TG9jYWxSZXN1bHRzKHF1ZXJpZXMpO1xuICAgICAgfSxcbiAgICAgIHN1YnNjcmliZTogKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIG9ic2VydmVyLnNldFF1ZXJpZXMocXVlcmllcyk7XG4gICAgICAgIHJldHVybiBvYnNlcnZlci5zdWJzY3JpYmUoY2FsbGJhY2spO1xuICAgICAgfVxuICAgIH0pLFxuICAgIFtvYnNlcnZlciwgcXVlcmllc11cbiAgKTtcbiAgcmV0dXJuIHVzZVN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlX3F1ZXJpZXMuanMubWFwXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlTWVtbyIsInVzZVN0YXRlIiwidXNlQ29udmV4IiwiUXVlcmllc09ic2VydmVyIiwidXNlU3Vic2NyaXB0aW9uIiwidXNlUXVlcmllcyIsInF1ZXJpZXMiLCJjb252ZXgiLCJFcnJvciIsImNyZWF0ZVdhdGNoIiwicXVlcnkiLCJhcmdzIiwiam91cm5hbCIsIndhdGNoUXVlcnkiLCJ1c2VRdWVyaWVzSGVscGVyIiwib2JzZXJ2ZXIiLCJzZXRDcmVhdGVXYXRjaCIsImRlc3Ryb3kiLCJzdWJzY3JpcHRpb24iLCJnZXRDdXJyZW50VmFsdWUiLCJnZXRMb2NhbFJlc3VsdHMiLCJzdWJzY3JpYmUiLCJjYWxsYmFjayIsInNldFF1ZXJpZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_subscription.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSubscription: () => (/* binding */ useSubscription)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction useSubscription({ // (Synchronously) returns the current value of our subscription.\ngetCurrentValue, // This function is passed an event handler to attach to the subscription.\n// It should return an unsubscribe function that removes the handler.\nsubscribe }) {\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>({\n            getCurrentValue,\n            subscribe,\n            value: getCurrentValue()\n        }));\n    let valueToReturn = state.value;\n    if (state.getCurrentValue !== getCurrentValue || state.subscribe !== subscribe) {\n        valueToReturn = getCurrentValue();\n        setState({\n            getCurrentValue,\n            subscribe,\n            value: valueToReturn\n        });\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let didUnsubscribe = false;\n        const checkForUpdates = ()=>{\n            if (didUnsubscribe) {\n                return;\n            }\n            setState((prevState)=>{\n                if (prevState.getCurrentValue !== getCurrentValue || prevState.subscribe !== subscribe) {\n                    return prevState;\n                }\n                const value = getCurrentValue();\n                if (prevState.value === value) {\n                    return prevState;\n                }\n                return {\n                    ...prevState,\n                    value\n                };\n            });\n        };\n        const unsubscribe = subscribe(checkForUpdates);\n        checkForUpdates();\n        return ()=>{\n            didUnsubscribe = true;\n            unsubscribe();\n        };\n    }, [\n        getCurrentValue,\n        subscribe\n    ]);\n    return valueToReturn;\n} //# sourceMappingURL=use_subscription.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9zdWJzY3JpcHRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUMrQjtBQUNyQyxTQUFTRSxnQkFBZ0IsRUFDOUIsaUVBQWlFO0FBQ2pFQyxlQUFlLEVBQ2YsMEVBQTBFO0FBQzFFLHFFQUFxRTtBQUNyRUMsU0FBUyxFQUNWO0lBQ0MsTUFBTSxDQUFDQyxPQUFPQyxTQUFTLEdBQUdMLCtDQUFRQSxDQUFDLElBQU87WUFDeENFO1lBQ0FDO1lBQ0FHLE9BQU9KO1FBQ1Q7SUFDQSxJQUFJSyxnQkFBZ0JILE1BQU1FLEtBQUs7SUFDL0IsSUFBSUYsTUFBTUYsZUFBZSxLQUFLQSxtQkFBbUJFLE1BQU1ELFNBQVMsS0FBS0EsV0FBVztRQUM5RUksZ0JBQWdCTDtRQUNoQkcsU0FBUztZQUNQSDtZQUNBQztZQUNBRyxPQUFPQztRQUNUO0lBQ0Y7SUFDQVIsZ0RBQVNBLENBQUM7UUFDUixJQUFJUyxpQkFBaUI7UUFDckIsTUFBTUMsa0JBQWtCO1lBQ3RCLElBQUlELGdCQUFnQjtnQkFDbEI7WUFDRjtZQUNBSCxTQUFTLENBQUNLO2dCQUNSLElBQUlBLFVBQVVSLGVBQWUsS0FBS0EsbUJBQW1CUSxVQUFVUCxTQUFTLEtBQUtBLFdBQVc7b0JBQ3RGLE9BQU9PO2dCQUNUO2dCQUNBLE1BQU1KLFFBQVFKO2dCQUNkLElBQUlRLFVBQVVKLEtBQUssS0FBS0EsT0FBTztvQkFDN0IsT0FBT0k7Z0JBQ1Q7Z0JBQ0EsT0FBTztvQkFBRSxHQUFHQSxTQUFTO29CQUFFSjtnQkFBTTtZQUMvQjtRQUNGO1FBQ0EsTUFBTUssY0FBY1IsVUFBVU07UUFDOUJBO1FBQ0EsT0FBTztZQUNMRCxpQkFBaUI7WUFDakJHO1FBQ0Y7SUFDRixHQUFHO1FBQUNUO1FBQWlCQztLQUFVO0lBQy9CLE9BQU9JO0FBQ1QsRUFDQSw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC91c2Vfc3Vic2NyaXB0aW9uLmpzPzlmZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gdXNlU3Vic2NyaXB0aW9uKHtcbiAgLy8gKFN5bmNocm9ub3VzbHkpIHJldHVybnMgdGhlIGN1cnJlbnQgdmFsdWUgb2Ygb3VyIHN1YnNjcmlwdGlvbi5cbiAgZ2V0Q3VycmVudFZhbHVlLFxuICAvLyBUaGlzIGZ1bmN0aW9uIGlzIHBhc3NlZCBhbiBldmVudCBoYW5kbGVyIHRvIGF0dGFjaCB0byB0aGUgc3Vic2NyaXB0aW9uLlxuICAvLyBJdCBzaG91bGQgcmV0dXJuIGFuIHVuc3Vic2NyaWJlIGZ1bmN0aW9uIHRoYXQgcmVtb3ZlcyB0aGUgaGFuZGxlci5cbiAgc3Vic2NyaWJlXG59KSB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoKCkgPT4gKHtcbiAgICBnZXRDdXJyZW50VmFsdWUsXG4gICAgc3Vic2NyaWJlLFxuICAgIHZhbHVlOiBnZXRDdXJyZW50VmFsdWUoKVxuICB9KSk7XG4gIGxldCB2YWx1ZVRvUmV0dXJuID0gc3RhdGUudmFsdWU7XG4gIGlmIChzdGF0ZS5nZXRDdXJyZW50VmFsdWUgIT09IGdldEN1cnJlbnRWYWx1ZSB8fCBzdGF0ZS5zdWJzY3JpYmUgIT09IHN1YnNjcmliZSkge1xuICAgIHZhbHVlVG9SZXR1cm4gPSBnZXRDdXJyZW50VmFsdWUoKTtcbiAgICBzZXRTdGF0ZSh7XG4gICAgICBnZXRDdXJyZW50VmFsdWUsXG4gICAgICBzdWJzY3JpYmUsXG4gICAgICB2YWx1ZTogdmFsdWVUb1JldHVyblxuICAgIH0pO1xuICB9XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IGRpZFVuc3Vic2NyaWJlID0gZmFsc2U7XG4gICAgY29uc3QgY2hlY2tGb3JVcGRhdGVzID0gKCkgPT4ge1xuICAgICAgaWYgKGRpZFVuc3Vic2NyaWJlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNldFN0YXRlKChwcmV2U3RhdGUpID0+IHtcbiAgICAgICAgaWYgKHByZXZTdGF0ZS5nZXRDdXJyZW50VmFsdWUgIT09IGdldEN1cnJlbnRWYWx1ZSB8fCBwcmV2U3RhdGUuc3Vic2NyaWJlICE9PSBzdWJzY3JpYmUpIHtcbiAgICAgICAgICByZXR1cm4gcHJldlN0YXRlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZ2V0Q3VycmVudFZhbHVlKCk7XG4gICAgICAgIGlmIChwcmV2U3RhdGUudmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHByZXZTdGF0ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyAuLi5wcmV2U3RhdGUsIHZhbHVlIH07XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gc3Vic2NyaWJlKGNoZWNrRm9yVXBkYXRlcyk7XG4gICAgY2hlY2tGb3JVcGRhdGVzKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRpZFVuc3Vic2NyaWJlID0gdHJ1ZTtcbiAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfSwgW2dldEN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlXSk7XG4gIHJldHVybiB2YWx1ZVRvUmV0dXJuO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlX3N1YnNjcmlwdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZVN1YnNjcmlwdGlvbiIsImdldEN1cnJlbnRWYWx1ZSIsInN1YnNjcmliZSIsInN0YXRlIiwic2V0U3RhdGUiLCJ2YWx1ZSIsInZhbHVlVG9SZXR1cm4iLCJkaWRVbnN1YnNjcmliZSIsImNoZWNrRm9yVXBkYXRlcyIsInByZXZTdGF0ZSIsInVuc3Vic2NyaWJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/api.js":
/*!****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/api.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anyApi: () => (/* binding */ anyApi),\n/* harmony export */   filterApi: () => (/* binding */ filterApi),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   justActions: () => (/* binding */ justActions),\n/* harmony export */   justInternal: () => (/* binding */ justInternal),\n/* harmony export */   justMutations: () => (/* binding */ justMutations),\n/* harmony export */   justPaginatedQueries: () => (/* binding */ justPaginatedQueries),\n/* harmony export */   justPublic: () => (/* binding */ justPublic),\n/* harmony export */   justQueries: () => (/* binding */ justQueries),\n/* harmony export */   justSchedulable: () => (/* binding */ justSchedulable),\n/* harmony export */   makeFunctionReference: () => (/* binding */ makeFunctionReference)\n/* harmony export */ });\n\nconst functionName = Symbol.for(\"functionName\");\nfunction getFunctionName(functionReference) {\n    if (typeof functionReference === \"string\") return functionReference;\n    const name = functionReference[functionName];\n    if (!name) {\n        throw new Error(`${functionReference} is not a functionReference`);\n    }\n    return name;\n}\nfunction makeFunctionReference(name) {\n    return {\n        [functionName]: name\n    };\n}\nfunction createApi(pathParts = []) {\n    const handler = {\n        get (_, prop) {\n            if (typeof prop === \"string\") {\n                const newParts = [\n                    ...pathParts,\n                    prop\n                ];\n                return createApi(newParts);\n            } else if (prop === functionName) {\n                if (pathParts.length < 2) {\n                    const found = [\n                        \"api\",\n                        ...pathParts\n                    ].join(\".\");\n                    throw new Error(`API path is expected to be of the form \\`api.moduleName.functionName\\`. Found: \\`${found}\\``);\n                }\n                const path = pathParts.slice(0, -1).join(\"/\");\n                const exportName = pathParts[pathParts.length - 1];\n                if (exportName === \"default\") {\n                    return path;\n                } else {\n                    return path + \":\" + exportName;\n                }\n            } else if (prop === Symbol.toStringTag) {\n                return \"FunctionReference\";\n            } else {\n                return void 0;\n            }\n        }\n    };\n    return new Proxy({}, handler);\n}\nfunction filterApi(api) {\n    return api;\n}\nfunction justInternal(api) {\n    return api;\n}\nfunction justPublic(api) {\n    return api;\n}\nfunction justQueries(api) {\n    return api;\n}\nfunction justMutations(api) {\n    return api;\n}\nfunction justActions(api) {\n    return api;\n}\nfunction justPaginatedQueries(api) {\n    return api;\n}\nfunction justSchedulable(api) {\n    return api;\n}\nconst anyApi = createApi(); //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBYTtBQUNiLE1BQU1BLGVBQWVDLE9BQU9DLEdBQUcsQ0FBQztBQUN6QixTQUFTQyxnQkFBZ0JDLGlCQUFpQjtJQUMvQyxJQUFJLE9BQU9BLHNCQUFzQixVQUMvQixPQUFPQTtJQUNULE1BQU1DLE9BQU9ELGlCQUFpQixDQUFDSixhQUFhO0lBQzVDLElBQUksQ0FBQ0ssTUFBTTtRQUNULE1BQU0sSUFBSUMsTUFBTSxDQUFDLEVBQUVGLGtCQUFrQiwyQkFBMkIsQ0FBQztJQUNuRTtJQUNBLE9BQU9DO0FBQ1Q7QUFDTyxTQUFTRSxzQkFBc0JGLElBQUk7SUFDeEMsT0FBTztRQUFFLENBQUNMLGFBQWEsRUFBRUs7SUFBSztBQUNoQztBQUNBLFNBQVNHLFVBQVVDLFlBQVksRUFBRTtJQUMvQixNQUFNQyxVQUFVO1FBQ2RDLEtBQUlDLENBQUMsRUFBRUMsSUFBSTtZQUNULElBQUksT0FBT0EsU0FBUyxVQUFVO2dCQUM1QixNQUFNQyxXQUFXO3VCQUFJTDtvQkFBV0k7aUJBQUs7Z0JBQ3JDLE9BQU9MLFVBQVVNO1lBQ25CLE9BQU8sSUFBSUQsU0FBU2IsY0FBYztnQkFDaEMsSUFBSVMsVUFBVU0sTUFBTSxHQUFHLEdBQUc7b0JBQ3hCLE1BQU1DLFFBQVE7d0JBQUM7MkJBQVVQO3FCQUFVLENBQUNRLElBQUksQ0FBQztvQkFDekMsTUFBTSxJQUFJWCxNQUNSLENBQUMsaUZBQWlGLEVBQUVVLE1BQU0sRUFBRSxDQUFDO2dCQUVqRztnQkFDQSxNQUFNRSxPQUFPVCxVQUFVVSxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUdGLElBQUksQ0FBQztnQkFDekMsTUFBTUcsYUFBYVgsU0FBUyxDQUFDQSxVQUFVTSxNQUFNLEdBQUcsRUFBRTtnQkFDbEQsSUFBSUssZUFBZSxXQUFXO29CQUM1QixPQUFPRjtnQkFDVCxPQUFPO29CQUNMLE9BQU9BLE9BQU8sTUFBTUU7Z0JBQ3RCO1lBQ0YsT0FBTyxJQUFJUCxTQUFTWixPQUFPb0IsV0FBVyxFQUFFO2dCQUN0QyxPQUFPO1lBQ1QsT0FBTztnQkFDTCxPQUFPLEtBQUs7WUFDZDtRQUNGO0lBQ0Y7SUFDQSxPQUFPLElBQUlDLE1BQU0sQ0FBQyxHQUFHWjtBQUN2QjtBQUNPLFNBQVNhLFVBQVVDLEdBQUc7SUFDM0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNDLGFBQWFELEdBQUc7SUFDOUIsT0FBT0E7QUFDVDtBQUNPLFNBQVNFLFdBQVdGLEdBQUc7SUFDNUIsT0FBT0E7QUFDVDtBQUNPLFNBQVNHLFlBQVlILEdBQUc7SUFDN0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNJLGNBQWNKLEdBQUc7SUFDL0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNLLFlBQVlMLEdBQUc7SUFDN0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNNLHFCQUFxQk4sR0FBRztJQUN0QyxPQUFPQTtBQUNUO0FBQ08sU0FBU08sZ0JBQWdCUCxHQUFHO0lBQ2pDLE9BQU9BO0FBQ1Q7QUFDTyxNQUFNUSxTQUFTeEIsWUFBWSxDQUNsQywrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvYXBpLmpzPzZjMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBmdW5jdGlvbk5hbWUgPSBTeW1ib2wuZm9yKFwiZnVuY3Rpb25OYW1lXCIpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZ1bmN0aW9uTmFtZShmdW5jdGlvblJlZmVyZW5jZSkge1xuICBpZiAodHlwZW9mIGZ1bmN0aW9uUmVmZXJlbmNlID09PSBcInN0cmluZ1wiKVxuICAgIHJldHVybiBmdW5jdGlvblJlZmVyZW5jZTtcbiAgY29uc3QgbmFtZSA9IGZ1bmN0aW9uUmVmZXJlbmNlW2Z1bmN0aW9uTmFtZV07XG4gIGlmICghbmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtmdW5jdGlvblJlZmVyZW5jZX0gaXMgbm90IGEgZnVuY3Rpb25SZWZlcmVuY2VgKTtcbiAgfVxuICByZXR1cm4gbmFtZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlRnVuY3Rpb25SZWZlcmVuY2UobmFtZSkge1xuICByZXR1cm4geyBbZnVuY3Rpb25OYW1lXTogbmFtZSB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQXBpKHBhdGhQYXJ0cyA9IFtdKSB7XG4gIGNvbnN0IGhhbmRsZXIgPSB7XG4gICAgZ2V0KF8sIHByb3ApIHtcbiAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCBuZXdQYXJ0cyA9IFsuLi5wYXRoUGFydHMsIHByb3BdO1xuICAgICAgICByZXR1cm4gY3JlYXRlQXBpKG5ld1BhcnRzKTtcbiAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gZnVuY3Rpb25OYW1lKSB7XG4gICAgICAgIGlmIChwYXRoUGFydHMubGVuZ3RoIDwgMikge1xuICAgICAgICAgIGNvbnN0IGZvdW5kID0gW1wiYXBpXCIsIC4uLnBhdGhQYXJ0c10uam9pbihcIi5cIik7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgYEFQSSBwYXRoIGlzIGV4cGVjdGVkIHRvIGJlIG9mIHRoZSBmb3JtIFxcYGFwaS5tb2R1bGVOYW1lLmZ1bmN0aW9uTmFtZVxcYC4gRm91bmQ6IFxcYCR7Zm91bmR9XFxgYFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGF0aCA9IHBhdGhQYXJ0cy5zbGljZSgwLCAtMSkuam9pbihcIi9cIik7XG4gICAgICAgIGNvbnN0IGV4cG9ydE5hbWUgPSBwYXRoUGFydHNbcGF0aFBhcnRzLmxlbmd0aCAtIDFdO1xuICAgICAgICBpZiAoZXhwb3J0TmFtZSA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gcGF0aCArIFwiOlwiICsgZXhwb3J0TmFtZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChwcm9wID09PSBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiAgICAgICAgcmV0dXJuIFwiRnVuY3Rpb25SZWZlcmVuY2VcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICByZXR1cm4gbmV3IFByb3h5KHt9LCBoYW5kbGVyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJBcGkoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdEludGVybmFsKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RQdWJsaWMoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdFF1ZXJpZXMoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdE11dGF0aW9ucyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0QWN0aW9ucyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0UGFnaW5hdGVkUXVlcmllcyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0U2NoZWR1bGFibGUoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgY29uc3QgYW55QXBpID0gY3JlYXRlQXBpKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwXG4iXSwibmFtZXMiOlsiZnVuY3Rpb25OYW1lIiwiU3ltYm9sIiwiZm9yIiwiZ2V0RnVuY3Rpb25OYW1lIiwiZnVuY3Rpb25SZWZlcmVuY2UiLCJuYW1lIiwiRXJyb3IiLCJtYWtlRnVuY3Rpb25SZWZlcmVuY2UiLCJjcmVhdGVBcGkiLCJwYXRoUGFydHMiLCJoYW5kbGVyIiwiZ2V0IiwiXyIsInByb3AiLCJuZXdQYXJ0cyIsImxlbmd0aCIsImZvdW5kIiwiam9pbiIsInBhdGgiLCJzbGljZSIsImV4cG9ydE5hbWUiLCJ0b1N0cmluZ1RhZyIsIlByb3h5IiwiZmlsdGVyQXBpIiwiYXBpIiwianVzdEludGVybmFsIiwianVzdFB1YmxpYyIsImp1c3RRdWVyaWVzIiwianVzdE11dGF0aW9ucyIsImp1c3RBY3Rpb25zIiwianVzdFBhZ2luYXRlZFF1ZXJpZXMiLCJqdXN0U2NoZWR1bGFibGUiLCJhbnlBcGkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/cron.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/cron.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Crons: () => (/* binding */ Crons),\n/* harmony export */   cronJobs: () => (/* binding */ cronJobs)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\n\n\nconst DAYS_OF_WEEK = [\n    \"sunday\",\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\"\n];\nconst cronJobs = ()=>new Crons();\nfunction validateIntervalNumber(n) {\n    if (!Number.isInteger(n) || n <= 0) {\n        throw new Error(\"Interval must be an integer greater than 0\");\n    }\n}\nfunction validatedDayOfMonth(n) {\n    if (!Number.isInteger(n) || n < 1 || n > 31) {\n        throw new Error(\"Day of month must be an integer from 1 to 31\");\n    }\n    return n;\n}\nfunction validatedDayOfWeek(s) {\n    if (typeof s !== \"string\" || !DAYS_OF_WEEK.includes(s)) {\n        throw new Error('Day of week must be a string like \"monday\".');\n    }\n    return s;\n}\nfunction validatedHourOfDay(n) {\n    if (!Number.isInteger(n) || n < 0 || n > 23) {\n        throw new Error(\"Hour of day must be an integer from 0 to 23\");\n    }\n    return n;\n}\nfunction validatedMinuteOfHour(n) {\n    if (!Number.isInteger(n) || n < 0 || n > 59) {\n        throw new Error(\"Minute of hour must be an integer from 0 to 59\");\n    }\n    return n;\n}\nfunction validatedCronString(s) {\n    return s;\n}\nfunction validatedCronIdentifier(s) {\n    if (!s.match(/^[ -~]*$/)) {\n        throw new Error(`Invalid cron identifier ${s}: use ASCII letters that are not control characters`);\n    }\n    return s;\n}\nclass Crons {\n    constructor(){\n        this.isCrons = true;\n        this.crons = {};\n    }\n    /** @internal */ schedule(cronIdentifier, schedule, functionReference, args) {\n        const cronArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n        validatedCronIdentifier(cronIdentifier);\n        if (cronIdentifier in this.crons) {\n            throw new Error(`Cron identifier registered twice: ${cronIdentifier}`);\n        }\n        this.crons[cronIdentifier] = {\n            name: (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(functionReference),\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(cronArgs)\n            ],\n            schedule\n        };\n    }\n    /**\n   * Schedule a mutation or action to run on an hourly basis.\n   *\n   * ```js\n   * crons.interval(\"Clear presence data\", {seconds: 30}, api.presence.clear);\n   * ```\n   *\n   * @param identifier - A unique name for this scheduled job.\n   * @param schedule - The time between runs for this scheduled job.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ interval(cronIdentifier, schedule, functionReference, ...args) {\n        const s = schedule;\n        const hasSeconds = +(\"seconds\" in s && s.seconds !== void 0);\n        const hasMinutes = +(\"minutes\" in s && s.minutes !== void 0);\n        const hasHours = +(\"hours\" in s && s.hours !== void 0);\n        const total = hasSeconds + hasMinutes + hasHours;\n        if (total !== 1) {\n            throw new Error(\"Must specify one of seconds, minutes, or hours\");\n        }\n        if (hasSeconds) {\n            validateIntervalNumber(schedule.seconds);\n        } else if (hasMinutes) {\n            validateIntervalNumber(schedule.minutes);\n        } else if (hasHours) {\n            validateIntervalNumber(schedule.hours);\n        }\n        this.schedule(cronIdentifier, {\n            ...schedule,\n            type: \"interval\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a daily basis.\n   *\n   * ```js\n   * crons.daily(\n   *   \"Reset high scores\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ hourly(cronIdentifier, schedule, functionReference, ...args) {\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            minuteUTC,\n            type: \"hourly\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a daily basis.\n   *\n   * ```js\n   * crons.daily(\n   *   \"Reset high scores\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ daily(cronIdentifier, schedule, functionReference, ...args) {\n        const hourUTC = validatedHourOfDay(schedule.hourUTC);\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            hourUTC,\n            minuteUTC,\n            type: \"daily\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a weekly basis.\n   *\n   * ```js\n   * crons.weekly(\n   *   \"Weekly re-engagement email\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.emails.send\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each week to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   */ weekly(cronIdentifier, schedule, functionReference, ...args) {\n        const dayOfWeek = validatedDayOfWeek(schedule.dayOfWeek);\n        const hourUTC = validatedHourOfDay(schedule.hourUTC);\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            dayOfWeek,\n            hourUTC,\n            minuteUTC,\n            type: \"weekly\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a monthly basis.\n   *\n   * Note that some months have fewer days than others, so e.g. a function\n   * scheduled to run on the 30th will not run in February.\n   *\n   * ```js\n   * crons.monthly(\n   *   \"Bill customers at \",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *     day: 1,\n   *   },\n   *   api.billing.billCustomers\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each month to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ monthly(cronIdentifier, schedule, functionReference, ...args) {\n        const day = validatedDayOfMonth(schedule.day);\n        const hourUTC = validatedHourOfDay(schedule.hourUTC);\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            day,\n            hourUTC,\n            minuteUTC,\n            type: \"monthly\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a recurring basis.\n   *\n   * Like the unix command `cron`, Sunday is 0, Monday is 1, etc.\n   *\n   * ```\n   *  ┌─ minute (0 - 59)\n   *  │ ┌─ hour (0 - 23)\n   *  │ │ ┌─ day of the month (1 - 31)\n   *  │ │ │ ┌─ month (1 - 12)\n   *  │ │ │ │ ┌─ day of the week (0 - 6) (Sunday to Saturday)\n   * \"* * * * *\"\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param cron - Cron string like `\"15 7 * * *\"` (Every day at 7:15 UTC)\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ cron(cronIdentifier, cron, functionReference, ...args) {\n        const c = validatedCronString(cron);\n        this.schedule(cronIdentifier, {\n            cron: c,\n            type: \"cron\"\n        }, functionReference, ...args);\n    }\n    /** @internal */ export() {\n        return JSON.stringify(this.crons);\n    }\n} //# sourceMappingURL=cron.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/cron.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/database.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/database.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=database.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9kYXRhYmFzZS5qcyIsIm1hcHBpbmdzIjoiO0FBQWEsQ0FDYixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvZGF0YWJhc2UuanM/YzlhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGFiYXNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/database.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/filter_builder.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Expression: () => (/* binding */ Expression)\n/* harmony export */ });\n\nclass Expression {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9maWx0ZXJfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDTixNQUFNQTtJQUNYOztHQUVDLEdBQ0RDLGFBQWMsQ0FDZDtBQUNGLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ZpbHRlcl9idWlsZGVyLmpzP2JjMmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgY2xhc3MgRXhwcmVzc2lvbiB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWx0ZXJfYnVpbGRlci5qcy5tYXBcbiJdLCJuYW1lcyI6WyJFeHByZXNzaW9uIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/actions_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionCalls: () => (/* binding */ setupActionCalls)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\n\n\nfunction setupActionCalls(requestId) {\n    return {\n        runQuery: async (query, args)=>{\n            const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(query);\n            const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n            const syscallArgs = {\n                name,\n                args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(queryArgs),\n                version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n                requestId\n            };\n            const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/query\", syscallArgs);\n            return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result, false);\n        },\n        runMutation: async (mutation, args)=>{\n            const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(mutation);\n            const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n            const syscallArgs = {\n                name,\n                args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(mutationArgs),\n                version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n                requestId\n            };\n            const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/mutation\", syscallArgs);\n            return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result, false);\n        },\n        runAction: async (action, args)=>{\n            const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(action);\n            const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n            const syscallArgs = {\n                name,\n                args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(actionArgs),\n                version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n                requestId\n            };\n            const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/action\", syscallArgs);\n            return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result, false);\n        }\n    };\n} //# sourceMappingURL=actions_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2FjdGlvbnNfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNzRDtBQUMxQjtBQUNVO0FBQ0Q7QUFDSTtBQUMvQyxTQUFTTSxpQkFBaUJDLFNBQVM7SUFDeEMsT0FBTztRQUNMQyxVQUFVLE9BQU9DLE9BQU9DO1lBQ3RCLE1BQU1DLE9BQU9OLCtEQUFlQSxDQUFDSTtZQUM3QixNQUFNRyxZQUFZUiwyREFBU0EsQ0FBQ007WUFDNUIsTUFBTUcsY0FBYztnQkFDbEJGO2dCQUNBRCxNQUFNViw4REFBWUEsQ0FBQ1k7Z0JBQ25CVixPQUFPQSxnREFBQUE7Z0JBQ1BLO1lBQ0Y7WUFDQSxNQUFNTyxTQUFTLE1BQU1YLGdFQUFtQkEsQ0FDdEMscUJBQ0FVO1lBRUYsT0FBT1osOERBQVlBLENBQUNhLFFBQVE7UUFDOUI7UUFDQUMsYUFBYSxPQUFPQyxVQUFVTjtZQUM1QixNQUFNQyxPQUFPTiwrREFBZUEsQ0FBQ1c7WUFDN0IsTUFBTUMsZUFBZWIsMkRBQVNBLENBQUNNO1lBQy9CLE1BQU1HLGNBQWM7Z0JBQ2xCRjtnQkFDQUQsTUFBTVYsOERBQVlBLENBQUNpQjtnQkFDbkJmLE9BQU9BLGdEQUFBQTtnQkFDUEs7WUFDRjtZQUNBLE1BQU1PLFNBQVMsTUFBTVgsZ0VBQW1CQSxDQUN0Qyx3QkFDQVU7WUFFRixPQUFPWiw4REFBWUEsQ0FBQ2EsUUFBUTtRQUM5QjtRQUNBSSxXQUFXLE9BQU9DLFFBQVFUO1lBQ3hCLE1BQU1DLE9BQU9OLCtEQUFlQSxDQUFDYztZQUM3QixNQUFNQyxhQUFhaEIsMkRBQVNBLENBQUNNO1lBQzdCLE1BQU1HLGNBQWM7Z0JBQ2xCRjtnQkFDQUQsTUFBTVYsOERBQVlBLENBQUNvQjtnQkFDbkJsQixPQUFPQSxnREFBQUE7Z0JBQ1BLO1lBQ0Y7WUFDQSxNQUFNTyxTQUFTLE1BQU1YLGdFQUFtQkEsQ0FDdEMsc0JBQ0FVO1lBRUYsT0FBT1osOERBQVlBLENBQUNhLFFBQVE7UUFDOUI7SUFDRjtBQUNGLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvYWN0aW9uc19pbXBsLmpzPzAzYzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24sIGpzb25Ub0NvbnZleCB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tIFwiLi4vLi4vaW5kZXguanNcIjtcbmltcG9ydCB7IHBlcmZvcm1Bc3luY1N5c2NhbGwgfSBmcm9tIFwiLi9zeXNjYWxsLmpzXCI7XG5pbXBvcnQgeyBwYXJzZUFyZ3MgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBnZXRGdW5jdGlvbk5hbWUgfSBmcm9tIFwiLi4vLi4vc2VydmVyL2FwaS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwQWN0aW9uQ2FsbHMocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgcnVuUXVlcnk6IGFzeW5jIChxdWVyeSwgYXJncykgPT4ge1xuICAgICAgY29uc3QgbmFtZSA9IGdldEZ1bmN0aW9uTmFtZShxdWVyeSk7XG4gICAgICBjb25zdCBxdWVyeUFyZ3MgPSBwYXJzZUFyZ3MoYXJncyk7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYXJnczogY29udmV4VG9Kc29uKHF1ZXJ5QXJncyksXG4gICAgICAgIHZlcnNpb24sXG4gICAgICAgIHJlcXVlc3RJZFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXG4gICAgICAgIFwiMS4wL2FjdGlvbnMvcXVlcnlcIixcbiAgICAgICAgc3lzY2FsbEFyZ3NcbiAgICAgICk7XG4gICAgICByZXR1cm4ganNvblRvQ29udmV4KHJlc3VsdCwgZmFsc2UpO1xuICAgIH0sXG4gICAgcnVuTXV0YXRpb246IGFzeW5jIChtdXRhdGlvbiwgYXJncykgPT4ge1xuICAgICAgY29uc3QgbmFtZSA9IGdldEZ1bmN0aW9uTmFtZShtdXRhdGlvbik7XG4gICAgICBjb25zdCBtdXRhdGlvbkFyZ3MgPSBwYXJzZUFyZ3MoYXJncyk7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYXJnczogY29udmV4VG9Kc29uKG11dGF0aW9uQXJncyksXG4gICAgICAgIHZlcnNpb24sXG4gICAgICAgIHJlcXVlc3RJZFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXG4gICAgICAgIFwiMS4wL2FjdGlvbnMvbXV0YXRpb25cIixcbiAgICAgICAgc3lzY2FsbEFyZ3NcbiAgICAgICk7XG4gICAgICByZXR1cm4ganNvblRvQ29udmV4KHJlc3VsdCwgZmFsc2UpO1xuICAgIH0sXG4gICAgcnVuQWN0aW9uOiBhc3luYyAoYWN0aW9uLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBuYW1lID0gZ2V0RnVuY3Rpb25OYW1lKGFjdGlvbik7XG4gICAgICBjb25zdCBhY3Rpb25BcmdzID0gcGFyc2VBcmdzKGFyZ3MpO1xuICAgICAgY29uc3Qgc3lzY2FsbEFyZ3MgPSB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGFyZ3M6IGNvbnZleFRvSnNvbihhY3Rpb25BcmdzKSxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgcmVxdWVzdElkXG4gICAgICB9O1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcbiAgICAgICAgXCIxLjAvYWN0aW9ucy9hY3Rpb25cIixcbiAgICAgICAgc3lzY2FsbEFyZ3NcbiAgICAgICk7XG4gICAgICByZXR1cm4ganNvblRvQ29udmV4KHJlc3VsdCwgZmFsc2UpO1xuICAgIH1cbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjdGlvbnNfaW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjb252ZXhUb0pzb24iLCJqc29uVG9Db252ZXgiLCJ2ZXJzaW9uIiwicGVyZm9ybUFzeW5jU3lzY2FsbCIsInBhcnNlQXJncyIsImdldEZ1bmN0aW9uTmFtZSIsInNldHVwQWN0aW9uQ2FsbHMiLCJyZXF1ZXN0SWQiLCJydW5RdWVyeSIsInF1ZXJ5IiwiYXJncyIsIm5hbWUiLCJxdWVyeUFyZ3MiLCJzeXNjYWxsQXJncyIsInJlc3VsdCIsInJ1bk11dGF0aW9uIiwibXV0YXRpb24iLCJtdXRhdGlvbkFyZ3MiLCJydW5BY3Rpb24iLCJhY3Rpb24iLCJhY3Rpb25BcmdzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/authentication_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupAuth: () => (/* binding */ setupAuth)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\n\nfunction setupAuth(requestId) {\n    return {\n        getUserIdentity: async ()=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/getUserIdentity\", {\n                requestId\n            });\n        }\n    };\n} //# sourceMappingURL=authentication_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2F1dGhlbnRpY2F0aW9uX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNzQztBQUM1QyxTQUFTQyxVQUFVQyxTQUFTO0lBQ2pDLE9BQU87UUFDTEMsaUJBQWlCO1lBQ2YsT0FBTyxNQUFNSCxnRUFBbUJBLENBQUMsdUJBQXVCO2dCQUN0REU7WUFDRjtRQUNGO0lBQ0Y7QUFDRixFQUNBLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2F1dGhlbnRpY2F0aW9uX2ltcGwuanM/Njg5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IHBlcmZvcm1Bc3luY1N5c2NhbGwgfSBmcm9tIFwiLi9zeXNjYWxsLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBBdXRoKHJlcXVlc3RJZCkge1xuICByZXR1cm4ge1xuICAgIGdldFVzZXJJZGVudGl0eTogYXN5bmMgKCkgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvZ2V0VXNlcklkZW50aXR5XCIsIHtcbiAgICAgICAgcmVxdWVzdElkXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoZW50aWNhdGlvbl9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbInBlcmZvcm1Bc3luY1N5c2NhbGwiLCJzZXR1cEF1dGgiLCJyZXF1ZXN0SWQiLCJnZXRVc2VySWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/database_impl.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupReader: () => (/* binding */ setupReader),\n/* harmony export */   setupWriter: () => (/* binding */ setupWriter)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\n\n\n\n\nfunction setupReader() {\n    const reader = (isSystem = false)=>{\n        return {\n            get: async (id)=>{\n                (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"get\", \"id\");\n                if (typeof id !== \"string\") {\n                    throw new Error(`Invalid argument \\`id\\` for \\`db.get\\`, expected string but got '${typeof id}': ${id}`);\n                }\n                const args = {\n                    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n                    isSystem,\n                    version: _index_js__WEBPACK_IMPORTED_MODULE_4__.version\n                };\n                const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/get\", args);\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, true);\n            },\n            query: (tableName)=>{\n                const accessingSystemTable = tableName.startsWith(\"_\");\n                if (accessingSystemTable !== isSystem) {\n                    throw new Error(`${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${isSystem ? \"\" : \"system.\"}query().`);\n                }\n                return new _query_impl_js__WEBPACK_IMPORTED_MODULE_2__.QueryInitializerImpl(tableName);\n            },\n            normalizeId: (tableName, id)=>{\n                (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"normalizeId\", \"tableName\");\n                (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 2, \"normalizeId\", \"id\");\n                const accessingSystemTable = tableName.startsWith(\"_\");\n                if (accessingSystemTable !== isSystem) {\n                    throw new Error(`${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${isSystem ? \"\" : \"system.\"}normalizeId().`);\n                }\n                const syscallJSON = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/db/normalizeId\", {\n                    table: tableName,\n                    idString: id\n                });\n                const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, false);\n                return syscallResult.id;\n            },\n            // We set the system reader on the next line\n            system: null\n        };\n    };\n    const { system: _, ...rest } = reader(true);\n    const r = reader();\n    r.system = rest;\n    return r;\n}\nfunction setupWriter() {\n    const reader = setupReader();\n    return {\n        get: reader.get,\n        query: reader.query,\n        normalizeId: reader.normalizeId,\n        system: reader.system,\n        insert: async (table, value)=>{\n            if (table.startsWith(\"_\")) {\n                throw new Error(\"System tables (prefixed with `_`) are read-only.\");\n            }\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(table, 1, \"insert\", \"table\");\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"insert\", \"value\");\n            const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/insert\", {\n                table,\n                value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n            });\n            const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, false);\n            return syscallResult._id;\n        },\n        patch: async (id, value)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"patch\", \"id\");\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"patch\", \"value\");\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/shallowMerge\", {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n                value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_5__.patchValueToJson)(value)\n            });\n        },\n        replace: async (id, value)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"replace\", \"id\");\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"replace\", \"value\");\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/replace\", {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n                value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n            });\n        },\n        delete: async (id)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"delete\", \"id\");\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/remove\", {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id)\n            });\n        }\n    };\n} //# sourceMappingURL=database_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js\");\n\n\n\nclass ExpressionImpl extends _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.Expression {\n    constructor(inner){\n        super();\n        this.inner = inner;\n    }\n    serialize() {\n        return this.inner;\n    }\n}\nfunction serializeExpression(expr) {\n    if (expr instanceof ExpressionImpl) {\n        return expr.serialize();\n    } else {\n        return {\n            $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(expr)\n        };\n    }\n}\nconst filterBuilderImpl = {\n    //  Comparisons  /////////////////////////////////////////////////////////////\n    eq (l, r) {\n        return new ExpressionImpl({\n            $eq: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    neq (l, r) {\n        return new ExpressionImpl({\n            $neq: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    lt (l, r) {\n        return new ExpressionImpl({\n            $lt: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    lte (l, r) {\n        return new ExpressionImpl({\n            $lte: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    gt (l, r) {\n        return new ExpressionImpl({\n            $gt: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    gte (l, r) {\n        return new ExpressionImpl({\n            $gte: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    //  Arithmetic  //////////////////////////////////////////////////////////////\n    add (l, r) {\n        return new ExpressionImpl({\n            $add: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    sub (l, r) {\n        return new ExpressionImpl({\n            $sub: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    mul (l, r) {\n        return new ExpressionImpl({\n            $mul: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    div (l, r) {\n        return new ExpressionImpl({\n            $div: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    mod (l, r) {\n        return new ExpressionImpl({\n            $mod: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    neg (x) {\n        return new ExpressionImpl({\n            $neg: serializeExpression(x)\n        });\n    },\n    //  Logic  ///////////////////////////////////////////////////////////////////\n    and (...exprs) {\n        return new ExpressionImpl({\n            $and: exprs.map(serializeExpression)\n        });\n    },\n    or (...exprs) {\n        return new ExpressionImpl({\n            $or: exprs.map(serializeExpression)\n        });\n    },\n    not (x) {\n        return new ExpressionImpl({\n            $not: serializeExpression(x)\n        });\n    },\n    //  Other  ///////////////////////////////////////////////////////////////////\n    field (fieldPath) {\n        return new ExpressionImpl({\n            $field: fieldPath\n        });\n    }\n}; //# sourceMappingURL=filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUNtRDtBQUdsQztBQUN2QixNQUFNRSx1QkFBdUJELDBEQUFVQTtJQUM1Q0UsWUFBWUMsS0FBSyxDQUFFO1FBQ2pCLEtBQUs7UUFDTCxJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDZjtJQUNBQyxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUNELEtBQUs7SUFDbkI7QUFDRjtBQUNPLFNBQVNFLG9CQUFvQkMsSUFBSTtJQUN0QyxJQUFJQSxnQkFBZ0JMLGdCQUFnQjtRQUNsQyxPQUFPSyxLQUFLRixTQUFTO0lBQ3ZCLE9BQU87UUFDTCxPQUFPO1lBQUVHLFVBQVVSLHlFQUF1QkEsQ0FBQ087UUFBTTtJQUNuRDtBQUNGO0FBQ08sTUFBTUUsb0JBQW9CO0lBQy9CLDhFQUE4RTtJQUM5RUMsSUFBR0MsQ0FBQyxFQUFFQyxDQUFDO1FBQ0wsT0FBTyxJQUFJVixlQUFlO1lBQ3hCVyxLQUFLO2dCQUFDUCxvQkFBb0JLO2dCQUFJTCxvQkFBb0JNO2FBQUc7UUFDdkQ7SUFDRjtJQUNBRSxLQUFJSCxDQUFDLEVBQUVDLENBQUM7UUFDTixPQUFPLElBQUlWLGVBQWU7WUFDeEJhLE1BQU07Z0JBQUNULG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FJLElBQUdMLENBQUMsRUFBRUMsQ0FBQztRQUNMLE9BQU8sSUFBSVYsZUFBZTtZQUN4QmUsS0FBSztnQkFBQ1gsb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3ZEO0lBQ0Y7SUFDQU0sS0FBSVAsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCaUIsTUFBTTtnQkFBQ2Isb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3hEO0lBQ0Y7SUFDQVEsSUFBR1QsQ0FBQyxFQUFFQyxDQUFDO1FBQ0wsT0FBTyxJQUFJVixlQUFlO1lBQ3hCbUIsS0FBSztnQkFBQ2Ysb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3ZEO0lBQ0Y7SUFDQVUsS0FBSVgsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCcUIsTUFBTTtnQkFBQ2pCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0EsOEVBQThFO0lBQzlFWSxLQUFJYixDQUFDLEVBQUVDLENBQUM7UUFDTixPQUFPLElBQUlWLGVBQWU7WUFDeEJ1QixNQUFNO2dCQUFDbkIsb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3hEO0lBQ0Y7SUFDQWMsS0FBSWYsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCeUIsTUFBTTtnQkFBQ3JCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FnQixLQUFJakIsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCMkIsTUFBTTtnQkFBQ3ZCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FrQixLQUFJbkIsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCNkIsTUFBTTtnQkFBQ3pCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FvQixLQUFJckIsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCK0IsTUFBTTtnQkFBQzNCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FzQixLQUFJQyxDQUFDO1FBQ0gsT0FBTyxJQUFJakMsZUFBZTtZQUFFa0MsTUFBTTlCLG9CQUFvQjZCO1FBQUc7SUFDM0Q7SUFDQSw4RUFBOEU7SUFDOUVFLEtBQUksR0FBR0MsS0FBSztRQUNWLE9BQU8sSUFBSXBDLGVBQWU7WUFBRXFDLE1BQU1ELE1BQU1FLEdBQUcsQ0FBQ2xDO1FBQXFCO0lBQ25FO0lBQ0FtQyxJQUFHLEdBQUdILEtBQUs7UUFDVCxPQUFPLElBQUlwQyxlQUFlO1lBQUV3QyxLQUFLSixNQUFNRSxHQUFHLENBQUNsQztRQUFxQjtJQUNsRTtJQUNBcUMsS0FBSVIsQ0FBQztRQUNILE9BQU8sSUFBSWpDLGVBQWU7WUFBRTBDLE1BQU10QyxvQkFBb0I2QjtRQUFHO0lBQzNEO0lBQ0EsOEVBQThFO0lBQzlFVSxPQUFNQyxTQUFTO1FBQ2IsT0FBTyxJQUFJNUMsZUFBZTtZQUFFNkMsUUFBUUQ7UUFBVTtJQUNoRDtBQUNGLEVBQUUsQ0FDRiwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC9maWx0ZXJfYnVpbGRlcl9pbXBsLmpzP2RiNmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhPclVuZGVmaW5lZFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvdmFsdWUuanNcIjtcbmltcG9ydCB7XG4gIEV4cHJlc3Npb25cbn0gZnJvbSBcIi4uL2ZpbHRlcl9idWlsZGVyLmpzXCI7XG5leHBvcnQgY2xhc3MgRXhwcmVzc2lvbkltcGwgZXh0ZW5kcyBFeHByZXNzaW9uIHtcbiAgY29uc3RydWN0b3IoaW5uZXIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuaW5uZXIgPSBpbm5lcjtcbiAgfVxuICBzZXJpYWxpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5uZXI7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVFeHByZXNzaW9uKGV4cHIpIHtcbiAgaWYgKGV4cHIgaW5zdGFuY2VvZiBFeHByZXNzaW9uSW1wbCkge1xuICAgIHJldHVybiBleHByLnNlcmlhbGl6ZSgpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7ICRsaXRlcmFsOiBjb252ZXhPclVuZGVmaW5lZFRvSnNvbihleHByKSB9O1xuICB9XG59XG5leHBvcnQgY29uc3QgZmlsdGVyQnVpbGRlckltcGwgPSB7XG4gIC8vICBDb21wYXJpc29ucyAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBlcShsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkZXE6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBuZXEobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJG5lcTogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIGx0KGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRsdDogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIGx0ZShsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbHRlOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgZ3QobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGd0OiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgZ3RlKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRndGU6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICAvLyAgQXJpdGhtZXRpYyAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgYWRkKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRhZGQ6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBzdWIobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJHN1YjogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG11bChsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbXVsOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgZGl2KGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRkaXY6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBtb2QobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJG1vZDogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG5lZyh4KSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRuZWc6IHNlcmlhbGl6ZUV4cHJlc3Npb24oeCkgfSk7XG4gIH0sXG4gIC8vICBMb2dpYyAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBhbmQoLi4uZXhwcnMpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHsgJGFuZDogZXhwcnMubWFwKHNlcmlhbGl6ZUV4cHJlc3Npb24pIH0pO1xuICB9LFxuICBvciguLi5leHBycykge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkb3I6IGV4cHJzLm1hcChzZXJpYWxpemVFeHByZXNzaW9uKSB9KTtcbiAgfSxcbiAgbm90KHgpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHsgJG5vdDogc2VyaWFsaXplRXhwcmVzc2lvbih4KSB9KTtcbiAgfSxcbiAgLy8gIE90aGVyICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGZpZWxkKGZpZWxkUGF0aCkge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkZmllbGQ6IGZpZWxkUGF0aCB9KTtcbiAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbHRlcl9idWlsZGVyX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOlsiY29udmV4T3JVbmRlZmluZWRUb0pzb24iLCJFeHByZXNzaW9uIiwiRXhwcmVzc2lvbkltcGwiLCJjb25zdHJ1Y3RvciIsImlubmVyIiwic2VyaWFsaXplIiwic2VyaWFsaXplRXhwcmVzc2lvbiIsImV4cHIiLCIkbGl0ZXJhbCIsImZpbHRlckJ1aWxkZXJJbXBsIiwiZXEiLCJsIiwiciIsIiRlcSIsIm5lcSIsIiRuZXEiLCJsdCIsIiRsdCIsImx0ZSIsIiRsdGUiLCJndCIsIiRndCIsImd0ZSIsIiRndGUiLCJhZGQiLCIkYWRkIiwic3ViIiwiJHN1YiIsIm11bCIsIiRtdWwiLCJkaXYiLCIkZGl2IiwibW9kIiwiJG1vZCIsIm5lZyIsIngiLCIkbmVnIiwiYW5kIiwiZXhwcnMiLCIkYW5kIiwibWFwIiwib3IiLCIkb3IiLCJub3QiLCIkbm90IiwiZmllbGQiLCJmaWVsZFBhdGgiLCIkZmllbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRangeBuilderImpl: () => (/* binding */ IndexRangeBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index_range_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js\");\n\n\n\n\nclass IndexRangeBuilderImpl extends _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__.IndexRange {\n    constructor(rangeExpressions){\n        super();\n        this.rangeExpressions = rangeExpressions;\n        this.isConsumed = false;\n    }\n    static new() {\n        return new IndexRangeBuilderImpl([]);\n    }\n    consume() {\n        if (this.isConsumed) {\n            throw new Error(\"IndexRangeBuilder has already been used! Chain your method calls like `q => q.eq(...).eq(...)`. See https://docs.convex.dev/using/indexes\");\n        }\n        this.isConsumed = true;\n    }\n    eq(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Eq\",\n            fieldPath: fieldName,\n            value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_1__.convexOrUndefinedToJson)(value)\n        }));\n    }\n    gt(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Gt\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    gte(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Gte\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    lt(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Lt\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    lte(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Lte\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    export() {\n        this.consume();\n        return this.rangeExpressions;\n    }\n} //# sourceMappingURL=index_range_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2luZGV4X3JhbmdlX2J1aWxkZXJfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFDd0M7QUFDVztBQUc3QjtBQUM1QixNQUFNRyw4QkFBOEJELCtEQUFVQTtJQUNuREUsWUFBWUMsZ0JBQWdCLENBQUU7UUFDNUIsS0FBSztRQUNMLElBQUksQ0FBQ0EsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0MsVUFBVSxHQUFHO0lBQ3BCO0lBQ0EsT0FBT0MsTUFBTTtRQUNYLE9BQU8sSUFBSUosc0JBQXNCLEVBQUU7SUFDckM7SUFDQUssVUFBVTtRQUNSLElBQUksSUFBSSxDQUFDRixVQUFVLEVBQUU7WUFDbkIsTUFBTSxJQUFJRyxNQUNSO1FBRUo7UUFDQSxJQUFJLENBQUNILFVBQVUsR0FBRztJQUNwQjtJQUNBSSxHQUFHQyxTQUFTLEVBQUVDLEtBQUssRUFBRTtRQUNuQixJQUFJLENBQUNKLE9BQU87UUFDWixPQUFPLElBQUlMLHNCQUNULElBQUksQ0FBQ0UsZ0JBQWdCLENBQUNRLE1BQU0sQ0FBQztZQUMzQkMsTUFBTTtZQUNOQyxXQUFXSjtZQUNYQyxPQUFPWCx5RUFBdUJBLENBQUNXO1FBQ2pDO0lBRUo7SUFDQUksR0FBR0wsU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDbkIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQUssSUFBSU4sU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDcEIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQU0sR0FBR1AsU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDbkIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQU8sSUFBSVIsU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDcEIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQVEsU0FBUztRQUNQLElBQUksQ0FBQ1osT0FBTztRQUNaLE9BQU8sSUFBSSxDQUFDSCxnQkFBZ0I7SUFDOUI7QUFDRixFQUNBLG9EQUFvRCIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2luZGV4X3JhbmdlX2J1aWxkZXJfaW1wbC5qcz8xNjg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29udmV4VG9Kc29uIH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgY29udmV4T3JVbmRlZmluZWRUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5pbXBvcnQge1xuICBJbmRleFJhbmdlXG59IGZyb20gXCIuLi9pbmRleF9yYW5nZV9idWlsZGVyLmpzXCI7XG5leHBvcnQgY2xhc3MgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsIGV4dGVuZHMgSW5kZXhSYW5nZSB7XG4gIGNvbnN0cnVjdG9yKHJhbmdlRXhwcmVzc2lvbnMpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucyA9IHJhbmdlRXhwcmVzc2lvbnM7XG4gICAgdGhpcy5pc0NvbnN1bWVkID0gZmFsc2U7XG4gIH1cbiAgc3RhdGljIG5ldygpIHtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChbXSk7XG4gIH1cbiAgY29uc3VtZSgpIHtcbiAgICBpZiAodGhpcy5pc0NvbnN1bWVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiSW5kZXhSYW5nZUJ1aWxkZXIgaGFzIGFscmVhZHkgYmVlbiB1c2VkISBDaGFpbiB5b3VyIG1ldGhvZCBjYWxscyBsaWtlIGBxID0+IHEuZXEoLi4uKS5lcSguLi4pYC4gU2VlIGh0dHBzOi8vZG9jcy5jb252ZXguZGV2L3VzaW5nL2luZGV4ZXNcIlxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy5pc0NvbnN1bWVkID0gdHJ1ZTtcbiAgfVxuICBlcShmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIG5ldyBJbmRleFJhbmdlQnVpbGRlckltcGwoXG4gICAgICB0aGlzLnJhbmdlRXhwcmVzc2lvbnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJFcVwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uKHZhbHVlKVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGd0KGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkd0XCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4VG9Kc29uKHZhbHVlKVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGd0ZShmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIG5ldyBJbmRleFJhbmdlQnVpbGRlckltcGwoXG4gICAgICB0aGlzLnJhbmdlRXhwcmVzc2lvbnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJHdGVcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgbHQoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiTHRcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgbHRlKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkx0ZVwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBleHBvcnQoKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIHRoaXMucmFuZ2VFeHByZXNzaW9ucztcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXhfcmFuZ2VfYnVpbGRlcl9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNvbnZleFRvSnNvbiIsImNvbnZleE9yVW5kZWZpbmVkVG9Kc29uIiwiSW5kZXhSYW5nZSIsIkluZGV4UmFuZ2VCdWlsZGVySW1wbCIsImNvbnN0cnVjdG9yIiwicmFuZ2VFeHByZXNzaW9ucyIsImlzQ29uc3VtZWQiLCJuZXciLCJjb25zdW1lIiwiRXJyb3IiLCJlcSIsImZpZWxkTmFtZSIsInZhbHVlIiwiY29uY2F0IiwidHlwZSIsImZpZWxkUGF0aCIsImd0IiwiZ3RlIiwibHQiLCJsdGUiLCJleHBvcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/query_impl.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryImpl: () => (/* binding */ QueryImpl),\n/* harmony export */   QueryInitializerImpl: () => (/* binding */ QueryInitializerImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\");\n/* harmony import */ var _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index_range_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\");\n/* harmony import */ var _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search_filter_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n\n\n\n\n\n\n\n\nclass QueryInitializerImpl {\n    constructor(tableName){\n        this.tableName = tableName;\n    }\n    withIndex(indexName, indexRange) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withIndex\", \"indexName\");\n        let rangeBuilder = _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__.IndexRangeBuilderImpl.new();\n        if (indexRange !== void 0) {\n            rangeBuilder = indexRange(rangeBuilder);\n        }\n        return new QueryImpl({\n            source: {\n                type: \"IndexRange\",\n                indexName: this.tableName + \".\" + indexName,\n                range: rangeBuilder.export(),\n                order: null\n            },\n            operators: []\n        });\n    }\n    withSearchIndex(indexName, searchFilter) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withSearchIndex\", \"indexName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(searchFilter, 2, \"withSearchIndex\", \"searchFilter\");\n        const searchFilterBuilder = _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__.SearchFilterBuilderImpl.new();\n        return new QueryImpl({\n            source: {\n                type: \"Search\",\n                indexName: this.tableName + \".\" + indexName,\n                filters: searchFilter(searchFilterBuilder).export()\n            },\n            operators: []\n        });\n    }\n    fullTableScan() {\n        return new QueryImpl({\n            source: {\n                type: \"FullTableScan\",\n                tableName: this.tableName,\n                order: null\n            },\n            operators: []\n        });\n    }\n    order(order) {\n        return this.fullTableScan().order(order);\n    }\n    // This is internal API and should not be exposed to developers yet.\n    async count() {\n        const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/count\", {\n            table: this.tableName\n        });\n        const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, false);\n        return syscallResult;\n    }\n    filter(predicate) {\n        return this.fullTableScan().filter(predicate);\n    }\n    limit(n) {\n        return this.fullTableScan().limit(n);\n    }\n    collect() {\n        return this.fullTableScan().collect();\n    }\n    take(n) {\n        return this.fullTableScan().take(n);\n    }\n    paginate(paginationOpts) {\n        return this.fullTableScan().paginate(paginationOpts);\n    }\n    first() {\n        return this.fullTableScan().first();\n    }\n    unique() {\n        return this.fullTableScan().unique();\n    }\n    [Symbol.asyncIterator]() {\n        return this.fullTableScan()[Symbol.asyncIterator]();\n    }\n}\nfunction throwClosedError(type) {\n    throw new Error(type === \"consumed\" ? \"This query is closed and can't emit any more values.\" : \"This query has been chained with another operator and can't be reused.\");\n}\nclass QueryImpl {\n    constructor(query){\n        this.state = {\n            type: \"preparing\",\n            query\n        };\n    }\n    takeQuery() {\n        if (this.state.type !== \"preparing\") {\n            throw new Error(\"A query can only be chained once and can't be chained after iteration begins.\");\n        }\n        const query = this.state.query;\n        this.state = {\n            type: \"closed\"\n        };\n        return query;\n    }\n    startQuery() {\n        if (this.state.type === \"executing\") {\n            throw new Error(\"Iteration can only begin on a query once.\");\n        }\n        if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n            throwClosedError(this.state.type);\n        }\n        const query = this.state.query;\n        const { queryId } = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryStream\", {\n            query,\n            version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version\n        });\n        this.state = {\n            type: \"executing\",\n            queryId\n        };\n        return queryId;\n    }\n    closeQuery() {\n        if (this.state.type === \"executing\") {\n            const queryId = this.state.queryId;\n            (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryCleanup\", {\n                queryId\n            });\n        }\n        this.state = {\n            type: \"consumed\"\n        };\n    }\n    order(order) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(order, 1, \"order\", \"order\");\n        const query = this.takeQuery();\n        if (query.source.type === \"Search\") {\n            throw new Error(\"Search queries must always be in relevance order. Can not set order manually.\");\n        }\n        if (query.source.order !== null) {\n            throw new Error(\"Queries may only specify order at most once\");\n        }\n        query.source.order = order;\n        return new QueryImpl(query);\n    }\n    filter(predicate) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(predicate, 1, \"filter\", \"predicate\");\n        const query = this.takeQuery();\n        query.operators.push({\n            filter: (0,_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.serializeExpression)(predicate(_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.filterBuilderImpl))\n        });\n        return new QueryImpl(query);\n    }\n    limit(n) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"limit\", \"n\");\n        const query = this.takeQuery();\n        query.operators.push({\n            limit: n\n        });\n        return new QueryImpl(query);\n    }\n    [Symbol.asyncIterator]() {\n        this.startQuery();\n        return this;\n    }\n    async next() {\n        if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n            throwClosedError(this.state.type);\n        }\n        const queryId = this.state.type === \"preparing\" ? this.startQuery() : this.state.queryId;\n        const { value, done } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryStreamNext\", {\n            queryId\n        });\n        if (done) {\n            this.closeQuery();\n        }\n        const convexValue = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(value, true);\n        return {\n            value: convexValue,\n            done\n        };\n    }\n    return() {\n        this.closeQuery();\n        return Promise.resolve({\n            done: true,\n            value: void 0\n        });\n    }\n    async paginate(paginationOpts) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(paginationOpts, 1, \"paginate\", \"options\");\n        if (typeof paginationOpts?.numItems !== \"number\" || paginationOpts.numItems < 0) {\n            throw new Error(`\\`options.numItems\\` must be a positive number. Received \\`${paginationOpts?.numItems}\\`.`);\n        }\n        const query = this.takeQuery();\n        const pageSize = paginationOpts.numItems;\n        const cursor = paginationOpts.cursor;\n        const endCursor = paginationOpts?.endCursor ?? null;\n        const maximumRowsRead = paginationOpts.maximumRowsRead ?? null;\n        const { page, isDone, continueCursor, splitCursor, pageStatus } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryPage\", {\n            query,\n            cursor,\n            endCursor,\n            pageSize,\n            maximumRowsRead,\n            maximumBytesRead: paginationOpts.maximumBytesRead,\n            version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version\n        });\n        return {\n            page: page.map((json)=>(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(json, true)),\n            isDone,\n            continueCursor,\n            splitCursor,\n            pageStatus\n        };\n    }\n    async collect() {\n        const out = [];\n        for await (const item of this){\n            out.push(item);\n        }\n        return out;\n    }\n    async take(n) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"take\", \"n\");\n        return this.limit(n).collect();\n    }\n    async first() {\n        const first_array = await this.take(1);\n        return first_array.length === 0 ? null : first_array[0];\n    }\n    async unique() {\n        const first_two_array = await this.take(2);\n        if (first_two_array.length === 0) {\n            return null;\n        }\n        if (first_two_array.length === 2) {\n            throw new Error(\"unique() query returned more than one result\");\n        }\n        return first_two_array[0];\n    }\n} //# sourceMappingURL=query_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/registration_impl.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionGeneric: () => (/* binding */ actionGeneric),\n/* harmony export */   httpActionGeneric: () => (/* binding */ httpActionGeneric),\n/* harmony export */   internalActionGeneric: () => (/* binding */ internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* binding */ internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* binding */ internalQueryGeneric),\n/* harmony export */   mutationGeneric: () => (/* binding */ mutationGeneric),\n/* harmony export */   queryGeneric: () => (/* binding */ queryGeneric)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _actions_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\");\n/* harmony import */ var _vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vector_search_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\");\n/* harmony import */ var _authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\");\n/* harmony import */ var _database_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./database_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./query_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scheduler_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\");\n/* harmony import */ var _storage_impl_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./storage_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\");\n\n\n\n\n\n\n\n\n\nasync function invokeMutation(func, argsStr) {\n    const requestId = \"\";\n    const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr), false);\n    const mutationCtx = {\n        db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupWriter)(),\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageWriter)(requestId),\n        scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupMutationScheduler)()\n    };\n    const result = await invokeFunction(func, mutationCtx, args);\n    validateReturnValue(result);\n    return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nfunction validateReturnValue(v2) {\n    if (v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryInitializerImpl || v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryImpl) {\n        throw new Error(\"Return value is a Query. Results must be retrieved with `.collect()`, `.take(n), `.unique()`, or `.first()`.\");\n    }\n}\nasync function invokeFunction(func, ctx, args) {\n    let result;\n    try {\n        result = await Promise.resolve(func(ctx, ...args));\n    } catch (thrown) {\n        throw serializeConvexErrorData(thrown);\n    }\n    return result;\n}\nfunction serializeConvexErrorData(thrown) {\n    if (typeof thrown === \"object\" && thrown !== null && Symbol.for(\"ConvexError\") in thrown) {\n        const error = thrown;\n        error.data = JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(error.data === void 0 ? null : error.data));\n        error.ConvexErrorSymbol = Symbol.for(\"ConvexError\");\n        return error;\n    } else {\n        return thrown;\n    }\n}\nfunction assertNotBrowser() {\n    if (true) {\n        return;\n    }\n    const isRealBrowser = Object.getOwnPropertyDescriptor(globalThis, \"window\")?.get?.toString().includes(\"[native code]\") ?? false;\n    if (isRealBrowser) {\n        throw new Error(\"Convex functions should not be imported in the browser.\");\n    }\n}\nfunction exportArgs(functionDefinition) {\n    return ()=>{\n        let args = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.v.any();\n        if (typeof functionDefinition === \"object\" && functionDefinition.args !== void 0) {\n            args = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.v.object(functionDefinition.args);\n        }\n        return JSON.stringify(args.json);\n    };\n}\nconst mutationGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isMutation = true;\n    func.isPublic = true;\n    func.invokeMutation = (argsStr)=>invokeMutation(func, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nconst internalMutationGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isMutation = true;\n    func.isInternal = true;\n    func.invokeMutation = (argsStr)=>invokeMutation(func, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nasync function invokeQuery(func, argsStr, allowMapsAndSetsInReturnValue) {\n    const requestId = \"\";\n    const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr), false);\n    const queryCtx = {\n        db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupReader)(),\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageReader)(requestId)\n    };\n    const result = await invokeFunction(func, queryCtx, args);\n    validateReturnValue(result);\n    return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result, allowMapsAndSetsInReturnValue));\n}\nconst queryGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isQuery = true;\n    func.isPublic = true;\n    func.invokeQuery = (argsStr, allowMapsAndSetsInReturnValue)=>invokeQuery(func, argsStr, allowMapsAndSetsInReturnValue);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nconst internalQueryGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isQuery = true;\n    func.isInternal = true;\n    func.invokeQuery = (argsStr)=>invokeQuery(func, argsStr, false);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nasync function invokeAction(func, requestId, argsStr) {\n    const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr), false);\n    const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n    const ctx = {\n        ...calls,\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n        vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n    };\n    const result = await invokeFunction(func, ctx, args);\n    return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nconst actionGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isAction = true;\n    func.isPublic = true;\n    func.invokeAction = (requestId, argsStr)=>invokeAction(func, requestId, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nconst internalActionGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isAction = true;\n    func.isInternal = true;\n    func.invokeAction = (requestId, argsStr)=>invokeAction(func, requestId, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nasync function invokeHttpAction(func, request) {\n    const requestId = \"\";\n    const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n    const ctx = {\n        ...calls,\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n        scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n        vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n    };\n    return await invokeFunction(func, ctx, [\n        request\n    ]);\n}\nconst httpActionGeneric = (func)=>{\n    const q = func;\n    if (q.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    q.isRegistered = true;\n    q.isHttp = true;\n    q.invokeHttpAction = (request)=>invokeHttpAction(func, request);\n    return q;\n}; //# sourceMappingURL=registration_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/scheduler_impl.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionScheduler: () => (/* binding */ setupActionScheduler),\n/* harmony export */   setupMutationScheduler: () => (/* binding */ setupMutationScheduler)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\n\n\n\nfunction setupMutationScheduler() {\n    return {\n        runAfter: async (delayMs, functionReference, args)=>{\n            const syscallArgs = runAfterSyscallArgs(delayMs, functionReference, args);\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n        },\n        runAt: async (ms_since_epoch_or_date, functionReference, args)=>{\n            const syscallArgs = runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args);\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n        },\n        cancel: async (id)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(id, 1, \"cancel\", \"id\");\n            const args = {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id)\n            };\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/cancel_job\", args);\n        }\n    };\n}\nfunction setupActionScheduler(requestId) {\n    return {\n        runAfter: async (delayMs, functionReference, args)=>{\n            const syscallArgs = {\n                requestId,\n                ...runAfterSyscallArgs(delayMs, functionReference, args)\n            };\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n        },\n        runAt: async (ms_since_epoch_or_date, functionReference, args)=>{\n            const syscallArgs = {\n                requestId,\n                ...runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args)\n            };\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n        },\n        cancel: async (id)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(id, 1, \"cancel\", \"id\");\n            const syscallArgs = {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id)\n            };\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/cancel_job\", syscallArgs);\n        }\n    };\n}\nfunction runAfterSyscallArgs(delayMs, functionReference, args) {\n    if (typeof delayMs !== \"number\") {\n        throw new Error(\"`delayMs` must be a number\");\n    }\n    if (!isFinite(delayMs)) {\n        throw new Error(\"`delayMs` must be a finite number\");\n    }\n    if (delayMs < 0) {\n        throw new Error(\"`delayMs` must be non-negative\");\n    }\n    const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(functionReference);\n    const ts = (Date.now() + delayMs) / 1e3;\n    return {\n        name,\n        ts,\n        args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n        version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n    };\n}\nfunction runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args) {\n    let ts;\n    if (ms_since_epoch_or_date instanceof Date) {\n        ts = ms_since_epoch_or_date.valueOf() / 1e3;\n    } else if (typeof ms_since_epoch_or_date === \"number\") {\n        ts = ms_since_epoch_or_date / 1e3;\n    } else {\n        throw new Error(\"The invoke time must a Date or a timestamp\");\n    }\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(functionReference);\n    const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n    return {\n        name,\n        ts,\n        args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n        version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n    };\n} //# sourceMappingURL=scheduler_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NjaGVkdWxlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWE7QUFDd0M7QUFDWjtBQUNVO0FBQ0Q7QUFDSTtBQUNWO0FBQ3JDLFNBQVNNO0lBQ2QsT0FBTztRQUNMQyxVQUFVLE9BQU9DLFNBQVNDLG1CQUFtQkM7WUFDM0MsTUFBTUMsY0FBY0Msb0JBQW9CSixTQUFTQyxtQkFBbUJDO1lBQ3BFLE9BQU8sTUFBTVIsZ0VBQW1CQSxDQUFDLGdCQUFnQlM7UUFDbkQ7UUFDQUUsT0FBTyxPQUFPQyx3QkFBd0JMLG1CQUFtQkM7WUFDdkQsTUFBTUMsY0FBY0ksaUJBQ2xCRCx3QkFDQUwsbUJBQ0FDO1lBRUYsT0FBTyxNQUFNUixnRUFBbUJBLENBQUMsZ0JBQWdCUztRQUNuRDtRQUNBSyxRQUFRLE9BQU9DO1lBQ2JaLHlEQUFXQSxDQUFDWSxJQUFJLEdBQUcsVUFBVTtZQUM3QixNQUFNUCxPQUFPO2dCQUFFTyxJQUFJakIsOERBQVlBLENBQUNpQjtZQUFJO1lBQ3BDLE1BQU1mLGdFQUFtQkEsQ0FBQyxrQkFBa0JRO1FBQzlDO0lBQ0Y7QUFDRjtBQUNPLFNBQVNRLHFCQUFxQkMsU0FBUztJQUM1QyxPQUFPO1FBQ0xaLFVBQVUsT0FBT0MsU0FBU0MsbUJBQW1CQztZQUMzQyxNQUFNQyxjQUFjO2dCQUNsQlE7Z0JBQ0EsR0FBR1Asb0JBQW9CSixTQUFTQyxtQkFBbUJDLEtBQUs7WUFDMUQ7WUFDQSxPQUFPLE1BQU1SLGdFQUFtQkEsQ0FBQyx3QkFBd0JTO1FBQzNEO1FBQ0FFLE9BQU8sT0FBT0Msd0JBQXdCTCxtQkFBbUJDO1lBQ3ZELE1BQU1DLGNBQWM7Z0JBQ2xCUTtnQkFDQSxHQUFHSixpQkFBaUJELHdCQUF3QkwsbUJBQW1CQyxLQUFLO1lBQ3RFO1lBQ0EsT0FBTyxNQUFNUixnRUFBbUJBLENBQUMsd0JBQXdCUztRQUMzRDtRQUNBSyxRQUFRLE9BQU9DO1lBQ2JaLHlEQUFXQSxDQUFDWSxJQUFJLEdBQUcsVUFBVTtZQUM3QixNQUFNTixjQUFjO2dCQUFFTSxJQUFJakIsOERBQVlBLENBQUNpQjtZQUFJO1lBQzNDLE9BQU8sTUFBTWYsZ0VBQW1CQSxDQUFDLDBCQUEwQlM7UUFDN0Q7SUFDRjtBQUNGO0FBQ0EsU0FBU0Msb0JBQW9CSixPQUFPLEVBQUVDLGlCQUFpQixFQUFFQyxJQUFJO0lBQzNELElBQUksT0FBT0YsWUFBWSxVQUFVO1FBQy9CLE1BQU0sSUFBSVksTUFBTTtJQUNsQjtJQUNBLElBQUksQ0FBQ0MsU0FBU2IsVUFBVTtRQUN0QixNQUFNLElBQUlZLE1BQU07SUFDbEI7SUFDQSxJQUFJWixVQUFVLEdBQUc7UUFDZixNQUFNLElBQUlZLE1BQU07SUFDbEI7SUFDQSxNQUFNRSxlQUFlbkIsMkRBQVNBLENBQUNPO0lBQy9CLE1BQU1hLE9BQU9uQiwrREFBZUEsQ0FBQ0s7SUFDN0IsTUFBTWUsS0FBSyxDQUFDQyxLQUFLQyxHQUFHLEtBQUtsQixPQUFNLElBQUs7SUFDcEMsT0FBTztRQUNMZTtRQUNBQztRQUNBZCxNQUFNViw4REFBWUEsQ0FBQ3NCO1FBQ25CckIsT0FBT0EsZ0RBQUFBO0lBQ1Q7QUFDRjtBQUNBLFNBQVNjLGlCQUFpQkQsc0JBQXNCLEVBQUVMLGlCQUFpQixFQUFFQyxJQUFJO0lBQ3ZFLElBQUljO0lBQ0osSUFBSVYsa0NBQWtDVyxNQUFNO1FBQzFDRCxLQUFLVix1QkFBdUJhLE9BQU8sS0FBSztJQUMxQyxPQUFPLElBQUksT0FBT2IsMkJBQTJCLFVBQVU7UUFDckRVLEtBQUtWLHlCQUF5QjtJQUNoQyxPQUFPO1FBQ0wsTUFBTSxJQUFJTSxNQUFNO0lBQ2xCO0lBQ0EsTUFBTUcsT0FBT25CLCtEQUFlQSxDQUFDSztJQUM3QixNQUFNYSxlQUFlbkIsMkRBQVNBLENBQUNPO0lBQy9CLE9BQU87UUFDTGE7UUFDQUM7UUFDQWQsTUFBTVYsOERBQVlBLENBQUNzQjtRQUNuQnJCLE9BQU9BLGdEQUFBQTtJQUNUO0FBQ0YsRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC9zY2hlZHVsZXJfaW1wbC5qcz9lYzU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29udmV4VG9Kc29uIH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gXCIuLi8uLi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgcGVyZm9ybUFzeW5jU3lzY2FsbCB9IGZyb20gXCIuL3N5c2NhbGwuanNcIjtcbmltcG9ydCB7IHBhcnNlQXJncyB9IGZyb20gXCIuLi8uLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IGdldEZ1bmN0aW9uTmFtZSB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvYXBpLmpzXCI7XG5pbXBvcnQgeyB2YWxpZGF0ZUFyZyB9IGZyb20gXCIuL3ZhbGlkYXRlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBNdXRhdGlvblNjaGVkdWxlcigpIHtcbiAgcmV0dXJuIHtcbiAgICBydW5BZnRlcjogYXN5bmMgKGRlbGF5TXMsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHJ1bkFmdGVyU3lzY2FsbEFyZ3MoZGVsYXlNcywgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpO1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc2NoZWR1bGVcIiwgc3lzY2FsbEFyZ3MpO1xuICAgIH0sXG4gICAgcnVuQXQ6IGFzeW5jIChtc19zaW5jZV9lcG9jaF9vcl9kYXRlLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykgPT4ge1xuICAgICAgY29uc3Qgc3lzY2FsbEFyZ3MgPSBydW5BdFN5c2NhbGxBcmdzKFxuICAgICAgICBtc19zaW5jZV9lcG9jaF9vcl9kYXRlLFxuICAgICAgICBmdW5jdGlvblJlZmVyZW5jZSxcbiAgICAgICAgYXJnc1xuICAgICAgKTtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL3NjaGVkdWxlXCIsIHN5c2NhbGxBcmdzKTtcbiAgICB9LFxuICAgIGNhbmNlbDogYXN5bmMgKGlkKSA9PiB7XG4gICAgICB2YWxpZGF0ZUFyZyhpZCwgMSwgXCJjYW5jZWxcIiwgXCJpZFwiKTtcbiAgICAgIGNvbnN0IGFyZ3MgPSB7IGlkOiBjb252ZXhUb0pzb24oaWQpIH07XG4gICAgICBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2NhbmNlbF9qb2JcIiwgYXJncyk7XG4gICAgfVxuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwQWN0aW9uU2NoZWR1bGVyKHJlcXVlc3RJZCkge1xuICByZXR1cm4ge1xuICAgIHJ1bkFmdGVyOiBhc3luYyAoZGVsYXlNcywgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0ge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIC4uLnJ1bkFmdGVyU3lzY2FsbEFyZ3MoZGVsYXlNcywgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvYWN0aW9ucy9zY2hlZHVsZVwiLCBzeXNjYWxsQXJncyk7XG4gICAgfSxcbiAgICBydW5BdDogYXN5bmMgKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICAuLi5ydW5BdFN5c2NhbGxBcmdzKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKVxuICAgICAgfTtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2FjdGlvbnMvc2NoZWR1bGVcIiwgc3lzY2FsbEFyZ3MpO1xuICAgIH0sXG4gICAgY2FuY2VsOiBhc3luYyAoaWQpID0+IHtcbiAgICAgIHZhbGlkYXRlQXJnKGlkLCAxLCBcImNhbmNlbFwiLCBcImlkXCIpO1xuICAgICAgY29uc3Qgc3lzY2FsbEFyZ3MgPSB7IGlkOiBjb252ZXhUb0pzb24oaWQpIH07XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9hY3Rpb25zL2NhbmNlbF9qb2JcIiwgc3lzY2FsbEFyZ3MpO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIHJ1bkFmdGVyU3lzY2FsbEFyZ3MoZGVsYXlNcywgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpIHtcbiAgaWYgKHR5cGVvZiBkZWxheU1zICE9PSBcIm51bWJlclwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYGRlbGF5TXNgIG11c3QgYmUgYSBudW1iZXJcIik7XG4gIH1cbiAgaWYgKCFpc0Zpbml0ZShkZWxheU1zKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImBkZWxheU1zYCBtdXN0IGJlIGEgZmluaXRlIG51bWJlclwiKTtcbiAgfVxuICBpZiAoZGVsYXlNcyA8IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJgZGVsYXlNc2AgbXVzdCBiZSBub24tbmVnYXRpdmVcIik7XG4gIH1cbiAgY29uc3QgZnVuY3Rpb25BcmdzID0gcGFyc2VBcmdzKGFyZ3MpO1xuICBjb25zdCBuYW1lID0gZ2V0RnVuY3Rpb25OYW1lKGZ1bmN0aW9uUmVmZXJlbmNlKTtcbiAgY29uc3QgdHMgPSAoRGF0ZS5ub3coKSArIGRlbGF5TXMpIC8gMWUzO1xuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgdHMsXG4gICAgYXJnczogY29udmV4VG9Kc29uKGZ1bmN0aW9uQXJncyksXG4gICAgdmVyc2lvblxuICB9O1xufVxuZnVuY3Rpb24gcnVuQXRTeXNjYWxsQXJncyhtc19zaW5jZV9lcG9jaF9vcl9kYXRlLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykge1xuICBsZXQgdHM7XG4gIGlmIChtc19zaW5jZV9lcG9jaF9vcl9kYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHRzID0gbXNfc2luY2VfZXBvY2hfb3JfZGF0ZS52YWx1ZU9mKCkgLyAxZTM7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUgPT09IFwibnVtYmVyXCIpIHtcbiAgICB0cyA9IG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUgLyAxZTM7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIGludm9rZSB0aW1lIG11c3QgYSBEYXRlIG9yIGEgdGltZXN0YW1wXCIpO1xuICB9XG4gIGNvbnN0IG5hbWUgPSBnZXRGdW5jdGlvbk5hbWUoZnVuY3Rpb25SZWZlcmVuY2UpO1xuICBjb25zdCBmdW5jdGlvbkFyZ3MgPSBwYXJzZUFyZ3MoYXJncyk7XG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICB0cyxcbiAgICBhcmdzOiBjb252ZXhUb0pzb24oZnVuY3Rpb25BcmdzKSxcbiAgICB2ZXJzaW9uXG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2hlZHVsZXJfaW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjb252ZXhUb0pzb24iLCJ2ZXJzaW9uIiwicGVyZm9ybUFzeW5jU3lzY2FsbCIsInBhcnNlQXJncyIsImdldEZ1bmN0aW9uTmFtZSIsInZhbGlkYXRlQXJnIiwic2V0dXBNdXRhdGlvblNjaGVkdWxlciIsInJ1bkFmdGVyIiwiZGVsYXlNcyIsImZ1bmN0aW9uUmVmZXJlbmNlIiwiYXJncyIsInN5c2NhbGxBcmdzIiwicnVuQWZ0ZXJTeXNjYWxsQXJncyIsInJ1bkF0IiwibXNfc2luY2VfZXBvY2hfb3JfZGF0ZSIsInJ1bkF0U3lzY2FsbEFyZ3MiLCJjYW5jZWwiLCJpZCIsInNldHVwQWN0aW9uU2NoZWR1bGVyIiwicmVxdWVzdElkIiwiRXJyb3IiLCJpc0Zpbml0ZSIsImZ1bmN0aW9uQXJncyIsIm5hbWUiLCJ0cyIsIkRhdGUiLCJub3ciLCJ2YWx1ZU9mIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilterBuilderImpl: () => (/* binding */ SearchFilterBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../search_filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\nclass SearchFilterBuilderImpl extends _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.SearchFilter {\n    constructor(filters){\n        super();\n        this.filters = filters;\n        this.isConsumed = false;\n    }\n    static new() {\n        return new SearchFilterBuilderImpl([]);\n    }\n    consume() {\n        if (this.isConsumed) {\n            throw new Error(\"SearchFilterBuilder has already been used! Chain your method calls like `q => q.search(...).eq(...)`.\");\n        }\n        this.isConsumed = true;\n    }\n    search(fieldName, query) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"search\", \"fieldName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(query, 2, \"search\", \"query\");\n        this.consume();\n        return new SearchFilterBuilderImpl(this.filters.concat({\n            type: \"Search\",\n            fieldPath: fieldName,\n            value: query\n        }));\n    }\n    eq(fieldName, value) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"eq\", \"fieldName\");\n        if (arguments.length !== 2) {\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(value, 2, \"search\", \"value\");\n        }\n        this.consume();\n        return new SearchFilterBuilderImpl(this.filters.concat({\n            type: \"Eq\",\n            fieldPath: fieldName,\n            value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(value)\n        }));\n    }\n    export() {\n        this.consume();\n        return this.filters;\n    }\n} //# sourceMappingURL=search_filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NlYXJjaF9maWx0ZXJfYnVpbGRlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUNtRDtBQUczQjtBQUNPO0FBQ3JDLE1BQU1HLGdDQUFnQ0YsbUVBQVlBO0lBQ3ZERyxZQUFZQyxPQUFPLENBQUU7UUFDbkIsS0FBSztRQUNMLElBQUksQ0FBQ0EsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0MsVUFBVSxHQUFHO0lBQ3BCO0lBQ0EsT0FBT0MsTUFBTTtRQUNYLE9BQU8sSUFBSUosd0JBQXdCLEVBQUU7SUFDdkM7SUFDQUssVUFBVTtRQUNSLElBQUksSUFBSSxDQUFDRixVQUFVLEVBQUU7WUFDbkIsTUFBTSxJQUFJRyxNQUNSO1FBRUo7UUFDQSxJQUFJLENBQUNILFVBQVUsR0FBRztJQUNwQjtJQUNBSSxPQUFPQyxTQUFTLEVBQUVDLEtBQUssRUFBRTtRQUN2QlYseURBQVdBLENBQUNTLFdBQVcsR0FBRyxVQUFVO1FBQ3BDVCx5REFBV0EsQ0FBQ1UsT0FBTyxHQUFHLFVBQVU7UUFDaEMsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCx3QkFDVCxJQUFJLENBQUNFLE9BQU8sQ0FBQ1EsTUFBTSxDQUFDO1lBQ2xCQyxNQUFNO1lBQ05DLFdBQVdKO1lBQ1hLLE9BQU9KO1FBQ1Q7SUFFSjtJQUNBSyxHQUFHTixTQUFTLEVBQUVLLEtBQUssRUFBRTtRQUNuQmQseURBQVdBLENBQUNTLFdBQVcsR0FBRyxNQUFNO1FBQ2hDLElBQUlPLFVBQVVDLE1BQU0sS0FBSyxHQUFHO1lBQzFCakIseURBQVdBLENBQUNjLE9BQU8sR0FBRyxVQUFVO1FBQ2xDO1FBQ0EsSUFBSSxDQUFDUixPQUFPO1FBQ1osT0FBTyxJQUFJTCx3QkFDVCxJQUFJLENBQUNFLE9BQU8sQ0FBQ1EsTUFBTSxDQUFDO1lBQ2xCQyxNQUFNO1lBQ05DLFdBQVdKO1lBQ1hLLE9BQU9oQix5RUFBdUJBLENBQUNnQjtRQUNqQztJQUVKO0lBQ0FJLFNBQVM7UUFDUCxJQUFJLENBQUNaLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQ0gsT0FBTztJQUNyQjtBQUNGLEVBQ0Esc0RBQXNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvc2VhcmNoX2ZpbHRlcl9idWlsZGVyX2ltcGwuanM/NDgyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uIH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy92YWx1ZS5qc1wiO1xuaW1wb3J0IHtcbiAgU2VhcmNoRmlsdGVyXG59IGZyb20gXCIuLi9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlQXJnIH0gZnJvbSBcIi4vdmFsaWRhdGUuanNcIjtcbmV4cG9ydCBjbGFzcyBTZWFyY2hGaWx0ZXJCdWlsZGVySW1wbCBleHRlbmRzIFNlYXJjaEZpbHRlciB7XG4gIGNvbnN0cnVjdG9yKGZpbHRlcnMpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuZmlsdGVycyA9IGZpbHRlcnM7XG4gICAgdGhpcy5pc0NvbnN1bWVkID0gZmFsc2U7XG4gIH1cbiAgc3RhdGljIG5ldygpIHtcbiAgICByZXR1cm4gbmV3IFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsKFtdKTtcbiAgfVxuICBjb25zdW1lKCkge1xuICAgIGlmICh0aGlzLmlzQ29uc3VtZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJTZWFyY2hGaWx0ZXJCdWlsZGVyIGhhcyBhbHJlYWR5IGJlZW4gdXNlZCEgQ2hhaW4geW91ciBtZXRob2QgY2FsbHMgbGlrZSBgcSA9PiBxLnNlYXJjaCguLi4pLmVxKC4uLilgLlwiXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLmlzQ29uc3VtZWQgPSB0cnVlO1xuICB9XG4gIHNlYXJjaChmaWVsZE5hbWUsIHF1ZXJ5KSB7XG4gICAgdmFsaWRhdGVBcmcoZmllbGROYW1lLCAxLCBcInNlYXJjaFwiLCBcImZpZWxkTmFtZVwiKTtcbiAgICB2YWxpZGF0ZUFyZyhxdWVyeSwgMiwgXCJzZWFyY2hcIiwgXCJxdWVyeVwiKTtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5maWx0ZXJzLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiU2VhcmNoXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogcXVlcnlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBlcShmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgdmFsaWRhdGVBcmcoZmllbGROYW1lLCAxLCBcImVxXCIsIFwiZmllbGROYW1lXCIpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICB2YWxpZGF0ZUFyZyh2YWx1ZSwgMiwgXCJzZWFyY2hcIiwgXCJ2YWx1ZVwiKTtcbiAgICB9XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIG5ldyBTZWFyY2hGaWx0ZXJCdWlsZGVySW1wbChcbiAgICAgIHRoaXMuZmlsdGVycy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkVxXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4T3JVbmRlZmluZWRUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgZXhwb3J0KCkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiB0aGlzLmZpbHRlcnM7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaF9maWx0ZXJfYnVpbGRlcl9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNvbnZleE9yVW5kZWZpbmVkVG9Kc29uIiwiU2VhcmNoRmlsdGVyIiwidmFsaWRhdGVBcmciLCJTZWFyY2hGaWx0ZXJCdWlsZGVySW1wbCIsImNvbnN0cnVjdG9yIiwiZmlsdGVycyIsImlzQ29uc3VtZWQiLCJuZXciLCJjb25zdW1lIiwiRXJyb3IiLCJzZWFyY2giLCJmaWVsZE5hbWUiLCJxdWVyeSIsImNvbmNhdCIsInR5cGUiLCJmaWVsZFBhdGgiLCJ2YWx1ZSIsImVxIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZXhwb3J0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/storage_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupStorageActionWriter: () => (/* binding */ setupStorageActionWriter),\n/* harmony export */   setupStorageReader: () => (/* binding */ setupStorageReader),\n/* harmony export */   setupStorageWriter: () => (/* binding */ setupStorageWriter)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\nfunction setupStorageReader(requestId) {\n    return {\n        getUrl: async (storageId)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(storageId, 1, \"getUrl\", \"storageId\");\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetUrl\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        },\n        getMetadata: async (storageId)=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetMetadata\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        }\n    };\n}\nfunction setupStorageWriter(requestId) {\n    const reader = setupStorageReader(requestId);\n    return {\n        generateUploadUrl: async ()=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGenerateUploadUrl\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version\n            });\n        },\n        delete: async (storageId)=>{\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageDelete\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        },\n        getUrl: reader.getUrl,\n        getMetadata: reader.getMetadata\n    };\n}\nfunction setupStorageActionWriter(requestId) {\n    const writer = setupStorageWriter(requestId);\n    return {\n        ...writer,\n        store: async (blob, options)=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/storeBlob\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                blob,\n                options\n            });\n        },\n        get: async (storageId)=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/getBlob\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        }\n    };\n} //# sourceMappingURL=storage_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N0b3JhZ2VfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUM0QjtBQUM0QjtBQUN6QjtBQUNyQyxTQUFTSSxtQkFBbUJDLFNBQVM7SUFDMUMsT0FBTztRQUNMQyxRQUFRLE9BQU9DO1lBQ2JKLHlEQUFXQSxDQUFDSSxXQUFXLEdBQUcsVUFBVTtZQUNwQyxPQUFPLE1BQU1OLGdFQUFtQkEsQ0FBQyxxQkFBcUI7Z0JBQ3BESTtnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQTztZQUNGO1FBQ0Y7UUFDQUMsYUFBYSxPQUFPRDtZQUNsQixPQUFPLE1BQU1OLGdFQUFtQkEsQ0FBQywwQkFBMEI7Z0JBQ3pESTtnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQTztZQUNGO1FBQ0Y7SUFDRjtBQUNGO0FBQ08sU0FBU0UsbUJBQW1CSixTQUFTO0lBQzFDLE1BQU1LLFNBQVNOLG1CQUFtQkM7SUFDbEMsT0FBTztRQUNMTSxtQkFBbUI7WUFDakIsT0FBTyxNQUFNVixnRUFBbUJBLENBQUMsZ0NBQWdDO2dCQUMvREk7Z0JBQ0FMLE9BQU9BLGdEQUFBQTtZQUNUO1FBQ0Y7UUFDQVksUUFBUSxPQUFPTDtZQUNiLE1BQU1OLGdFQUFtQkEsQ0FBQyxxQkFBcUI7Z0JBQzdDSTtnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQTztZQUNGO1FBQ0Y7UUFDQUQsUUFBUUksT0FBT0osTUFBTTtRQUNyQkUsYUFBYUUsT0FBT0YsV0FBVztJQUNqQztBQUNGO0FBQ08sU0FBU0sseUJBQXlCUixTQUFTO0lBQ2hELE1BQU1TLFNBQVNMLG1CQUFtQko7SUFDbEMsT0FBTztRQUNMLEdBQUdTLE1BQU07UUFDVEMsT0FBTyxPQUFPQyxNQUFNQztZQUNsQixPQUFPLE1BQU1mLDZEQUFnQkEsQ0FBQyxxQkFBcUI7Z0JBQ2pERztnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQZ0I7Z0JBQ0FDO1lBQ0Y7UUFDRjtRQUNBQyxLQUFLLE9BQU9YO1lBQ1YsT0FBTyxNQUFNTCw2REFBZ0JBLENBQUMsbUJBQW1CO2dCQUMvQ0c7Z0JBQ0FMLE9BQU9BLGdEQUFBQTtnQkFDUE87WUFDRjtRQUNGO0lBQ0Y7QUFDRixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N0b3JhZ2VfaW1wbC5qcz84OTBmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gXCIuLi8uLi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgcGVyZm9ybUFzeW5jU3lzY2FsbCwgcGVyZm9ybUpzU3lzY2FsbCB9IGZyb20gXCIuL3N5c2NhbGwuanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlQXJnIH0gZnJvbSBcIi4vdmFsaWRhdGUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0b3JhZ2VSZWFkZXIocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgZ2V0VXJsOiBhc3luYyAoc3RvcmFnZUlkKSA9PiB7XG4gICAgICB2YWxpZGF0ZUFyZyhzdG9yYWdlSWQsIDEsIFwiZ2V0VXJsXCIsIFwic3RvcmFnZUlkXCIpO1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc3RvcmFnZUdldFVybFwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldE1ldGFkYXRhOiBhc3luYyAoc3RvcmFnZUlkKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zdG9yYWdlR2V0TWV0YWRhdGFcIiwge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIHZlcnNpb24sXG4gICAgICAgIHN0b3JhZ2VJZFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwU3RvcmFnZVdyaXRlcihyZXF1ZXN0SWQpIHtcbiAgY29uc3QgcmVhZGVyID0gc2V0dXBTdG9yYWdlUmVhZGVyKHJlcXVlc3RJZCk7XG4gIHJldHVybiB7XG4gICAgZ2VuZXJhdGVVcGxvYWRVcmw6IGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL3N0b3JhZ2VHZW5lcmF0ZVVwbG9hZFVybFwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvblxuICAgICAgfSk7XG4gICAgfSxcbiAgICBkZWxldGU6IGFzeW5jIChzdG9yYWdlSWQpID0+IHtcbiAgICAgIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc3RvcmFnZURlbGV0ZVwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldFVybDogcmVhZGVyLmdldFVybCxcbiAgICBnZXRNZXRhZGF0YTogcmVhZGVyLmdldE1ldGFkYXRhXG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBTdG9yYWdlQWN0aW9uV3JpdGVyKHJlcXVlc3RJZCkge1xuICBjb25zdCB3cml0ZXIgPSBzZXR1cFN0b3JhZ2VXcml0ZXIocmVxdWVzdElkKTtcbiAgcmV0dXJuIHtcbiAgICAuLi53cml0ZXIsXG4gICAgc3RvcmU6IGFzeW5jIChibG9iLCBvcHRpb25zKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUpzU3lzY2FsbChcInN0b3JhZ2Uvc3RvcmVCbG9iXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICBibG9iLFxuICAgICAgICBvcHRpb25zXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogYXN5bmMgKHN0b3JhZ2VJZCkgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Kc1N5c2NhbGwoXCJzdG9yYWdlL2dldEJsb2JcIiwge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIHZlcnNpb24sXG4gICAgICAgIHN0b3JhZ2VJZFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcmFnZV9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbInZlcnNpb24iLCJwZXJmb3JtQXN5bmNTeXNjYWxsIiwicGVyZm9ybUpzU3lzY2FsbCIsInZhbGlkYXRlQXJnIiwic2V0dXBTdG9yYWdlUmVhZGVyIiwicmVxdWVzdElkIiwiZ2V0VXJsIiwic3RvcmFnZUlkIiwiZ2V0TWV0YWRhdGEiLCJzZXR1cFN0b3JhZ2VXcml0ZXIiLCJyZWFkZXIiLCJnZW5lcmF0ZVVwbG9hZFVybCIsImRlbGV0ZSIsInNldHVwU3RvcmFnZUFjdGlvbldyaXRlciIsIndyaXRlciIsInN0b3JlIiwiYmxvYiIsIm9wdGlvbnMiLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/syscall.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   performAsyncSyscall: () => (/* binding */ performAsyncSyscall),\n/* harmony export */   performJsSyscall: () => (/* binding */ performJsSyscall),\n/* harmony export */   performSyscall: () => (/* binding */ performSyscall)\n/* harmony export */ });\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\nfunction performSyscall(op, arg) {\n    if (typeof Convex === \"undefined\" || Convex.syscall === void 0) {\n        throw new Error(\"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\");\n    }\n    const resultStr = Convex.syscall(op, JSON.stringify(arg));\n    return JSON.parse(resultStr);\n}\nasync function performAsyncSyscall(op, arg) {\n    if (typeof Convex === \"undefined\" || Convex.asyncSyscall === void 0) {\n        throw new Error(\"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\");\n    }\n    let resultStr;\n    try {\n        resultStr = await Convex.asyncSyscall(op, JSON.stringify(arg));\n    } catch (e) {\n        if (e.data !== void 0) {\n            const rethrown = new _values_errors_js__WEBPACK_IMPORTED_MODULE_0__.ConvexError(e.message);\n            rethrown.data = e.data;\n            throw rethrown;\n        }\n        throw new Error(e.message);\n    }\n    return JSON.parse(resultStr);\n}\nfunction performJsSyscall(op, arg) {\n    if (typeof Convex === \"undefined\" || Convex.jsSyscall === void 0) {\n        throw new Error(\"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\");\n    }\n    return Convex.jsSyscall(op, arg);\n} //# sourceMappingURL=syscall.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N5c2NhbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhO0FBQ3dDO0FBQzlDLFNBQVNDLGVBQWVDLEVBQUUsRUFBRUMsR0FBRztJQUNwQyxJQUFJLE9BQU9DLFdBQVcsZUFBZUEsT0FBT0MsT0FBTyxLQUFLLEtBQUssR0FBRztRQUM5RCxNQUFNLElBQUlDLE1BQ1I7SUFFSjtJQUNBLE1BQU1DLFlBQVlILE9BQU9DLE9BQU8sQ0FBQ0gsSUFBSU0sS0FBS0MsU0FBUyxDQUFDTjtJQUNwRCxPQUFPSyxLQUFLRSxLQUFLLENBQUNIO0FBQ3BCO0FBQ08sZUFBZUksb0JBQW9CVCxFQUFFLEVBQUVDLEdBQUc7SUFDL0MsSUFBSSxPQUFPQyxXQUFXLGVBQWVBLE9BQU9RLFlBQVksS0FBSyxLQUFLLEdBQUc7UUFDbkUsTUFBTSxJQUFJTixNQUNSO0lBRUo7SUFDQSxJQUFJQztJQUNKLElBQUk7UUFDRkEsWUFBWSxNQUFNSCxPQUFPUSxZQUFZLENBQUNWLElBQUlNLEtBQUtDLFNBQVMsQ0FBQ047SUFDM0QsRUFBRSxPQUFPVSxHQUFHO1FBQ1YsSUFBSUEsRUFBRUMsSUFBSSxLQUFLLEtBQUssR0FBRztZQUNyQixNQUFNQyxXQUFXLElBQUlmLDBEQUFXQSxDQUFDYSxFQUFFRyxPQUFPO1lBQzFDRCxTQUFTRCxJQUFJLEdBQUdELEVBQUVDLElBQUk7WUFDdEIsTUFBTUM7UUFDUjtRQUNBLE1BQU0sSUFBSVQsTUFBTU8sRUFBRUcsT0FBTztJQUMzQjtJQUNBLE9BQU9SLEtBQUtFLEtBQUssQ0FBQ0g7QUFDcEI7QUFDTyxTQUFTVSxpQkFBaUJmLEVBQUUsRUFBRUMsR0FBRztJQUN0QyxJQUFJLE9BQU9DLFdBQVcsZUFBZUEsT0FBT2MsU0FBUyxLQUFLLEtBQUssR0FBRztRQUNoRSxNQUFNLElBQUlaLE1BQ1I7SUFFSjtJQUNBLE9BQU9GLE9BQU9jLFNBQVMsQ0FBQ2hCLElBQUlDO0FBQzlCLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvc3lzY2FsbC5qcz80ODUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgQ29udmV4RXJyb3IgfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2Vycm9ycy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBlcmZvcm1TeXNjYWxsKG9wLCBhcmcpIHtcbiAgaWYgKHR5cGVvZiBDb252ZXggPT09IFwidW5kZWZpbmVkXCIgfHwgQ29udmV4LnN5c2NhbGwgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiVGhlIENvbnZleCBkYXRhYmFzZSBhbmQgYXV0aCBvYmplY3RzIGFyZSBiZWluZyB1c2VkIG91dHNpZGUgb2YgYSBDb252ZXggYmFja2VuZC4gRGlkIHlvdSBtZWFuIHRvIHVzZSBgdXNlUXVlcnlgIG9yIGB1c2VNdXRhdGlvbmAgdG8gY2FsbCBhIENvbnZleCBmdW5jdGlvbj9cIlxuICAgICk7XG4gIH1cbiAgY29uc3QgcmVzdWx0U3RyID0gQ29udmV4LnN5c2NhbGwob3AsIEpTT04uc3RyaW5naWZ5KGFyZykpO1xuICByZXR1cm4gSlNPTi5wYXJzZShyZXN1bHRTdHIpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBlcmZvcm1Bc3luY1N5c2NhbGwob3AsIGFyZykge1xuICBpZiAodHlwZW9mIENvbnZleCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBDb252ZXguYXN5bmNTeXNjYWxsID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRoZSBDb252ZXggZGF0YWJhc2UgYW5kIGF1dGggb2JqZWN0cyBhcmUgYmVpbmcgdXNlZCBvdXRzaWRlIG9mIGEgQ29udmV4IGJhY2tlbmQuIERpZCB5b3UgbWVhbiB0byB1c2UgYHVzZVF1ZXJ5YCBvciBgdXNlTXV0YXRpb25gIHRvIGNhbGwgYSBDb252ZXggZnVuY3Rpb24/XCJcbiAgICApO1xuICB9XG4gIGxldCByZXN1bHRTdHI7XG4gIHRyeSB7XG4gICAgcmVzdWx0U3RyID0gYXdhaXQgQ29udmV4LmFzeW5jU3lzY2FsbChvcCwgSlNPTi5zdHJpbmdpZnkoYXJnKSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZS5kYXRhICE9PSB2b2lkIDApIHtcbiAgICAgIGNvbnN0IHJldGhyb3duID0gbmV3IENvbnZleEVycm9yKGUubWVzc2FnZSk7XG4gICAgICByZXRocm93bi5kYXRhID0gZS5kYXRhO1xuICAgICAgdGhyb3cgcmV0aHJvd247XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihlLm1lc3NhZ2UpO1xuICB9XG4gIHJldHVybiBKU09OLnBhcnNlKHJlc3VsdFN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gcGVyZm9ybUpzU3lzY2FsbChvcCwgYXJnKSB7XG4gIGlmICh0eXBlb2YgQ29udmV4ID09PSBcInVuZGVmaW5lZFwiIHx8IENvbnZleC5qc1N5c2NhbGwgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiVGhlIENvbnZleCBkYXRhYmFzZSBhbmQgYXV0aCBvYmplY3RzIGFyZSBiZWluZyB1c2VkIG91dHNpZGUgb2YgYSBDb252ZXggYmFja2VuZC4gRGlkIHlvdSBtZWFuIHRvIHVzZSBgdXNlUXVlcnlgIG9yIGB1c2VNdXRhdGlvbmAgdG8gY2FsbCBhIENvbnZleCBmdW5jdGlvbj9cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIENvbnZleC5qc1N5c2NhbGwob3AsIGFyZyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zeXNjYWxsLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkNvbnZleEVycm9yIiwicGVyZm9ybVN5c2NhbGwiLCJvcCIsImFyZyIsIkNvbnZleCIsInN5c2NhbGwiLCJFcnJvciIsInJlc3VsdFN0ciIsIkpTT04iLCJzdHJpbmdpZnkiLCJwYXJzZSIsInBlcmZvcm1Bc3luY1N5c2NhbGwiLCJhc3luY1N5c2NhbGwiLCJlIiwiZGF0YSIsInJldGhyb3duIiwibWVzc2FnZSIsInBlcmZvcm1Kc1N5c2NhbGwiLCJqc1N5c2NhbGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/validate.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateArg: () => (/* binding */ validateArg)\n/* harmony export */ });\n\nfunction validateArg(arg, idx, method, argName) {\n    if (arg === void 0) {\n        throw new Error(`Must provide arg ${idx} \\`${argName}\\` to \\`${method}\\``);\n    }\n} //# sourceMappingURL=validate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZhbGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLFNBQVNBLFlBQVlDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLE9BQU87SUFDbkQsSUFBSUgsUUFBUSxLQUFLLEdBQUc7UUFDbEIsTUFBTSxJQUFJSSxNQUFNLENBQUMsaUJBQWlCLEVBQUVILElBQUksR0FBRyxFQUFFRSxRQUFRLFFBQVEsRUFBRUQsT0FBTyxFQUFFLENBQUM7SUFDM0U7QUFDRixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZhbGlkYXRlLmpzP2EzNmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVBcmcoYXJnLCBpZHgsIG1ldGhvZCwgYXJnTmFtZSkge1xuICBpZiAoYXJnID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE11c3QgcHJvdmlkZSBhcmcgJHtpZHh9IFxcYCR7YXJnTmFtZX1cXGAgdG8gXFxgJHttZXRob2R9XFxgYCk7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbInZhbGlkYXRlQXJnIiwiYXJnIiwiaWR4IiwibWV0aG9kIiwiYXJnTmFtZSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js":
/*!************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/vector_search_impl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   VectorQueryImpl: () => (/* binding */ VectorQueryImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression),\n/* harmony export */   setupActionVectorSearch: () => (/* binding */ setupActionVectorSearch)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _vector_search_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vector_search.js */ \"(ssr)/./node_modules/convex/dist/esm/server/vector_search.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\n\n\n\nfunction setupActionVectorSearch(requestId) {\n    return async (tableName, indexName, query)=>{\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"vectorSearch\", \"tableName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(indexName, 2, \"vectorSearch\", \"indexName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(query, 3, \"vectorSearch\", \"query\");\n        if (!query.vector || !Array.isArray(query.vector) || query.vector.length === 0) {\n            throw Error(\"`vector` must be a non-empty Array in vectorSearch\");\n        }\n        return await new VectorQueryImpl(requestId, tableName + \".\" + indexName, query).collect();\n    };\n}\nclass VectorQueryImpl {\n    constructor(requestId, indexName, query){\n        this.requestId = requestId;\n        const filters = query.filter ? serializeExpression(query.filter(filterBuilderImpl)) : null;\n        this.state = {\n            type: \"preparing\",\n            query: {\n                indexName,\n                limit: query.limit,\n                vector: query.vector,\n                expressions: filters\n            }\n        };\n    }\n    async collect() {\n        if (this.state.type === \"consumed\") {\n            throw new Error(\"This query is closed and can't emit any more values.\");\n        }\n        const query = this.state.query;\n        this.state = {\n            type: \"consumed\"\n        };\n        const { results } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/actions/vectorSearch\", {\n            requestId: this.requestId,\n            version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n            query\n        });\n        return results;\n    }\n}\nclass ExpressionImpl extends _vector_search_js__WEBPACK_IMPORTED_MODULE_2__.FilterExpression {\n    constructor(inner){\n        super();\n        this.inner = inner;\n    }\n    serialize() {\n        return this.inner;\n    }\n}\nfunction serializeExpression(expr) {\n    if (expr instanceof ExpressionImpl) {\n        return expr.serialize();\n    } else {\n        return {\n            $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_4__.convexOrUndefinedToJson)(expr)\n        };\n    }\n}\nconst filterBuilderImpl = {\n    //  Comparisons  /////////////////////////////////////////////////////////////\n    eq (fieldName, value) {\n        if (typeof fieldName !== \"string\") {\n            throw new Error(\"The first argument to `q.eq` must be a field name.\");\n        }\n        return new ExpressionImpl({\n            $eq: [\n                serializeExpression(new ExpressionImpl({\n                    $field: fieldName\n                })),\n                serializeExpression(value)\n            ]\n        });\n    },\n    //  Logic  ///////////////////////////////////////////////////////////////////\n    or (...exprs) {\n        return new ExpressionImpl({\n            $or: exprs.map(serializeExpression)\n        });\n    }\n}; //# sourceMappingURL=vector_search_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZlY3Rvcl9zZWFyY2hfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7QUFDc0M7QUFDVjtBQUdaO0FBQ2U7QUFDb0I7QUFDekQsU0FBU0ssd0JBQXdCQyxTQUFTO0lBQy9DLE9BQU8sT0FBT0MsV0FBV0MsV0FBV0M7UUFDbENOLHlEQUFXQSxDQUFDSSxXQUFXLEdBQUcsZ0JBQWdCO1FBQzFDSix5REFBV0EsQ0FBQ0ssV0FBVyxHQUFHLGdCQUFnQjtRQUMxQ0wseURBQVdBLENBQUNNLE9BQU8sR0FBRyxnQkFBZ0I7UUFDdEMsSUFBSSxDQUFDQSxNQUFNQyxNQUFNLElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSCxNQUFNQyxNQUFNLEtBQUtELE1BQU1DLE1BQU0sQ0FBQ0csTUFBTSxLQUFLLEdBQUc7WUFDOUUsTUFBTUMsTUFBTTtRQUNkO1FBQ0EsT0FBTyxNQUFNLElBQUlDLGdCQUNmVCxXQUNBQyxZQUFZLE1BQU1DLFdBQ2xCQyxPQUNBTyxPQUFPO0lBQ1g7QUFDRjtBQUNPLE1BQU1EO0lBQ1hFLFlBQVlYLFNBQVMsRUFBRUUsU0FBUyxFQUFFQyxLQUFLLENBQUU7UUFDdkMsSUFBSSxDQUFDSCxTQUFTLEdBQUdBO1FBQ2pCLE1BQU1ZLFVBQVVULE1BQU1VLE1BQU0sR0FBR0Msb0JBQW9CWCxNQUFNVSxNQUFNLENBQUNFLHNCQUFzQjtRQUN0RixJQUFJLENBQUNDLEtBQUssR0FBRztZQUNYQyxNQUFNO1lBQ05kLE9BQU87Z0JBQ0xEO2dCQUNBZ0IsT0FBT2YsTUFBTWUsS0FBSztnQkFDbEJkLFFBQVFELE1BQU1DLE1BQU07Z0JBQ3BCZSxhQUFhUDtZQUNmO1FBQ0Y7SUFDRjtJQUNBLE1BQU1GLFVBQVU7UUFDZCxJQUFJLElBQUksQ0FBQ00sS0FBSyxDQUFDQyxJQUFJLEtBQUssWUFBWTtZQUNsQyxNQUFNLElBQUlULE1BQU07UUFDbEI7UUFDQSxNQUFNTCxRQUFRLElBQUksQ0FBQ2EsS0FBSyxDQUFDYixLQUFLO1FBQzlCLElBQUksQ0FBQ2EsS0FBSyxHQUFHO1lBQUVDLE1BQU07UUFBVztRQUNoQyxNQUFNLEVBQUVHLE9BQU8sRUFBRSxHQUFHLE1BQU0xQixnRUFBbUJBLENBQUMsNEJBQTRCO1lBQ3hFTSxXQUFXLElBQUksQ0FBQ0EsU0FBUztZQUN6QkwsT0FBT0EsZ0RBQUFBO1lBQ1BRO1FBQ0Y7UUFDQSxPQUFPaUI7SUFDVDtBQUNGO0FBQ08sTUFBTUMsdUJBQXVCekIsK0RBQWdCQTtJQUNsRGUsWUFBWVcsS0FBSyxDQUFFO1FBQ2pCLEtBQUs7UUFDTCxJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDZjtJQUNBQyxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUNELEtBQUs7SUFDbkI7QUFDRjtBQUNPLFNBQVNSLG9CQUFvQlUsSUFBSTtJQUN0QyxJQUFJQSxnQkFBZ0JILGdCQUFnQjtRQUNsQyxPQUFPRyxLQUFLRCxTQUFTO0lBQ3ZCLE9BQU87UUFDTCxPQUFPO1lBQUVFLFVBQVUzQix5RUFBdUJBLENBQUMwQjtRQUFNO0lBQ25EO0FBQ0Y7QUFDTyxNQUFNVCxvQkFBb0I7SUFDL0IsOEVBQThFO0lBQzlFVyxJQUFHQyxTQUFTLEVBQUVDLEtBQUs7UUFDakIsSUFBSSxPQUFPRCxjQUFjLFVBQVU7WUFDakMsTUFBTSxJQUFJbkIsTUFBTTtRQUNsQjtRQUNBLE9BQU8sSUFBSWEsZUFBZTtZQUN4QlEsS0FBSztnQkFDSGYsb0JBQW9CLElBQUlPLGVBQWU7b0JBQUVTLFFBQVFIO2dCQUFVO2dCQUMzRGIsb0JBQW9CYzthQUNyQjtRQUNIO0lBQ0Y7SUFDQSw4RUFBOEU7SUFDOUVHLElBQUcsR0FBR0MsS0FBSztRQUNULE9BQU8sSUFBSVgsZUFBZTtZQUFFWSxLQUFLRCxNQUFNRSxHQUFHLENBQUNwQjtRQUFxQjtJQUNsRTtBQUNGLEVBQUUsQ0FDRiw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC92ZWN0b3Jfc2VhcmNoX2ltcGwuanM/MTJmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IHBlcmZvcm1Bc3luY1N5c2NhbGwgfSBmcm9tIFwiLi9zeXNjYWxsLmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQge1xuICBGaWx0ZXJFeHByZXNzaW9uXG59IGZyb20gXCIuLi92ZWN0b3Jfc2VhcmNoLmpzXCI7XG5pbXBvcnQgeyB2YWxpZGF0ZUFyZyB9IGZyb20gXCIuL3ZhbGlkYXRlLmpzXCI7XG5pbXBvcnQgeyBjb252ZXhPclVuZGVmaW5lZFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvdmFsdWUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cEFjdGlvblZlY3RvclNlYXJjaChyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIGFzeW5jICh0YWJsZU5hbWUsIGluZGV4TmFtZSwgcXVlcnkpID0+IHtcbiAgICB2YWxpZGF0ZUFyZyh0YWJsZU5hbWUsIDEsIFwidmVjdG9yU2VhcmNoXCIsIFwidGFibGVOYW1lXCIpO1xuICAgIHZhbGlkYXRlQXJnKGluZGV4TmFtZSwgMiwgXCJ2ZWN0b3JTZWFyY2hcIiwgXCJpbmRleE5hbWVcIik7XG4gICAgdmFsaWRhdGVBcmcocXVlcnksIDMsIFwidmVjdG9yU2VhcmNoXCIsIFwicXVlcnlcIik7XG4gICAgaWYgKCFxdWVyeS52ZWN0b3IgfHwgIUFycmF5LmlzQXJyYXkocXVlcnkudmVjdG9yKSB8fCBxdWVyeS52ZWN0b3IubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBFcnJvcihcImB2ZWN0b3JgIG11c3QgYmUgYSBub24tZW1wdHkgQXJyYXkgaW4gdmVjdG9yU2VhcmNoXCIpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgbmV3IFZlY3RvclF1ZXJ5SW1wbChcbiAgICAgIHJlcXVlc3RJZCxcbiAgICAgIHRhYmxlTmFtZSArIFwiLlwiICsgaW5kZXhOYW1lLFxuICAgICAgcXVlcnlcbiAgICApLmNvbGxlY3QoKTtcbiAgfTtcbn1cbmV4cG9ydCBjbGFzcyBWZWN0b3JRdWVyeUltcGwge1xuICBjb25zdHJ1Y3RvcihyZXF1ZXN0SWQsIGluZGV4TmFtZSwgcXVlcnkpIHtcbiAgICB0aGlzLnJlcXVlc3RJZCA9IHJlcXVlc3RJZDtcbiAgICBjb25zdCBmaWx0ZXJzID0gcXVlcnkuZmlsdGVyID8gc2VyaWFsaXplRXhwcmVzc2lvbihxdWVyeS5maWx0ZXIoZmlsdGVyQnVpbGRlckltcGwpKSA6IG51bGw7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHR5cGU6IFwicHJlcGFyaW5nXCIsXG4gICAgICBxdWVyeToge1xuICAgICAgICBpbmRleE5hbWUsXG4gICAgICAgIGxpbWl0OiBxdWVyeS5saW1pdCxcbiAgICAgICAgdmVjdG9yOiBxdWVyeS52ZWN0b3IsXG4gICAgICAgIGV4cHJlc3Npb25zOiBmaWx0ZXJzXG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBhc3luYyBjb2xsZWN0KCkge1xuICAgIGlmICh0aGlzLnN0YXRlLnR5cGUgPT09IFwiY29uc3VtZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBxdWVyeSBpcyBjbG9zZWQgYW5kIGNhbid0IGVtaXQgYW55IG1vcmUgdmFsdWVzLlwiKTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLnN0YXRlLnF1ZXJ5O1xuICAgIHRoaXMuc3RhdGUgPSB7IHR5cGU6IFwiY29uc3VtZWRcIiB9O1xuICAgIGNvbnN0IHsgcmVzdWx0cyB9ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9hY3Rpb25zL3ZlY3RvclNlYXJjaFwiLCB7XG4gICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElkLFxuICAgICAgdmVyc2lvbixcbiAgICAgIHF1ZXJ5XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cbn1cbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uSW1wbCBleHRlbmRzIEZpbHRlckV4cHJlc3Npb24ge1xuICBjb25zdHJ1Y3Rvcihpbm5lcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5pbm5lciA9IGlubmVyO1xuICB9XG4gIHNlcmlhbGl6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lcjtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUV4cHJlc3Npb24oZXhwcikge1xuICBpZiAoZXhwciBpbnN0YW5jZW9mIEV4cHJlc3Npb25JbXBsKSB7XG4gICAgcmV0dXJuIGV4cHIuc2VyaWFsaXplKCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgJGxpdGVyYWw6IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uKGV4cHIpIH07XG4gIH1cbn1cbmV4cG9ydCBjb25zdCBmaWx0ZXJCdWlsZGVySW1wbCA9IHtcbiAgLy8gIENvbXBhcmlzb25zICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGVxKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIGZpZWxkTmFtZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIGZpcnN0IGFyZ3VtZW50IHRvIGBxLmVxYCBtdXN0IGJlIGEgZmllbGQgbmFtZS5cIik7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGVxOiBbXG4gICAgICAgIHNlcmlhbGl6ZUV4cHJlc3Npb24obmV3IEV4cHJlc3Npb25JbXBsKHsgJGZpZWxkOiBmaWVsZE5hbWUgfSkpLFxuICAgICAgICBzZXJpYWxpemVFeHByZXNzaW9uKHZhbHVlKVxuICAgICAgXVxuICAgIH0pO1xuICB9LFxuICAvLyAgTG9naWMgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgb3IoLi4uZXhwcnMpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHsgJG9yOiBleHBycy5tYXAoc2VyaWFsaXplRXhwcmVzc2lvbikgfSk7XG4gIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZWN0b3Jfc2VhcmNoX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOlsicGVyZm9ybUFzeW5jU3lzY2FsbCIsInZlcnNpb24iLCJGaWx0ZXJFeHByZXNzaW9uIiwidmFsaWRhdGVBcmciLCJjb252ZXhPclVuZGVmaW5lZFRvSnNvbiIsInNldHVwQWN0aW9uVmVjdG9yU2VhcmNoIiwicmVxdWVzdElkIiwidGFibGVOYW1lIiwiaW5kZXhOYW1lIiwicXVlcnkiLCJ2ZWN0b3IiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJFcnJvciIsIlZlY3RvclF1ZXJ5SW1wbCIsImNvbGxlY3QiLCJjb25zdHJ1Y3RvciIsImZpbHRlcnMiLCJmaWx0ZXIiLCJzZXJpYWxpemVFeHByZXNzaW9uIiwiZmlsdGVyQnVpbGRlckltcGwiLCJzdGF0ZSIsInR5cGUiLCJsaW1pdCIsImV4cHJlc3Npb25zIiwicmVzdWx0cyIsIkV4cHJlc3Npb25JbXBsIiwiaW5uZXIiLCJzZXJpYWxpemUiLCJleHByIiwiJGxpdGVyYWwiLCJlcSIsImZpZWxkTmFtZSIsInZhbHVlIiwiJGVxIiwiJGZpZWxkIiwib3IiLCJleHBycyIsIiRvciIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.ROUTABLE_HTTP_METHODS),\n/* harmony export */   SearchFilter: () => (/* reexport safe */ _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__.SearchFilter),\n/* harmony export */   actionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.actionGeneric),\n/* harmony export */   anyApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.anyApi),\n/* harmony export */   cronJobs: () => (/* reexport safe */ _cron_js__WEBPACK_IMPORTED_MODULE_5__.cronJobs),\n/* harmony export */   defineSchema: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_8__.defineSchema),\n/* harmony export */   defineTable: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_8__.defineTable),\n/* harmony export */   filterApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.filterApi),\n/* harmony export */   getFunctionName: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.getFunctionName),\n/* harmony export */   httpActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.httpActionGeneric),\n/* harmony export */   httpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.httpRouter),\n/* harmony export */   internalActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalQueryGeneric),\n/* harmony export */   makeFunctionReference: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.makeFunctionReference),\n/* harmony export */   mutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.mutationGeneric),\n/* harmony export */   paginationOptsValidator: () => (/* reexport safe */ _pagination_js__WEBPACK_IMPORTED_MODULE_2__.paginationOptsValidator),\n/* harmony export */   queryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.queryGeneric)\n/* harmony export */ });\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database.js */ \"(ssr)/./node_modules/convex/dist/esm/server/database.js\");\n/* harmony import */ var _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./impl/registration_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\");\n/* harmony import */ var _pagination_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pagination.js */ \"(ssr)/./node_modules/convex/dist/esm/server/pagination.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search_filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storage.js */ \"(ssr)/./node_modules/convex/dist/esm/server/storage.js\");\n/* harmony import */ var _cron_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cron.js */ \"(ssr)/./node_modules/convex/dist/esm/server/cron.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./router.js */ \"(ssr)/./node_modules/convex/dist/esm/server/router.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/convex/dist/esm/server/schema.js\");\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWE7QUFDaUI7QUFTTztBQUNMO0FBQ1c7QUFDZDtBQUNRO0FBQ3VDO0FBTTFEO0FBQ3NDLENBQ3hELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcz84MzkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZGF0YWJhc2UuanNcIjtcbmV4cG9ydCB7XG4gIGFjdGlvbkdlbmVyaWMsXG4gIGh0dHBBY3Rpb25HZW5lcmljLFxuICBtdXRhdGlvbkdlbmVyaWMsXG4gIHF1ZXJ5R2VuZXJpYyxcbiAgaW50ZXJuYWxBY3Rpb25HZW5lcmljLFxuICBpbnRlcm5hbE11dGF0aW9uR2VuZXJpYyxcbiAgaW50ZXJuYWxRdWVyeUdlbmVyaWNcbn0gZnJvbSBcIi4vaW1wbC9yZWdpc3RyYXRpb25faW1wbC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFnaW5hdGlvbi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VhcmNoX2ZpbHRlcl9idWlsZGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdG9yYWdlLmpzXCI7XG5leHBvcnQgeyBjcm9uSm9icyB9IGZyb20gXCIuL2Nyb24uanNcIjtcbmV4cG9ydCB7IGh0dHBSb3V0ZXIsIEh0dHBSb3V0ZXIsIFJPVVRBQkxFX0hUVFBfTUVUSE9EUyB9IGZyb20gXCIuL3JvdXRlci5qc1wiO1xuZXhwb3J0IHtcbiAgYW55QXBpLFxuICBnZXRGdW5jdGlvbk5hbWUsXG4gIG1ha2VGdW5jdGlvblJlZmVyZW5jZSxcbiAgZmlsdGVyQXBpXG59IGZyb20gXCIuL2FwaS5qc1wiO1xuZXhwb3J0IHsgZGVmaW5lVGFibGUsIGRlZmluZVNjaGVtYSB9IGZyb20gXCIuL3NjaGVtYS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOlsiYWN0aW9uR2VuZXJpYyIsImh0dHBBY3Rpb25HZW5lcmljIiwibXV0YXRpb25HZW5lcmljIiwicXVlcnlHZW5lcmljIiwiaW50ZXJuYWxBY3Rpb25HZW5lcmljIiwiaW50ZXJuYWxNdXRhdGlvbkdlbmVyaWMiLCJpbnRlcm5hbFF1ZXJ5R2VuZXJpYyIsImNyb25Kb2JzIiwiaHR0cFJvdXRlciIsIkh0dHBSb3V0ZXIiLCJST1VUQUJMRV9IVFRQX01FVEhPRFMiLCJhbnlBcGkiLCJnZXRGdW5jdGlvbk5hbWUiLCJtYWtlRnVuY3Rpb25SZWZlcmVuY2UiLCJmaWx0ZXJBcGkiLCJkZWZpbmVUYWJsZSIsImRlZmluZVNjaGVtYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index_range_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRange: () => (/* binding */ IndexRange)\n/* harmony export */ });\n\nclass IndexRange {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=index_range_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleF9yYW5nZV9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLE1BQU1BO0lBQ1g7O0dBRUMsR0FDREMsYUFBYyxDQUNkO0FBQ0YsRUFDQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW5kZXhfcmFuZ2VfYnVpbGRlci5qcz9mNTkzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGNsYXNzIEluZGV4UmFuZ2Uge1xuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXhfcmFuZ2VfYnVpbGRlci5qcy5tYXBcbiJdLCJuYW1lcyI6WyJJbmRleFJhbmdlIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/pagination.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/pagination.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paginationOptsValidator: () => (/* binding */ paginationOptsValidator)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n\n\nconst paginationOptsValidator = _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n    numItems: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number(),\n    cursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null()),\n    endCursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null())),\n    id: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n    maximumRowsRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n    maximumBytesRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number())\n}); //# sourceMappingURL=pagination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9wYWdpbmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDOEI7QUFDcEMsTUFBTUMsMEJBQTBCRCxtREFBQ0EsQ0FBQ0UsTUFBTSxDQUFDO0lBQzlDQyxVQUFVSCxtREFBQ0EsQ0FBQ0ksTUFBTTtJQUNsQkMsUUFBUUwsbURBQUNBLENBQUNNLEtBQUssQ0FBQ04sbURBQUNBLENBQUNPLE1BQU0sSUFBSVAsbURBQUNBLENBQUNRLElBQUk7SUFDbENDLFdBQVdULG1EQUFDQSxDQUFDVSxRQUFRLENBQUNWLG1EQUFDQSxDQUFDTSxLQUFLLENBQUNOLG1EQUFDQSxDQUFDTyxNQUFNLElBQUlQLG1EQUFDQSxDQUFDUSxJQUFJO0lBQ2hERyxJQUFJWCxtREFBQ0EsQ0FBQ1UsUUFBUSxDQUFDVixtREFBQ0EsQ0FBQ0ksTUFBTTtJQUN2QlEsaUJBQWlCWixtREFBQ0EsQ0FBQ1UsUUFBUSxDQUFDVixtREFBQ0EsQ0FBQ0ksTUFBTTtJQUNwQ1Msa0JBQWtCYixtREFBQ0EsQ0FBQ1UsUUFBUSxDQUFDVixtREFBQ0EsQ0FBQ0ksTUFBTTtBQUN2QyxHQUFHLENBQ0gsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3BhZ2luYXRpb24uanM/ZTExNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IHYgfSBmcm9tIFwiLi4vdmFsdWVzL3ZhbGlkYXRvci5qc1wiO1xuZXhwb3J0IGNvbnN0IHBhZ2luYXRpb25PcHRzVmFsaWRhdG9yID0gdi5vYmplY3Qoe1xuICBudW1JdGVtczogdi5udW1iZXIoKSxcbiAgY3Vyc29yOiB2LnVuaW9uKHYuc3RyaW5nKCksIHYubnVsbCgpKSxcbiAgZW5kQ3Vyc29yOiB2Lm9wdGlvbmFsKHYudW5pb24odi5zdHJpbmcoKSwgdi5udWxsKCkpKSxcbiAgaWQ6IHYub3B0aW9uYWwodi5udW1iZXIoKSksXG4gIG1heGltdW1Sb3dzUmVhZDogdi5vcHRpb25hbCh2Lm51bWJlcigpKSxcbiAgbWF4aW11bUJ5dGVzUmVhZDogdi5vcHRpb25hbCh2Lm51bWJlcigpKVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdpbmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbInYiLCJwYWdpbmF0aW9uT3B0c1ZhbGlkYXRvciIsIm9iamVjdCIsIm51bUl0ZW1zIiwibnVtYmVyIiwiY3Vyc29yIiwidW5pb24iLCJzdHJpbmciLCJudWxsIiwiZW5kQ3Vyc29yIiwib3B0aW9uYWwiLCJpZCIsIm1heGltdW1Sb3dzUmVhZCIsIm1heGltdW1CeXRlc1JlYWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/pagination.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/router.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/router.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* binding */ HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* binding */ ROUTABLE_HTTP_METHODS),\n/* harmony export */   httpRouter: () => (/* binding */ httpRouter),\n/* harmony export */   normalizeMethod: () => (/* binding */ normalizeMethod)\n/* harmony export */ });\n/* harmony import */ var _impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./impl/syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\n\nconst ROUTABLE_HTTP_METHODS = [\n    \"GET\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"OPTIONS\",\n    \"PATCH\"\n];\nfunction normalizeMethod(method) {\n    if (method === \"HEAD\") return \"GET\";\n    return method;\n}\nconst httpRouter = ()=>new HttpRouter();\nclass HttpRouter {\n    constructor(){\n        this.exactRoutes = /* @__PURE__ */ new Map();\n        this.prefixRoutes = /* @__PURE__ */ new Map();\n        this.isRouter = true;\n        /**\n     * Specify an HttpAction to be used to respond to requests\n     * for an HTTP method (e.g. \"GET\") and a path or pathPrefix.\n     *\n     * Paths must begin with a slash. Path prefixes must also end in a slash.\n     *\n     * ```js\n     * // matches `/profile` (but not `/profile/`)\n     * http.route({ path: \"/profile\", method: \"GET\", handler: getProfile})\n     *\n     * // matches `/profiles/`, `/profiles/abc`, and `/profiles/a/c/b` (but not `/profile`)\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile})\n     * ```\n     */ this.route = (spec)=>{\n            if (!spec.handler) throw new Error(`route requires handler`);\n            if (!spec.method) throw new Error(`route requires method`);\n            const { method, handler } = spec;\n            if (!ROUTABLE_HTTP_METHODS.includes(method)) {\n                throw new Error(`'${method}' is not an allowed HTTP method (like GET, POST, PUT etc.)`);\n            }\n            if (\"path\" in spec) {\n                if (!spec.path.startsWith(\"/\")) {\n                    throw new Error(`path '${spec.path}' does not start with a /`);\n                }\n                const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n                for (const [prefix, _] of prefixes.entries()){\n                    if (spec.path.startsWith(prefix)) {\n                        throw new Error(`${spec.method} path ${spec.path} is shadowed by pathPrefix ${prefix}`);\n                    }\n                }\n                const methods = this.exactRoutes.has(spec.path) ? this.exactRoutes.get(spec.path) : /* @__PURE__ */ new Map();\n                if (methods.has(method)) {\n                    throw new Error(`Path '${spec.path}' for method ${method} already in use`);\n                }\n                methods.set(method, handler);\n                this.exactRoutes.set(spec.path, methods);\n            } else if (\"pathPrefix\" in spec) {\n                if (!spec.pathPrefix.startsWith(\"/\")) {\n                    throw new Error(`path '${spec.pathPrefix}' does not start with a /`);\n                }\n                if (!spec.pathPrefix.endsWith(\"/\")) {\n                    throw new Error(`pathPrefix ${spec.pathPrefix} must end with a /`);\n                }\n                const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n                for (const [prefix, _] of prefixes.entries()){\n                    if (spec.pathPrefix.startsWith(prefix)) {\n                        throw new Error(`${spec.method} pathPrefix ${spec.pathPrefix} is shadowed by pathPrefix ${prefix}`);\n                    }\n                }\n                prefixes.set(spec.pathPrefix, handler);\n                this.prefixRoutes.set(method, prefixes);\n            } else {\n                throw new Error(`Invalid httpRouter route entry: must contain either field 'path' or 'pathPrefix'`);\n            }\n        };\n        /**\n     * Returns a list of routed HTTP actions.\n     *\n     * These are used to populate the list of routes shown in the Functions page of the Convex dashboard.\n     *\n     * @returns - an array of [path, method, endpoint] tuples.\n     */ this.getRoutes = ()=>{\n            const exactPaths = [\n                ...this.exactRoutes.keys()\n            ].sort();\n            const exact = exactPaths.flatMap((path)=>[\n                    ...this.exactRoutes.get(path).keys()\n                ].sort().map((method)=>[\n                        path,\n                        method,\n                        this.exactRoutes.get(path).get(method)\n                    ]));\n            const prefixPathMethods = [\n                ...this.prefixRoutes.keys()\n            ].sort();\n            const prefixes = prefixPathMethods.flatMap((method)=>[\n                    ...this.prefixRoutes.get(method).keys()\n                ].sort().map((pathPrefix)=>[\n                        `${pathPrefix}*`,\n                        method,\n                        this.prefixRoutes.get(method).get(pathPrefix)\n                    ]));\n            return [\n                ...exact,\n                ...prefixes\n            ];\n        };\n        /**\n     * Returns the appropriate HTTP action and its routed request path and method.\n     *\n     * The path and method returned are used for logging and metrics, and should\n     * match up with one of the routes returned by `getRoutes`.\n     *\n     * For example,\n     *\n     * ```js\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile});\n     *\n     * http.lookup(\"/profile/abc\", \"GET\") // returns [getProfile, \"GET\", \"/profile/*\"]\n     *```\n     *\n     * @returns - a tuple [{@link PublicHttpAction}, method, path] or null.\n     */ this.lookup = (path, method)=>{\n            method = normalizeMethod(method);\n            const exactMatch = this.exactRoutes.get(path)?.get(method);\n            if (exactMatch) return [\n                exactMatch,\n                method,\n                path\n            ];\n            const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n            for (const [pathPrefix, endpoint] of prefixes.entries()){\n                if (path.startsWith(pathPrefix)) {\n                    return [\n                        endpoint,\n                        method,\n                        `${pathPrefix}*`\n                    ];\n                }\n            }\n            return null;\n        };\n        /**\n     * Given a JSON string representation of a Request object, return a Response\n     * by routing the request and running the appropriate endpoint or returning\n     * a 404 Response.\n     *\n     * @param argsStr - a JSON string representing a Request object.\n     *\n     * @returns - a Response object.\n     */ this.runRequest = async (argsStr)=>{\n            const request = (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"requestFromConvexJson\", {\n                convexJson: JSON.parse(argsStr)\n            });\n            const pathname = new URL(request.url).pathname;\n            const method = request.method;\n            const match = this.lookup(pathname, method);\n            if (!match) {\n                const response2 = new Response(`No HttpAction routed for ${pathname}`, {\n                    status: 404\n                });\n                return JSON.stringify((0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", {\n                    response: response2\n                }));\n            }\n            const [endpoint, _method, _path] = match;\n            const response = await endpoint.invokeHttpAction(request);\n            return JSON.stringify((0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", {\n                response\n            }));\n        };\n    }\n} //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/router.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/schema.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/schema.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemaDefinition: () => (/* binding */ SchemaDefinition),\n/* harmony export */   TableDefinition: () => (/* binding */ TableDefinition),\n/* harmony export */   defineSchema: () => (/* binding */ defineSchema),\n/* harmony export */   defineTable: () => (/* binding */ defineTable)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n\n\nclass TableDefinition {\n    /**\n   * @internal\n   */ constructor(documentType){\n        this.indexes = [];\n        this.searchIndexes = [];\n        this.vectorIndexes = [];\n        this.documentType = documentType;\n    }\n    /**\n   * Define an index on this table.\n   *\n   * To learn about indexes, see [Defining Indexes](https://docs.convex.dev/using/indexes).\n   *\n   * @param name - The name of the index.\n   * @param fields - The fields to index, in order. Must specify at least one\n   * field.\n   * @returns A {@link TableDefinition} with this index included.\n   */ index(name, fields) {\n        this.indexes.push({\n            indexDescriptor: name,\n            fields\n        });\n        return this;\n    }\n    /**\n   * Define a search index on this table.\n   *\n   * To learn about search indexes, see [Search](https://docs.convex.dev/text-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The search index configuration object.\n   * @returns A {@link TableDefinition} with this search index included.\n   */ searchIndex(name, indexConfig) {\n        this.searchIndexes.push({\n            indexDescriptor: name,\n            searchField: indexConfig.searchField,\n            filterFields: indexConfig.filterFields || []\n        });\n        return this;\n    }\n    /**\n   * Define a vector index on this table.\n   *\n   * To learn about vector indexes, see [Vector Search](https://docs.convex.dev/vector-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The vector index configuration object.\n   * @returns A {@link TableDefinition} with this vector index included.\n   */ vectorIndex(name, indexConfig) {\n        this.vectorIndexes.push({\n            indexDescriptor: name,\n            vectorField: indexConfig.vectorField,\n            dimensions: indexConfig.dimensions,\n            filterFields: indexConfig.filterFields || []\n        });\n        return this;\n    }\n    /**\n   * Work around for https://github.com/microsoft/TypeScript/issues/57035\n   */ self() {\n        return this;\n    }\n    /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */ export() {\n        return {\n            indexes: this.indexes,\n            searchIndexes: this.searchIndexes,\n            vectorIndexes: this.vectorIndexes,\n            documentType: this.documentType.json\n        };\n    }\n}\nfunction defineTable(documentSchema) {\n    if (documentSchema instanceof _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.Validator) {\n        return new TableDefinition(documentSchema);\n    } else {\n        return new TableDefinition(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object(documentSchema));\n    }\n}\nclass SchemaDefinition {\n    /**\n   * @internal\n   */ constructor(tables, options){\n        this.tables = tables;\n        this.schemaValidation = options?.schemaValidation === void 0 ? true : options.schemaValidation;\n    }\n    /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */ export() {\n        return JSON.stringify({\n            tables: Object.entries(this.tables).map(([tableName, definition])=>{\n                const { indexes, searchIndexes, vectorIndexes, documentType } = definition.export();\n                return {\n                    tableName,\n                    indexes,\n                    searchIndexes,\n                    vectorIndexes,\n                    documentType\n                };\n            }),\n            schemaValidation: this.schemaValidation\n        });\n    }\n}\nfunction defineSchema(schema, options) {\n    return new SchemaDefinition(schema, options);\n}\nconst systemSchema = defineSchema({\n    _scheduled_functions: defineTable({\n        name: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n        args: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.array(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.any()),\n        scheduledTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n        completedTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64()),\n        state: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"pending\")\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"inProgress\")\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"success\")\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"failed\"),\n            error: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string()\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"canceled\")\n        }))\n    }),\n    _storage: defineTable({\n        sha256: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n        size: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n        contentType: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string())\n    })\n}); //# sourceMappingURL=schema.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUN5QztBQUMvQyxNQUFNRTtJQUNYOztHQUVDLEdBQ0RDLFlBQVlDLFlBQVksQ0FBRTtRQUN4QixJQUFJLENBQUNDLE9BQU8sR0FBRyxFQUFFO1FBQ2pCLElBQUksQ0FBQ0MsYUFBYSxHQUFHLEVBQUU7UUFDdkIsSUFBSSxDQUFDQyxhQUFhLEdBQUcsRUFBRTtRQUN2QixJQUFJLENBQUNILFlBQVksR0FBR0E7SUFDdEI7SUFDQTs7Ozs7Ozs7O0dBU0MsR0FDREksTUFBTUMsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDbEIsSUFBSSxDQUFDTCxPQUFPLENBQUNNLElBQUksQ0FBQztZQUFFQyxpQkFBaUJIO1lBQU1DO1FBQU87UUFDbEQsT0FBTyxJQUFJO0lBQ2I7SUFDQTs7Ozs7Ozs7R0FRQyxHQUNERyxZQUFZSixJQUFJLEVBQUVLLFdBQVcsRUFBRTtRQUM3QixJQUFJLENBQUNSLGFBQWEsQ0FBQ0ssSUFBSSxDQUFDO1lBQ3RCQyxpQkFBaUJIO1lBQ2pCTSxhQUFhRCxZQUFZQyxXQUFXO1lBQ3BDQyxjQUFjRixZQUFZRSxZQUFZLElBQUksRUFBRTtRQUM5QztRQUNBLE9BQU8sSUFBSTtJQUNiO0lBQ0E7Ozs7Ozs7O0dBUUMsR0FDREMsWUFBWVIsSUFBSSxFQUFFSyxXQUFXLEVBQUU7UUFDN0IsSUFBSSxDQUFDUCxhQUFhLENBQUNJLElBQUksQ0FBQztZQUN0QkMsaUJBQWlCSDtZQUNqQlMsYUFBYUosWUFBWUksV0FBVztZQUNwQ0MsWUFBWUwsWUFBWUssVUFBVTtZQUNsQ0gsY0FBY0YsWUFBWUUsWUFBWSxJQUFJLEVBQUU7UUFDOUM7UUFDQSxPQUFPLElBQUk7SUFDYjtJQUNBOztHQUVDLEdBQ0RJLE9BQU87UUFDTCxPQUFPLElBQUk7SUFDYjtJQUNBOzs7OztHQUtDLEdBQ0RDLFNBQVM7UUFDUCxPQUFPO1lBQ0xoQixTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUNyQkMsZUFBZSxJQUFJLENBQUNBLGFBQWE7WUFDakNDLGVBQWUsSUFBSSxDQUFDQSxhQUFhO1lBQ2pDSCxjQUFjLElBQUksQ0FBQ0EsWUFBWSxDQUFDa0IsSUFBSTtRQUN0QztJQUNGO0FBQ0Y7QUFDTyxTQUFTQyxZQUFZQyxjQUFjO0lBQ3hDLElBQUlBLDBCQUEwQnZCLDJEQUFTQSxFQUFFO1FBQ3ZDLE9BQU8sSUFBSUMsZ0JBQWdCc0I7SUFDN0IsT0FBTztRQUNMLE9BQU8sSUFBSXRCLGdCQUFnQkYsbURBQUNBLENBQUN5QixNQUFNLENBQUNEO0lBQ3RDO0FBQ0Y7QUFDTyxNQUFNRTtJQUNYOztHQUVDLEdBQ0R2QixZQUFZd0IsTUFBTSxFQUFFQyxPQUFPLENBQUU7UUFDM0IsSUFBSSxDQUFDRCxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDRSxnQkFBZ0IsR0FBR0QsU0FBU0MscUJBQXFCLEtBQUssSUFBSSxPQUFPRCxRQUFRQyxnQkFBZ0I7SUFDaEc7SUFDQTs7Ozs7R0FLQyxHQUNEUixTQUFTO1FBQ1AsT0FBT1MsS0FBS0MsU0FBUyxDQUFDO1lBQ3BCSixRQUFRSyxPQUFPQyxPQUFPLENBQUMsSUFBSSxDQUFDTixNQUFNLEVBQUVPLEdBQUcsQ0FBQyxDQUFDLENBQUNDLFdBQVdDLFdBQVc7Z0JBQzlELE1BQU0sRUFBRS9CLE9BQU8sRUFBRUMsYUFBYSxFQUFFQyxhQUFhLEVBQUVILFlBQVksRUFBRSxHQUFHZ0MsV0FBV2YsTUFBTTtnQkFDakYsT0FBTztvQkFDTGM7b0JBQ0E5QjtvQkFDQUM7b0JBQ0FDO29CQUNBSDtnQkFDRjtZQUNGO1lBQ0F5QixrQkFBa0IsSUFBSSxDQUFDQSxnQkFBZ0I7UUFDekM7SUFDRjtBQUNGO0FBQ08sU0FBU1EsYUFBYUMsTUFBTSxFQUFFVixPQUFPO0lBQzFDLE9BQU8sSUFBSUYsaUJBQWlCWSxRQUFRVjtBQUN0QztBQUNBLE1BQU1XLGVBQWVGLGFBQWE7SUFDaENHLHNCQUFzQmpCLFlBQVk7UUFDaENkLE1BQU1ULG1EQUFDQSxDQUFDeUMsTUFBTTtRQUNkQyxNQUFNMUMsbURBQUNBLENBQUMyQyxLQUFLLENBQUMzQyxtREFBQ0EsQ0FBQzRDLEdBQUc7UUFDbkJDLGVBQWU3QyxtREFBQ0EsQ0FBQzhDLE9BQU87UUFDeEJDLGVBQWUvQyxtREFBQ0EsQ0FBQ2dELFFBQVEsQ0FBQ2hELG1EQUFDQSxDQUFDOEMsT0FBTztRQUNuQ0csT0FBT2pELG1EQUFDQSxDQUFDa0QsS0FBSyxDQUNabEQsbURBQUNBLENBQUN5QixNQUFNLENBQUM7WUFBRTBCLE1BQU1uRCxtREFBQ0EsQ0FBQ29ELE9BQU8sQ0FBQztRQUFXLElBQ3RDcEQsbURBQUNBLENBQUN5QixNQUFNLENBQUM7WUFBRTBCLE1BQU1uRCxtREFBQ0EsQ0FBQ29ELE9BQU8sQ0FBQztRQUFjLElBQ3pDcEQsbURBQUNBLENBQUN5QixNQUFNLENBQUM7WUFBRTBCLE1BQU1uRCxtREFBQ0EsQ0FBQ29ELE9BQU8sQ0FBQztRQUFXLElBQ3RDcEQsbURBQUNBLENBQUN5QixNQUFNLENBQUM7WUFBRTBCLE1BQU1uRCxtREFBQ0EsQ0FBQ29ELE9BQU8sQ0FBQztZQUFXQyxPQUFPckQsbURBQUNBLENBQUN5QyxNQUFNO1FBQUcsSUFDeER6QyxtREFBQ0EsQ0FBQ3lCLE1BQU0sQ0FBQztZQUFFMEIsTUFBTW5ELG1EQUFDQSxDQUFDb0QsT0FBTyxDQUFDO1FBQVk7SUFFM0M7SUFDQUUsVUFBVS9CLFlBQVk7UUFDcEJnQyxRQUFRdkQsbURBQUNBLENBQUN5QyxNQUFNO1FBQ2hCZSxNQUFNeEQsbURBQUNBLENBQUM4QyxPQUFPO1FBQ2ZXLGFBQWF6RCxtREFBQ0EsQ0FBQ2dELFFBQVEsQ0FBQ2hELG1EQUFDQSxDQUFDeUMsTUFBTTtJQUNsQztBQUNGLElBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3NjaGVtYS5qcz9iZjQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgdiwgVmFsaWRhdG9yIH0gZnJvbSBcIi4uL3ZhbHVlcy92YWxpZGF0b3IuanNcIjtcbmV4cG9ydCBjbGFzcyBUYWJsZURlZmluaXRpb24ge1xuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihkb2N1bWVudFR5cGUpIHtcbiAgICB0aGlzLmluZGV4ZXMgPSBbXTtcbiAgICB0aGlzLnNlYXJjaEluZGV4ZXMgPSBbXTtcbiAgICB0aGlzLnZlY3RvckluZGV4ZXMgPSBbXTtcbiAgICB0aGlzLmRvY3VtZW50VHlwZSA9IGRvY3VtZW50VHlwZTtcbiAgfVxuICAvKipcbiAgICogRGVmaW5lIGFuIGluZGV4IG9uIHRoaXMgdGFibGUuXG4gICAqXG4gICAqIFRvIGxlYXJuIGFib3V0IGluZGV4ZXMsIHNlZSBbRGVmaW5pbmcgSW5kZXhlc10oaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvdXNpbmcvaW5kZXhlcykuXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGluZGV4LlxuICAgKiBAcGFyYW0gZmllbGRzIC0gVGhlIGZpZWxkcyB0byBpbmRleCwgaW4gb3JkZXIuIE11c3Qgc3BlY2lmeSBhdCBsZWFzdCBvbmVcbiAgICogZmllbGQuXG4gICAqIEByZXR1cm5zIEEge0BsaW5rIFRhYmxlRGVmaW5pdGlvbn0gd2l0aCB0aGlzIGluZGV4IGluY2x1ZGVkLlxuICAgKi9cbiAgaW5kZXgobmFtZSwgZmllbGRzKSB7XG4gICAgdGhpcy5pbmRleGVzLnB1c2goeyBpbmRleERlc2NyaXB0b3I6IG5hbWUsIGZpZWxkcyB9KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICAvKipcbiAgICogRGVmaW5lIGEgc2VhcmNoIGluZGV4IG9uIHRoaXMgdGFibGUuXG4gICAqXG4gICAqIFRvIGxlYXJuIGFib3V0IHNlYXJjaCBpbmRleGVzLCBzZWUgW1NlYXJjaF0oaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvdGV4dC1zZWFyY2gpLlxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBpbmRleC5cbiAgICogQHBhcmFtIGluZGV4Q29uZmlnIC0gVGhlIHNlYXJjaCBpbmRleCBjb25maWd1cmF0aW9uIG9iamVjdC5cbiAgICogQHJldHVybnMgQSB7QGxpbmsgVGFibGVEZWZpbml0aW9ufSB3aXRoIHRoaXMgc2VhcmNoIGluZGV4IGluY2x1ZGVkLlxuICAgKi9cbiAgc2VhcmNoSW5kZXgobmFtZSwgaW5kZXhDb25maWcpIHtcbiAgICB0aGlzLnNlYXJjaEluZGV4ZXMucHVzaCh7XG4gICAgICBpbmRleERlc2NyaXB0b3I6IG5hbWUsXG4gICAgICBzZWFyY2hGaWVsZDogaW5kZXhDb25maWcuc2VhcmNoRmllbGQsXG4gICAgICBmaWx0ZXJGaWVsZHM6IGluZGV4Q29uZmlnLmZpbHRlckZpZWxkcyB8fCBbXVxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBEZWZpbmUgYSB2ZWN0b3IgaW5kZXggb24gdGhpcyB0YWJsZS5cbiAgICpcbiAgICogVG8gbGVhcm4gYWJvdXQgdmVjdG9yIGluZGV4ZXMsIHNlZSBbVmVjdG9yIFNlYXJjaF0oaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvdmVjdG9yLXNlYXJjaCkuXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGluZGV4LlxuICAgKiBAcGFyYW0gaW5kZXhDb25maWcgLSBUaGUgdmVjdG9yIGluZGV4IGNvbmZpZ3VyYXRpb24gb2JqZWN0LlxuICAgKiBAcmV0dXJucyBBIHtAbGluayBUYWJsZURlZmluaXRpb259IHdpdGggdGhpcyB2ZWN0b3IgaW5kZXggaW5jbHVkZWQuXG4gICAqL1xuICB2ZWN0b3JJbmRleChuYW1lLCBpbmRleENvbmZpZykge1xuICAgIHRoaXMudmVjdG9ySW5kZXhlcy5wdXNoKHtcbiAgICAgIGluZGV4RGVzY3JpcHRvcjogbmFtZSxcbiAgICAgIHZlY3RvckZpZWxkOiBpbmRleENvbmZpZy52ZWN0b3JGaWVsZCxcbiAgICAgIGRpbWVuc2lvbnM6IGluZGV4Q29uZmlnLmRpbWVuc2lvbnMsXG4gICAgICBmaWx0ZXJGaWVsZHM6IGluZGV4Q29uZmlnLmZpbHRlckZpZWxkcyB8fCBbXVxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBXb3JrIGFyb3VuZCBmb3IgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L2lzc3Vlcy81NzAzNVxuICAgKi9cbiAgc2VsZigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICAvKipcbiAgICogRXhwb3J0IHRoZSBjb250ZW50cyBvZiB0aGlzIGRlZmluaXRpb24uXG4gICAqXG4gICAqIFRoaXMgaXMgY2FsbGVkIGludGVybmFsbHkgYnkgdGhlIENvbnZleCBmcmFtZXdvcmsuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgZXhwb3J0KCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbmRleGVzOiB0aGlzLmluZGV4ZXMsXG4gICAgICBzZWFyY2hJbmRleGVzOiB0aGlzLnNlYXJjaEluZGV4ZXMsXG4gICAgICB2ZWN0b3JJbmRleGVzOiB0aGlzLnZlY3RvckluZGV4ZXMsXG4gICAgICBkb2N1bWVudFR5cGU6IHRoaXMuZG9jdW1lbnRUeXBlLmpzb25cbiAgICB9O1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lVGFibGUoZG9jdW1lbnRTY2hlbWEpIHtcbiAgaWYgKGRvY3VtZW50U2NoZW1hIGluc3RhbmNlb2YgVmFsaWRhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyBUYWJsZURlZmluaXRpb24oZG9jdW1lbnRTY2hlbWEpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgVGFibGVEZWZpbml0aW9uKHYub2JqZWN0KGRvY3VtZW50U2NoZW1hKSk7XG4gIH1cbn1cbmV4cG9ydCBjbGFzcyBTY2hlbWFEZWZpbml0aW9uIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IodGFibGVzLCBvcHRpb25zKSB7XG4gICAgdGhpcy50YWJsZXMgPSB0YWJsZXM7XG4gICAgdGhpcy5zY2hlbWFWYWxpZGF0aW9uID0gb3B0aW9ucz8uc2NoZW1hVmFsaWRhdGlvbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IG9wdGlvbnMuc2NoZW1hVmFsaWRhdGlvbjtcbiAgfVxuICAvKipcbiAgICogRXhwb3J0IHRoZSBjb250ZW50cyBvZiB0aGlzIGRlZmluaXRpb24uXG4gICAqXG4gICAqIFRoaXMgaXMgY2FsbGVkIGludGVybmFsbHkgYnkgdGhlIENvbnZleCBmcmFtZXdvcmsuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgZXhwb3J0KCkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICB0YWJsZXM6IE9iamVjdC5lbnRyaWVzKHRoaXMudGFibGVzKS5tYXAoKFt0YWJsZU5hbWUsIGRlZmluaXRpb25dKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgaW5kZXhlcywgc2VhcmNoSW5kZXhlcywgdmVjdG9ySW5kZXhlcywgZG9jdW1lbnRUeXBlIH0gPSBkZWZpbml0aW9uLmV4cG9ydCgpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRhYmxlTmFtZSxcbiAgICAgICAgICBpbmRleGVzLFxuICAgICAgICAgIHNlYXJjaEluZGV4ZXMsXG4gICAgICAgICAgdmVjdG9ySW5kZXhlcyxcbiAgICAgICAgICBkb2N1bWVudFR5cGVcbiAgICAgICAgfTtcbiAgICAgIH0pLFxuICAgICAgc2NoZW1hVmFsaWRhdGlvbjogdGhpcy5zY2hlbWFWYWxpZGF0aW9uXG4gICAgfSk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVTY2hlbWEoc2NoZW1hLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgU2NoZW1hRGVmaW5pdGlvbihzY2hlbWEsIG9wdGlvbnMpO1xufVxuY29uc3Qgc3lzdGVtU2NoZW1hID0gZGVmaW5lU2NoZW1hKHtcbiAgX3NjaGVkdWxlZF9mdW5jdGlvbnM6IGRlZmluZVRhYmxlKHtcbiAgICBuYW1lOiB2LnN0cmluZygpLFxuICAgIGFyZ3M6IHYuYXJyYXkodi5hbnkoKSksXG4gICAgc2NoZWR1bGVkVGltZTogdi5mbG9hdDY0KCksXG4gICAgY29tcGxldGVkVGltZTogdi5vcHRpb25hbCh2LmZsb2F0NjQoKSksXG4gICAgc3RhdGU6IHYudW5pb24oXG4gICAgICB2Lm9iamVjdCh7IGtpbmQ6IHYubGl0ZXJhbChcInBlbmRpbmdcIikgfSksXG4gICAgICB2Lm9iamVjdCh7IGtpbmQ6IHYubGl0ZXJhbChcImluUHJvZ3Jlc3NcIikgfSksXG4gICAgICB2Lm9iamVjdCh7IGtpbmQ6IHYubGl0ZXJhbChcInN1Y2Nlc3NcIikgfSksXG4gICAgICB2Lm9iamVjdCh7IGtpbmQ6IHYubGl0ZXJhbChcImZhaWxlZFwiKSwgZXJyb3I6IHYuc3RyaW5nKCkgfSksXG4gICAgICB2Lm9iamVjdCh7IGtpbmQ6IHYubGl0ZXJhbChcImNhbmNlbGVkXCIpIH0pXG4gICAgKVxuICB9KSxcbiAgX3N0b3JhZ2U6IGRlZmluZVRhYmxlKHtcbiAgICBzaGEyNTY6IHYuc3RyaW5nKCksXG4gICAgc2l6ZTogdi5mbG9hdDY0KCksXG4gICAgY29udGVudFR5cGU6IHYub3B0aW9uYWwodi5zdHJpbmcoKSlcbiAgfSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NoZW1hLmpzLm1hcFxuIl0sIm5hbWVzIjpbInYiLCJWYWxpZGF0b3IiLCJUYWJsZURlZmluaXRpb24iLCJjb25zdHJ1Y3RvciIsImRvY3VtZW50VHlwZSIsImluZGV4ZXMiLCJzZWFyY2hJbmRleGVzIiwidmVjdG9ySW5kZXhlcyIsImluZGV4IiwibmFtZSIsImZpZWxkcyIsInB1c2giLCJpbmRleERlc2NyaXB0b3IiLCJzZWFyY2hJbmRleCIsImluZGV4Q29uZmlnIiwic2VhcmNoRmllbGQiLCJmaWx0ZXJGaWVsZHMiLCJ2ZWN0b3JJbmRleCIsInZlY3RvckZpZWxkIiwiZGltZW5zaW9ucyIsInNlbGYiLCJleHBvcnQiLCJqc29uIiwiZGVmaW5lVGFibGUiLCJkb2N1bWVudFNjaGVtYSIsIm9iamVjdCIsIlNjaGVtYURlZmluaXRpb24iLCJ0YWJsZXMiLCJvcHRpb25zIiwic2NoZW1hVmFsaWRhdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJPYmplY3QiLCJlbnRyaWVzIiwibWFwIiwidGFibGVOYW1lIiwiZGVmaW5pdGlvbiIsImRlZmluZVNjaGVtYSIsInNjaGVtYSIsInN5c3RlbVNjaGVtYSIsIl9zY2hlZHVsZWRfZnVuY3Rpb25zIiwic3RyaW5nIiwiYXJncyIsImFycmF5IiwiYW55Iiwic2NoZWR1bGVkVGltZSIsImZsb2F0NjQiLCJjb21wbGV0ZWRUaW1lIiwib3B0aW9uYWwiLCJzdGF0ZSIsInVuaW9uIiwia2luZCIsImxpdGVyYWwiLCJlcnJvciIsIl9zdG9yYWdlIiwic2hhMjU2Iiwic2l6ZSIsImNvbnRlbnRUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/search_filter_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilter: () => (/* binding */ SearchFilter)\n/* harmony export */ });\n\nclass SearchFilter {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=search_filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhO0FBQ04sTUFBTUE7SUFDWDs7R0FFQyxHQUNEQyxhQUFjLENBQ2Q7QUFDRixFQUNBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanM/NjBmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBjbGFzcyBTZWFyY2hGaWx0ZXIge1xuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoX2ZpbHRlcl9idWlsZGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbIlNlYXJjaEZpbHRlciIsImNvbnN0cnVjdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/storage.js":
/*!********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/storage.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBYSxDQUNiLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zdG9yYWdlLmpzPzU2YzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yYWdlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/vector_search.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/vector_search.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterExpression: () => (/* binding */ FilterExpression)\n/* harmony export */ });\n\nclass FilterExpression {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=vector_search.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci92ZWN0b3Jfc2VhcmNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLE1BQU1BO0lBQ1g7O0dBRUMsR0FDREMsYUFBYyxDQUNkO0FBQ0YsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvdmVjdG9yX3NlYXJjaC5qcz9kNGMxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGNsYXNzIEZpbHRlckV4cHJlc3Npb24ge1xuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yX3NlYXJjaC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJGaWx0ZXJFeHByZXNzaW9uIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/vector_search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/base64.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: () => (/* binding */ byteLength),\n/* harmony export */   fromByteArray: () => (/* binding */ fromByteArray),\n/* harmony export */   toByteArray: () => (/* binding */ toByteArray)\n/* harmony export */ });\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = Uint8Array;\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var i = 0, len = code.length; i < len; ++i){\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n}\nrevLookup[\"-\".charCodeAt(0)] = 62;\nrevLookup[\"_\".charCodeAt(0)] = 63;\nfunction getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) {\n        throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    }\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\nfunction byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(_b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 255;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 255;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n    }\n    return arr;\n}\nfunction tripletToBase64(num) {\n    return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n}\nfunction encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);\n        output.push(tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3;\n    var parts = [];\n    var maxChunkLength = 16383;\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength){\n        parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    }\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\");\n    }\n    return parts.join(\"\");\n} //# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexError: () => (/* binding */ ConvexError)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar _a;\n\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\nclass ConvexError extends Error {\n    constructor(data){\n        super(typeof data === \"string\" ? data : (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.stringifyValueForError)(data));\n        this.name = \"ConvexError\";\n        this[_a] = true;\n        this.data = data;\n    }\n}\n_a = IDENTIFYING_FIELD; //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNiLElBQUlBO0FBQ2dEO0FBQ3BELE1BQU1FLG9CQUFvQkMsT0FBT0MsR0FBRyxDQUFDO0FBQzlCLE1BQU1DLG9CQUFvQkM7SUFDL0JDLFlBQVlDLElBQUksQ0FBRTtRQUNoQixLQUFLLENBQUMsT0FBT0EsU0FBUyxXQUFXQSxPQUFPUCxpRUFBc0JBLENBQUNPO1FBQy9ELElBQUksQ0FBQ0MsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDVCxHQUFHLEdBQUc7UUFDWCxJQUFJLENBQUNRLElBQUksR0FBR0E7SUFDZDtBQUNGO0FBQ0FSLEtBQUtFLG1CQUNMLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL21pcm8tY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9lcnJvcnMuanM/NTlkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfYTtcbmltcG9ydCB7IHN0cmluZ2lmeVZhbHVlRm9yRXJyb3IgfSBmcm9tIFwiLi92YWx1ZS5qc1wiO1xuY29uc3QgSURFTlRJRllJTkdfRklFTEQgPSBTeW1ib2wuZm9yKFwiQ29udmV4RXJyb3JcIik7XG5leHBvcnQgY2xhc3MgQ29udmV4RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICBzdXBlcih0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiA/IGRhdGEgOiBzdHJpbmdpZnlWYWx1ZUZvckVycm9yKGRhdGEpKTtcbiAgICB0aGlzLm5hbWUgPSBcIkNvbnZleEVycm9yXCI7XG4gICAgdGhpc1tfYV0gPSB0cnVlO1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cbn1cbl9hID0gSURFTlRJRllJTkdfRklFTEQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOlsiX2EiLCJzdHJpbmdpZnlWYWx1ZUZvckVycm9yIiwiSURFTlRJRllJTkdfRklFTEQiLCJTeW1ib2wiLCJmb3IiLCJDb252ZXhFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJkYXRhIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: () => (/* reexport module object */ _base64_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   ConvexError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError),\n/* harmony export */   Validator: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.Validator),\n/* harmony export */   convexToJson: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson),\n/* harmony export */   jsonToConvex: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex),\n/* harmony export */   v: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.v)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7QUFDMkM7QUFDVjtBQUNSO0FBQ3BCO0FBQ1UsQ0FDNUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWlyby1jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2luZGV4LmpzPzQwNTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgeyBjb252ZXhUb0pzb24sIGpzb25Ub0NvbnZleCB9IGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5leHBvcnQgeyB2LCBWYWxpZGF0b3IgfSBmcm9tIFwiLi92YWxpZGF0b3IuanNcIjtcbmltcG9ydCAqIGFzIEJhc2U2NCBmcm9tIFwiLi9iYXNlNjQuanNcIjtcbmV4cG9ydCB7IEJhc2U2NCB9O1xuZXhwb3J0ICogZnJvbSBcIi4vZXJyb3JzLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjb252ZXhUb0pzb24iLCJqc29uVG9Db252ZXgiLCJ2IiwiVmFsaWRhdG9yIiwiQmFzZTY0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/validator.js":
/*!**********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validator.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Validator: () => (/* binding */ Validator),\n/* harmony export */   v: () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\nclass Validator {\n    /**\n   * @internal\n   */ constructor(json, optional){\n        this.json = json;\n        this.optional = optional;\n    }\n}\nconst v = {\n    id (tableName) {\n        return new Validator({\n            type: \"id\",\n            tableName\n        }, false);\n    },\n    null () {\n        return new Validator({\n            type: \"null\"\n        }, false);\n    },\n    /**\n   * Alias for `v.float64()`\n   */ number () {\n        return new Validator({\n            type: \"number\"\n        }, false);\n    },\n    float64 () {\n        return new Validator({\n            type: \"number\"\n        }, false);\n    },\n    /**\n   * @deprecated Use `v.int64()` instead\n   */ bigint () {\n        return new Validator({\n            type: \"bigint\"\n        }, false);\n    },\n    int64 () {\n        return new Validator({\n            type: \"bigint\"\n        }, false);\n    },\n    boolean () {\n        return new Validator({\n            type: \"boolean\"\n        }, false);\n    },\n    string () {\n        return new Validator({\n            type: \"string\"\n        }, false);\n    },\n    bytes () {\n        return new Validator({\n            type: \"bytes\"\n        }, false);\n    },\n    literal (literal) {\n        const value = (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(literal);\n        return new Validator({\n            type: \"literal\",\n            value\n        }, false);\n    },\n    array (values) {\n        return new Validator({\n            type: \"array\",\n            value: values.json\n        }, false);\n    },\n    object (schema) {\n        return new Validator({\n            type: \"object\",\n            value: Object.fromEntries(Object.entries(schema).map(([k, v2])=>[\n                    k,\n                    {\n                        fieldType: v2.json,\n                        optional: v2.optional\n                    }\n                ]))\n        }, false);\n    },\n    /** @internal */ record (keys, values) {\n        return new Validator({\n            type: \"record\",\n            keys: keys.json,\n            values: {\n                fieldType: values.json,\n                optional: values.optional\n            }\n        }, false);\n    },\n    union (...schemaTypes) {\n        return new Validator({\n            type: \"union\",\n            value: schemaTypes.map((t)=>t.json)\n        }, false);\n    },\n    any () {\n        return new Validator({\n            type: \"any\"\n        }, false);\n    },\n    optional (inner) {\n        return new Validator(inner.json, true);\n    }\n}; //# sourceMappingURL=validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7QUFDNkI7QUFDbkMsTUFBTUM7SUFDWDs7R0FFQyxHQUNEQyxZQUFZQyxJQUFJLEVBQUVDLFFBQVEsQ0FBRTtRQUMxQixJQUFJLENBQUNELElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLFFBQVEsR0FBR0E7SUFDbEI7QUFDRjtBQUNPLE1BQU1DLElBQUk7SUFDZkMsSUFBR0MsU0FBUztRQUNWLE9BQU8sSUFBSU4sVUFBVTtZQUFFTyxNQUFNO1lBQU1EO1FBQVUsR0FBRztJQUNsRDtJQUNBRTtRQUNFLE9BQU8sSUFBSVIsVUFBVTtZQUFFTyxNQUFNO1FBQU8sR0FBRztJQUN6QztJQUNBOztHQUVDLEdBQ0RFO1FBQ0UsT0FBTyxJQUFJVCxVQUFVO1lBQUVPLE1BQU07UUFBUyxHQUFHO0lBQzNDO0lBQ0FHO1FBQ0UsT0FBTyxJQUFJVixVQUFVO1lBQUVPLE1BQU07UUFBUyxHQUFHO0lBQzNDO0lBQ0E7O0dBRUMsR0FDREk7UUFDRSxPQUFPLElBQUlYLFVBQVU7WUFBRU8sTUFBTTtRQUFTLEdBQUc7SUFDM0M7SUFDQUs7UUFDRSxPQUFPLElBQUlaLFVBQVU7WUFBRU8sTUFBTTtRQUFTLEdBQUc7SUFDM0M7SUFDQU07UUFDRSxPQUFPLElBQUliLFVBQVU7WUFBRU8sTUFBTTtRQUFVLEdBQUc7SUFDNUM7SUFDQU87UUFDRSxPQUFPLElBQUlkLFVBQVU7WUFBRU8sTUFBTTtRQUFTLEdBQUc7SUFDM0M7SUFDQVE7UUFDRSxPQUFPLElBQUlmLFVBQVU7WUFBRU8sTUFBTTtRQUFRLEdBQUc7SUFDMUM7SUFDQVMsU0FBUUEsT0FBTztRQUNiLE1BQU1DLFFBQVFsQix1REFBWUEsQ0FBQ2lCO1FBQzNCLE9BQU8sSUFBSWhCLFVBQVU7WUFBRU8sTUFBTTtZQUFXVTtRQUFNLEdBQUc7SUFDbkQ7SUFDQUMsT0FBTUMsTUFBTTtRQUNWLE9BQU8sSUFBSW5CLFVBQVU7WUFBRU8sTUFBTTtZQUFTVSxPQUFPRSxPQUFPakIsSUFBSTtRQUFDLEdBQUc7SUFDOUQ7SUFDQWtCLFFBQU9DLE1BQU07UUFDWCxPQUFPLElBQUlyQixVQUNUO1lBQ0VPLE1BQU07WUFDTlUsT0FBT0ssT0FBT0MsV0FBVyxDQUN2QkQsT0FBT0UsT0FBTyxDQUFDSCxRQUFRSSxHQUFHLENBQUMsQ0FBQyxDQUFDQyxHQUFHQyxHQUFHLEdBQUs7b0JBQ3RDRDtvQkFDQTt3QkFBRUUsV0FBV0QsR0FBR3pCLElBQUk7d0JBQUVDLFVBQVV3QixHQUFHeEIsUUFBUTtvQkFBQztpQkFDN0M7UUFFTCxHQUNBO0lBRUo7SUFDQSxjQUFjLEdBQ2QwQixRQUFPQyxJQUFJLEVBQUVYLE1BQU07UUFDakIsT0FBTyxJQUFJbkIsVUFDVDtZQUNFTyxNQUFNO1lBQ051QixNQUFNQSxLQUFLNUIsSUFBSTtZQUNmaUIsUUFBUTtnQkFBRVMsV0FBV1QsT0FBT2pCLElBQUk7Z0JBQUVDLFVBQVVnQixPQUFPaEIsUUFBUTtZQUFDO1FBQzlELEdBQ0E7SUFFSjtJQUNBNEIsT0FBTSxHQUFHQyxXQUFXO1FBQ2xCLE9BQU8sSUFBSWhDLFVBQ1Q7WUFDRU8sTUFBTTtZQUNOVSxPQUFPZSxZQUFZUCxHQUFHLENBQUMsQ0FBQ1EsSUFBTUEsRUFBRS9CLElBQUk7UUFDdEMsR0FDQTtJQUVKO0lBQ0FnQztRQUNFLE9BQU8sSUFBSWxDLFVBQVU7WUFBRU8sTUFBTTtRQUFNLEdBQUc7SUFDeEM7SUFDQUosVUFBU2dDLEtBQUs7UUFDWixPQUFPLElBQUluQyxVQUFVbUMsTUFBTWpDLElBQUksRUFBRTtJQUNuQztBQUNGLEVBQUUsQ0FDRixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXJvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS92YWx1ZXMvdmFsaWRhdG9yLmpzP2Q1OTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi92YWx1ZS5qc1wiO1xuZXhwb3J0IGNsYXNzIFZhbGlkYXRvciB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKGpzb24sIG9wdGlvbmFsKSB7XG4gICAgdGhpcy5qc29uID0ganNvbjtcbiAgICB0aGlzLm9wdGlvbmFsID0gb3B0aW9uYWw7XG4gIH1cbn1cbmV4cG9ydCBjb25zdCB2ID0ge1xuICBpZCh0YWJsZU5hbWUpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwiaWRcIiwgdGFibGVOYW1lIH0sIGZhbHNlKTtcbiAgfSxcbiAgbnVsbCgpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwibnVsbFwiIH0sIGZhbHNlKTtcbiAgfSxcbiAgLyoqXG4gICAqIEFsaWFzIGZvciBgdi5mbG9hdDY0KClgXG4gICAqL1xuICBudW1iZXIoKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoeyB0eXBlOiBcIm51bWJlclwiIH0sIGZhbHNlKTtcbiAgfSxcbiAgZmxvYXQ2NCgpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwibnVtYmVyXCIgfSwgZmFsc2UpO1xuICB9LFxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGB2LmludDY0KClgIGluc3RlYWRcbiAgICovXG4gIGJpZ2ludCgpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwiYmlnaW50XCIgfSwgZmFsc2UpO1xuICB9LFxuICBpbnQ2NCgpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwiYmlnaW50XCIgfSwgZmFsc2UpO1xuICB9LFxuICBib29sZWFuKCkge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJib29sZWFuXCIgfSwgZmFsc2UpO1xuICB9LFxuICBzdHJpbmcoKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoeyB0eXBlOiBcInN0cmluZ1wiIH0sIGZhbHNlKTtcbiAgfSxcbiAgYnl0ZXMoKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoeyB0eXBlOiBcImJ5dGVzXCIgfSwgZmFsc2UpO1xuICB9LFxuICBsaXRlcmFsKGxpdGVyYWwpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGNvbnZleFRvSnNvbihsaXRlcmFsKTtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwibGl0ZXJhbFwiLCB2YWx1ZSB9LCBmYWxzZSk7XG4gIH0sXG4gIGFycmF5KHZhbHVlcykge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJhcnJheVwiLCB2YWx1ZTogdmFsdWVzLmpzb24gfSwgZmFsc2UpO1xuICB9LFxuICBvYmplY3Qoc2NoZW1hKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoXG4gICAgICB7XG4gICAgICAgIHR5cGU6IFwib2JqZWN0XCIsXG4gICAgICAgIHZhbHVlOiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgICAgT2JqZWN0LmVudHJpZXMoc2NoZW1hKS5tYXAoKFtrLCB2Ml0pID0+IFtcbiAgICAgICAgICAgIGssXG4gICAgICAgICAgICB7IGZpZWxkVHlwZTogdjIuanNvbiwgb3B0aW9uYWw6IHYyLm9wdGlvbmFsIH1cbiAgICAgICAgICBdKVxuICAgICAgICApXG4gICAgICB9LFxuICAgICAgZmFsc2VcbiAgICApO1xuICB9LFxuICAvKiogQGludGVybmFsICovXG4gIHJlY29yZChrZXlzLCB2YWx1ZXMpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcihcbiAgICAgIHtcbiAgICAgICAgdHlwZTogXCJyZWNvcmRcIixcbiAgICAgICAga2V5czoga2V5cy5qc29uLFxuICAgICAgICB2YWx1ZXM6IHsgZmllbGRUeXBlOiB2YWx1ZXMuanNvbiwgb3B0aW9uYWw6IHZhbHVlcy5vcHRpb25hbCB9XG4gICAgICB9LFxuICAgICAgZmFsc2VcbiAgICApO1xuICB9LFxuICB1bmlvbiguLi5zY2hlbWFUeXBlcykge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKFxuICAgICAge1xuICAgICAgICB0eXBlOiBcInVuaW9uXCIsXG4gICAgICAgIHZhbHVlOiBzY2hlbWFUeXBlcy5tYXAoKHQpID0+IHQuanNvbilcbiAgICAgIH0sXG4gICAgICBmYWxzZVxuICAgICk7XG4gIH0sXG4gIGFueSgpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwiYW55XCIgfSwgZmFsc2UpO1xuICB9LFxuICBvcHRpb25hbChpbm5lcikge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKGlubmVyLmpzb24sIHRydWUpO1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdG9yLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNvbnZleFRvSnNvbiIsIlZhbGlkYXRvciIsImNvbnN0cnVjdG9yIiwianNvbiIsIm9wdGlvbmFsIiwidiIsImlkIiwidGFibGVOYW1lIiwidHlwZSIsIm51bGwiLCJudW1iZXIiLCJmbG9hdDY0IiwiYmlnaW50IiwiaW50NjQiLCJib29sZWFuIiwic3RyaW5nIiwiYnl0ZXMiLCJsaXRlcmFsIiwidmFsdWUiLCJhcnJheSIsInZhbHVlcyIsIm9iamVjdCIsInNjaGVtYSIsIk9iamVjdCIsImZyb21FbnRyaWVzIiwiZW50cmllcyIsIm1hcCIsImsiLCJ2MiIsImZpZWxkVHlwZSIsInJlY29yZCIsImtleXMiLCJ1bmlvbiIsInNjaGVtYVR5cGVzIiwidCIsImFueSIsImlubmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/value.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/value.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64ToBigInt: () => (/* binding */ base64ToBigInt),\n/* harmony export */   bigIntToBase64: () => (/* binding */ bigIntToBase64),\n/* harmony export */   convexOrUndefinedToJson: () => (/* binding */ convexOrUndefinedToJson),\n/* harmony export */   convexToJson: () => (/* binding */ convexToJson),\n/* harmony export */   jsonToConvex: () => (/* binding */ jsonToConvex),\n/* harmony export */   modernBase64ToBigInt: () => (/* binding */ modernBase64ToBigInt),\n/* harmony export */   modernBigIntToBase64: () => (/* binding */ modernBigIntToBase64),\n/* harmony export */   patchValueToJson: () => (/* binding */ patchValueToJson),\n/* harmony export */   slowBase64ToBigInt: () => (/* binding */ slowBase64ToBigInt),\n/* harmony export */   slowBigIntToBase64: () => (/* binding */ slowBigIntToBase64),\n/* harmony export */   stringifyValueForError: () => (/* binding */ stringifyValueForError)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n\n\n\nconst LITTLE_ENDIAN = true;\nconst MIN_INT64 = BigInt(\"-9223372036854775808\");\nconst MAX_INT64 = BigInt(\"9223372036854775807\");\nconst ZERO = BigInt(\"0\");\nconst EIGHT = BigInt(\"8\");\nconst TWOFIFTYSIX = BigInt(\"256\");\nfunction isSpecial(n) {\n    return Number.isNaN(n) || !Number.isFinite(n) || Object.is(n, -0);\n}\nfunction slowBigIntToBase64(value) {\n    if (value < ZERO) {\n        value -= MIN_INT64 + MIN_INT64;\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2 === 1) hex = \"0\" + hex;\n    const bytes = new Uint8Array(new ArrayBuffer(8));\n    let i = 0;\n    for (const hexByte of hex.match(/.{2}/g).reverse()){\n        bytes.set([\n            parseInt(hexByte, 16)\n        ], i++);\n        value >>= EIGHT;\n    }\n    return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(bytes);\n}\nfunction slowBase64ToBigInt(encoded) {\n    const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n    if (integerBytes.byteLength !== 8) {\n        throw new Error(`Received ${integerBytes.byteLength} bytes, expected 8 for $integer`);\n    }\n    let value = ZERO;\n    let power = ZERO;\n    for (const byte of integerBytes){\n        value += BigInt(byte) * TWOFIFTYSIX ** power;\n        power++;\n    }\n    if (value > MAX_INT64) {\n        value += MIN_INT64 + MIN_INT64;\n    }\n    return value;\n}\nfunction modernBigIntToBase64(value) {\n    if (value < MIN_INT64 || MAX_INT64 < value) {\n        throw new Error(`BigInt ${value} does not fit into a 64-bit signed integer.`);\n    }\n    const buffer = new ArrayBuffer(8);\n    new DataView(buffer).setBigInt64(0, value, true);\n    return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer));\n}\nfunction modernBase64ToBigInt(encoded) {\n    const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n    if (integerBytes.byteLength !== 8) {\n        throw new Error(`Received ${integerBytes.byteLength} bytes, expected 8 for $integer`);\n    }\n    const intBytesView = new DataView(integerBytes.buffer);\n    return intBytesView.getBigInt64(0, true);\n}\nconst bigIntToBase64 = DataView.prototype.setBigInt64 ? modernBigIntToBase64 : slowBigIntToBase64;\nconst base64ToBigInt = DataView.prototype.getBigInt64 ? modernBase64ToBigInt : slowBase64ToBigInt;\nconst MAX_IDENTIFIER_LEN = 1024;\nfunction validateObjectField(k) {\n    if (k.length === 0) {\n        throw new Error(\"Empty field names are disallowed.\");\n    }\n    if (k.length > MAX_IDENTIFIER_LEN) {\n        throw new Error(`Field name ${k} exceeds maximum field name length ${MAX_IDENTIFIER_LEN}.`);\n    }\n    if (k.startsWith(\"$\")) {\n        throw new Error(`Field name ${k} starts with a '$', which is reserved.`);\n    }\n    for(let i = 0; i < k.length; i += 1){\n        const charCode = k.charCodeAt(i);\n        if (charCode < 32 || charCode >= 127) {\n            throw new Error(`Field name ${k} has invalid character '${k[i]}': Field names can only contain non-control ASCII characters`);\n        }\n    }\n}\nfunction jsonToConvexInternal(value, allowMapsAndSets) {\n    if (value === null) {\n        return value;\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return value.map((value2)=>jsonToConvexInternal(value2, allowMapsAndSets));\n    }\n    if (typeof value !== \"object\") {\n        throw new Error(`Unexpected type of ${value}`);\n    }\n    const entries = Object.entries(value);\n    if (entries.length === 1) {\n        const key = entries[0][0];\n        if (key === \"$bytes\") {\n            if (typeof value.$bytes !== \"string\") {\n                throw new Error(`Malformed $bytes field on ${value}`);\n            }\n            return _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$bytes).buffer;\n        }\n        if (key === \"$integer\") {\n            if (typeof value.$integer !== \"string\") {\n                throw new Error(`Malformed $integer field on ${value}`);\n            }\n            return base64ToBigInt(value.$integer);\n        }\n        if (key === \"$float\") {\n            if (typeof value.$float !== \"string\") {\n                throw new Error(`Malformed $float field on ${value}`);\n            }\n            const floatBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$float);\n            if (floatBytes.byteLength !== 8) {\n                throw new Error(`Received ${floatBytes.byteLength} bytes, expected 8 for $float`);\n            }\n            const floatBytesView = new DataView(floatBytes.buffer);\n            const float = floatBytesView.getFloat64(0, LITTLE_ENDIAN);\n            if (!isSpecial(float)) {\n                throw new Error(`Float ${float} should be encoded as a number`);\n            }\n            return float;\n        }\n        if (key === \"$set\") {\n            if (!Array.isArray(value.$set)) {\n                throw new Error(`Malformed $set field on ${value}`);\n            }\n            if (!allowMapsAndSets) {\n                throw new Error(`Received a Set which is no longer supported as a Convex type, with values: ${value.$set.join(\", \")}.`);\n            }\n            return new Set(value.$set.map((value2)=>jsonToConvexInternal(value2, allowMapsAndSets)));\n        }\n        if (key === \"$map\") {\n            if (!Array.isArray(value.$map)) {\n                throw new Error(`Malformed $map field on ${value}`);\n            }\n            if (!allowMapsAndSets) {\n                throw new Error(`Received a Map which is no longer supported as a Convex type, with entries: ${value.$map.join(\", \")}.`);\n            }\n            const map = /* @__PURE__ */ new Map();\n            for (const pair of value.$map){\n                if (!Array.isArray(pair) || pair.length !== 2) {\n                    throw new Error(`Malformed pair in $map ${value}`);\n                }\n                const k = jsonToConvexInternal(pair[0], allowMapsAndSets);\n                const v = jsonToConvexInternal(pair[1], allowMapsAndSets);\n                map.set(k, v);\n            }\n            return map;\n        }\n    }\n    const out = {};\n    for (const [k, v] of Object.entries(value)){\n        validateObjectField(k);\n        out[k] = jsonToConvexInternal(v, allowMapsAndSets);\n    }\n    return out;\n}\nfunction jsonToConvex(value, allowMapsAndSets = false) {\n    return jsonToConvexInternal(value, allowMapsAndSets);\n}\nfunction stringifyValueForError(value) {\n    return JSON.stringify(value, (_key, value2)=>{\n        if (value2 === void 0) {\n            return \"undefined\";\n        }\n        if (typeof value2 === \"bigint\") {\n            return `${value2.toString()}n`;\n        }\n        return value2;\n    });\n}\nfunction convexToJsonInternal(value, originalValue, context, includeTopLevelUndefined, allowMapsAndSets) {\n    if (value === void 0) {\n        const contextText = context && ` (present at path ${context} in original object ${stringifyValueForError(originalValue)})`;\n        throw new Error(`undefined is not a valid Convex value${contextText}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`);\n    }\n    if (value === null) {\n        return value;\n    }\n    if (typeof value === \"bigint\") {\n        if (value < MIN_INT64 || MAX_INT64 < value) {\n            throw new Error(`BigInt ${value} does not fit into a 64-bit signed integer.`);\n        }\n        return {\n            $integer: bigIntToBase64(value)\n        };\n    }\n    if (typeof value === \"number\") {\n        if (isSpecial(value)) {\n            const buffer = new ArrayBuffer(8);\n            new DataView(buffer).setFloat64(0, value, LITTLE_ENDIAN);\n            return {\n                $float: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer))\n            };\n        } else {\n            return value;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if (value instanceof ArrayBuffer) {\n        return {\n            $bytes: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(value))\n        };\n    }\n    if (Array.isArray(value)) {\n        return value.map((value2, i)=>convexToJsonInternal(value2, originalValue, context + `[${i}]`, false, allowMapsAndSets));\n    }\n    if (value instanceof Set) {\n        if (!allowMapsAndSets) {\n            throw new Error(errorMessageForUnsupportedType(context, \"Set\", [\n                ...value\n            ], originalValue));\n        }\n        return {\n            $set: [\n                ...value\n            ].map((value2, i)=>convexToJsonInternal(value2, originalValue, context + `.keys()[${i}]`, false, allowMapsAndSets))\n        };\n    }\n    if (value instanceof Map) {\n        if (!allowMapsAndSets) {\n            throw new Error(errorMessageForUnsupportedType(context, \"Map\", [\n                ...value\n            ], originalValue));\n        }\n        return {\n            $map: [\n                ...value\n            ].map(([k, v], i)=>{\n                const jsonKey = convexToJsonInternal(k, originalValue, context + `.keys()[${i}]`, false, allowMapsAndSets);\n                const jsonValue = convexToJsonInternal(v, originalValue, context + `.values()[${i}]`, false, allowMapsAndSets);\n                return [\n                    jsonKey,\n                    jsonValue\n                ];\n            })\n        };\n    }\n    if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isSimpleObject)(value)) {\n        const theType = value?.constructor?.name;\n        const typeName = theType ? `${theType} ` : \"\";\n        throw new Error(errorMessageForUnsupportedType(context, typeName, value, originalValue));\n    }\n    const out = {};\n    const entries = Object.entries(value);\n    entries.sort(([k1, _v1], [k2, _v2])=>k1 === k2 ? 0 : k1 < k2 ? -1 : 1);\n    for (const [k, v] of entries){\n        if (v !== void 0) {\n            validateObjectField(k);\n            out[k] = convexToJsonInternal(v, originalValue, context + `.${k}`, false, allowMapsAndSets);\n        } else if (includeTopLevelUndefined) {\n            validateObjectField(k);\n            out[k] = convexOrUndefinedToJsonInternal(v, originalValue, context + `.${k}`);\n        }\n    }\n    return out;\n}\nfunction errorMessageForUnsupportedType(context, typeName, value, originalValue) {\n    if (context) {\n        return `${typeName}${stringifyValueForError(value)} is not a supported Convex type (present at path ${context} in original object ${stringifyValueForError(originalValue)}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`;\n    } else {\n        return `${typeName}${stringifyValueForError(value)} is not a supported Convex type.`;\n    }\n}\nfunction convexOrUndefinedToJsonInternal(value, originalValue, context) {\n    if (value === void 0) {\n        return {\n            $undefined: null\n        };\n    } else {\n        if (originalValue === void 0) {\n            throw new Error(`Programming error. Current value is ${stringifyValueForError(value)} but original value is undefined`);\n        }\n        return convexToJsonInternal(value, originalValue, context, false, false);\n    }\n}\nfunction convexToJson(value, allowMapsAndSets = false) {\n    return convexToJsonInternal(value, value, \"\", false, allowMapsAndSets);\n}\nfunction convexOrUndefinedToJson(value) {\n    return convexOrUndefinedToJsonInternal(value, value, \"\");\n}\nfunction patchValueToJson(value) {\n    return convexToJsonInternal(value, value, \"\", true, false);\n} //# sourceMappingURL=value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/value.js\n");

/***/ })

};
;